

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 04 14:56:08 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_straightLineTest
    52                           	FNCALL	_main,_robotMove
    53                           	FNCALL	_main,_robotTurn
    54                           	FNCALL	_main,_scan360
    55                           	FNCALL	_main,_rotate
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_ChargeMode
    60                           	FNCALL	_straightLineTest,_UpdateDisplay
    61                           	FNCALL	_straightLineTest,_robotTurn
    62                           	FNCALL	_straightLineTest,_robotMoveSpeed
    63                           	FNCALL	_robotMove,_ser_putch
    64                           	FNCALL	_robotMove,_robot_read
    65                           	FNCALL	_robotMove,_UpdateDisplay
    66                           	FNCALL	_scan360,_readAvgDistance
    67                           	FNCALL	_scan360,_rotate
    68                           	FNCALL	_scan360,_UpdateDisplay
    69                           	FNCALL	_ChargeMode,_ser_putch
    70                           	FNCALL	_ChargeMode,_UpdateDisplay
    71                           	FNCALL	_robotMoveSpeed,_ser_putch
    72                           	FNCALL	_robotMoveSpeed,_robot_read
    73                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    74                           	FNCALL	_robotMoveSpeed,_abs
    75                           	FNCALL	_readAvgDistance,_readDistance
    76                           	FNCALL	_readAvgDistance,___lwdiv
    77                           	FNCALL	_readAvgDistance,_ADCconvert
    78                           	FNCALL	_UpdateDisplay,_lcd_write_control
    79                           	FNCALL	_UpdateDisplay,_sprintf
    80                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    81                           	FNCALL	_UpdateDisplay,_lcd_write_string
    82                           	FNCALL	_UpdateDisplay,___awmod
    83                           	FNCALL	_init,_ser_init
    84                           	FNCALL	_init,_init_adc
    85                           	FNCALL	_init,_lcd_init
    86                           	FNCALL	_init,_robo_init
    87                           	FNCALL	_readDistance,_adc_read_channel
    88                           	FNCALL	_robot_read,_ser_putch
    89                           	FNCALL	_robot_read,_ser_getch
    90                           	FNCALL	_lcd_init,_lcd_write_control
    91                           	FNCALL	_lcd_write_string,_lcd_write_data
    92                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    93                           	FNCALL	___awtoft,___ftpack
    94                           	FNCALL	___ftmul,___ftpack
    95                           	FNCALL	_abs,___wmul
    96                           	FNCALL	_ser_getch,_ser_isrx
    97                           	FNCALL	_sprintf,___lwdiv
    98                           	FNCALL	_sprintf,___lwmod
    99                           	FNCALL	_ADCconvert,___wmul
   100                           	FNCALL	_ADCconvert,___lwdiv
   101                           	FNCALL	_rotate,_spi_transfer
   102                           	FNCALL	_robotTurn,_ser_putch
   103                           	FNCALL	_robo_init,_ser_putch
   104                           	FNCALL	_adc_read_channel,_adc_read
   105                           	FNROOT	_main
   106                           	FNCALL	_isr1,i1___lwmod
   107                           	FNCALL	_isr1,_ReadButtons
   108                           	FNCALL	_ReadButtons,_Debounce
   109                           	FNCALL	intlevel1,_isr1
   110                           	global	intlevel1
   111                           	FNROOT	intlevel1
   112                           	global	_menuStrings
   113                           	global	_shortMenuStrings
   114                           	global	_assignedSpeed
   115                           	global	_current_step
   116                           psect	idataBANK1,class=CODE,space=0,delta=2
   117                           global __pidataBANK1
   118  08C4                     __pidataBANK1:
   119                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
   120                           	line	32
   121                           
   122                           ;initializer for _menuStrings
   123  08C4  346A               	retlw	(STR_1-__stringbase)&0ffh
   124  08C5  3461               	retlw	(STR_2-__stringbase)&0ffh
   125  08C6  347C               	retlw	(STR_3-__stringbase)&0ffh
   126  08C7  3485               	retlw	(STR_4-__stringbase)&0ffh
   127  08C8  3473               	retlw	(STR_5-__stringbase)&0ffh
   128  08C9  3458               	retlw	(STR_6-__stringbase)&0ffh
   129                           	line	33
   130                           
   131                           ;initializer for _shortMenuStrings
   132  08CA  34A9               	retlw	(STR_7-__stringbase)&0ffh
   133  08CB  34AD               	retlw	(STR_8-__stringbase)&0ffh
   134  08CC  3495               	retlw	(STR_9-__stringbase)&0ffh
   135  08CD  34A1               	retlw	(STR_10-__stringbase)&0ffh
   136  08CE  34B1               	retlw	(STR_11-__stringbase)&0ffh
   137  08CF  34A5               	retlw	(STR_12-__stringbase)&0ffh
   138                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.h"
   139                           	line	7
   140                           
   141                           ;initializer for _assignedSpeed
   142  08D0  3464               	retlw	064h
   143  08D1  3400               	retlw	0
   144                           
   145                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\steppermotor.c"
   146                           	line	30
   147                           
   148                           ;initializer for _current_step
   149  08D2  343C               	retlw	03Ch
   150                           	global	_dpowers
   151                           psect	strings,class=STRING,delta=2
   152                           global __pstrings
   153  0800                     __pstrings:
   154                           ;	global	stringdir,stringtab,__stringbase
   155  0800                     stringtab:
   156                           ;	String table - string pointers are 1 byte each
   157  0800  1BFF               	btfsc	(btemp+1),7
   158  0801  280A               	ljmp	stringcode
   159  0802  1383               	bcf	status,7
   160  0803  187F               	btfsc	(btemp+1),0
   161  0804  1783               	bsf	status,7
   162  0805  0800               	movf	indf,w
   163  0806  0A84               	incf fsr
   164  0807  1903               skipnz
   165  0808  0AFF               incf btemp+1
   166  0809  0008               	return
   167  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   168  080A  3008               movlw high(stringdir)
   169  080B  008A               movwf pclath
   170  080C  0804               movf fsr,w
   171  080D  0A84               incf fsr
   172  080E  0782               	addwf pc
   173  080F                     __stringbase:
   174  080F  3400               	retlw	0
   175                           psect	strings
   176                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   177                           	line	350
   178  0810                     _dpowers:
   179  0810  3401               	retlw	01h
   180  0811  3400               	retlw	0
   181                           
   182  0812  340A               	retlw	0Ah
   183  0813  3400               	retlw	0
   184                           
   185  0814  3464               	retlw	064h
   186  0815  3400               	retlw	0
   187                           
   188  0816  34E8               	retlw	0E8h
   189  0817  3403               	retlw	03h
   190                           
   191  0818  3410               	retlw	010h
   192  0819  3427               	retlw	027h
   193                           
   194                           	global	_dpowers
   195                           	global	_adcVal
   196                           	global	_BumpSensors
   197                           	global	_rxiptr
   198                           	global	_rxoptr
   199                           	global	_txiptr
   200                           	global	UpdateDisplay@F1236
   201                           	global	_txfifo
   202                           	global	_buttonPressed
   203                           	global	_CenterPressed
   204                           	global	_CenterReleased
   205                           	global	_DownPressed
   206                           	global	_DownReleased
   207                           	global	_LeftPressed
   208                           	global	_LeftReleased
   209                           	global	_RTC_FLAG_10MS
   210                           	global	_RTC_FLAG_1MS
   211                           	global	_RTC_FLAG_250MS
   212                           	global	_RTC_FLAG_500MS
   213                           	global	_RTC_FLAG_50MS
   214                           	global	_RightPressed
   215                           	global	_RightReleased
   216                           	global	_UpPressed
   217                           	global	_UpReleased
   218                           	global	_rxfifo
   219                           	global	_RTC_Counter
   220                           	global	_d2travel
   221                           	global	_distTravelled
   222                           	global	_dist_high
   223                           	global	_dist_low
   224                           	global	_distance
   225                           	global	_pos
   226                           	global	_test
   227                           	global	_total
   228                           	global	_totalSteps
   229                           	global	_CenterDebounceCount
   230                           	global	_DistHighByte
   231                           	global	_DistLowByte
   232                           	global	_DownDebounceCount
   233                           	global	_LeftDebounceCount
   234                           	global	_RightDebounceCount
   235                           	global	_UpDebounceCount
   236                           	global	_currentMenu
   237                           	global	_current_direction
   238                           	global	_highByte
   239                           	global	_lowByte
   240                           	global	_ser_tmp
   241                           	global	_serialInput
   242                           	global	_turnhighByte
   243                           	global	_turnlowByte
   244                           	global	_txoptr
   245                           	global	_ADCON0
   246  001F                     _ADCON0	set	31
   247                           	global	_ADRESH
   248  001E                     _ADRESH	set	30
   249                           	global	_PORTA
   250  0005                     _PORTA	set	5
   251                           	global	_PORTC
   252  0007                     _PORTC	set	7
   253                           	global	_PORTD
   254  0008                     _PORTD	set	8
   255                           	global	_PORTE
   256  0009                     _PORTE	set	9
   257                           	global	_RCREG
   258  001A                     _RCREG	set	26
   259                           	global	_SSPBUF
   260  0013                     _SSPBUF	set	19
   261                           	global	_SSPCON
   262  0014                     _SSPCON	set	20
   263                           	global	_TMR0
   264  0001                     _TMR0	set	1
   265                           	global	_TXREG
   266  0019                     _TXREG	set	25
   267                           	global	AT25256A@CS0
   268  0038                     AT25256A@CS0	set	56
   269                           	global	AT25256A@CS1
   270  0039                     AT25256A@CS1	set	57
   271                           	global	_CARRY
   272  0018                     _CARRY	set	24
   273                           	global	_CHS0
   274  00FB                     _CHS0	set	251
   275                           	global	_CHS1
   276  00FC                     _CHS1	set	252
   277                           	global	_CHS2
   278  00FD                     _CHS2	set	253
   279                           	global	_CREN
   280  00C4                     _CREN	set	196
   281                           	global	_GIE
   282  005F                     _GIE	set	95
   283                           	global	_GO
   284  00FA                     _GO	set	250
   285                           	global	_OERR
   286  00C1                     _OERR	set	193
   287                           	global	_PEIE
   288  005E                     _PEIE	set	94
   289                           	global	_RB0
   290  0030                     _RB0	set	48
   291                           	global	_RB2
   292  0032                     _RB2	set	50
   293                           	global	_RB3
   294  0033                     _RB3	set	51
   295                           	global	_RB4
   296  0034                     _RB4	set	52
   297                           	global	_RB5
   298  0035                     _RB5	set	53
   299                           	global	_RB6
   300  0036                     _RB6	set	54
   301                           	global	_RC0
   302  0038                     _RC0	set	56
   303                           	global	_RC1
   304  0039                     _RC1	set	57
   305                           	global	_RC2
   306  003A                     _RC2	set	58
   307                           	global	_RCIF
   308  0065                     _RCIF	set	101
   309                           	global	_RE0
   310  0048                     _RE0	set	72
   311                           	global	_RE1
   312  0049                     _RE1	set	73
   313                           	global	_RE2
   314  004A                     _RE2	set	74
   315                           	global	_RX9
   316  00C6                     _RX9	set	198
   317                           	global	_SPEN
   318  00C7                     _SPEN	set	199
   319                           	global	_SSPIF
   320  0063                     _SSPIF	set	99
   321                           	global	_TMR0IE
   322  005D                     _TMR0IE	set	93
   323                           	global	_TMR0IF
   324  005A                     _TMR0IF	set	90
   325                           	global	_TXIF
   326  0064                     _TXIF	set	100
   327                           	global	_ADCON1
   328  009F                     _ADCON1	set	159
   329                           	global	_ADRESL
   330  009E                     _ADRESL	set	158
   331                           	global	_OPTION_REG
   332  0081                     _OPTION_REG	set	129
   333                           	global	_SPBRG
   334  0099                     _SPBRG	set	153
   335                           	global	_SSPSTAT
   336  0094                     _SSPSTAT	set	148
   337                           	global	_TRISA
   338  0085                     _TRISA	set	133
   339                           	global	_TRISB
   340  0086                     _TRISB	set	134
   341                           	global	_TRISC
   342  0087                     _TRISC	set	135
   343                           	global	_TRISD
   344  0088                     _TRISD	set	136
   345                           	global	_TRISE
   346  0089                     _TRISE	set	137
   347                           	global	_BRGH
   348  04C2                     _BRGH	set	1218
   349                           	global	_RCIE
   350  0465                     _RCIE	set	1125
   351                           	global	_SYNC
   352  04C4                     _SYNC	set	1220
   353                           	global	_TX9
   354  04C6                     _TX9	set	1222
   355                           	global	_TXEN
   356  04C5                     _TXEN	set	1221
   357                           	global	_TXIE
   358  0464                     _TXIE	set	1124
   359                           	global	_EEADR
   360  010D                     _EEADR	set	269
   361                           	global	_EEDATA
   362  010C                     _EEDATA	set	268
   363                           	global	_EECON1
   364  018C                     _EECON1	set	396
   365                           	global	_EECON2
   366  018D                     _EECON2	set	397
   367                           	global	_RD
   368  0C60                     _RD	set	3168
   369                           	global	_WR
   370  0C61                     _WR	set	3169
   371                           	global	_WREN
   372  0C62                     _WREN	set	3170
   373                           	
   374  081A                     STR_19:	
   375  081A  3420               	retlw	32	;' '
   376  081B  3443               	retlw	67	;'C'
   377  081C  3468               	retlw	104	;'h'
   378  081D  3461               	retlw	97	;'a'
   379  081E  3472               	retlw	114	;'r'
   380  081F  3467               	retlw	103	;'g'
   381  0820  3469               	retlw	105	;'i'
   382  0821  346E               	retlw	110	;'n'
   383  0822  3467               	retlw	103	;'g'
   384  0823  3420               	retlw	32	;' '
   385  0824  344D               	retlw	77	;'M'
   386  0825  346F               	retlw	111	;'o'
   387  0826  3464               	retlw	100	;'d'
   388  0827  3465               	retlw	101	;'e'
   389  0828  3420               	retlw	32	;' '
   390  0829  3400               	retlw	0
   391                           psect	strings
   392                           	
   393  082A                     STR_15:	
   394  082A  345A               	retlw	90	;'Z'
   395  082B  3465               	retlw	101	;'e'
   396  082C  3472               	retlw	114	;'r'
   397  082D  346F               	retlw	111	;'o'
   398  082E  3420               	retlw	32	;' '
   399  082F  3453               	retlw	83	;'S'
   400  0830  3474               	retlw	116	;'t'
   401  0831  3465               	retlw	101	;'e'
   402  0832  3470               	retlw	112	;'p'
   403  0833  345F               	retlw	95	;'_'
   404  0834  344D               	retlw	77	;'M'
   405  0835  346F               	retlw	111	;'o'
   406  0836  3474               	retlw	116	;'t'
   407  0837  346F               	retlw	111	;'o'
   408  0838  3472               	retlw	114	;'r'
   409  0839  3400               	retlw	0
   410                           psect	strings
   411                           	
   412  083A                     STR_13:	
   413  083A  3441               	retlw	65	;'A'
   414  083B  3444               	retlw	68	;'D'
   415  083C  3443               	retlw	67	;'C'
   416  083D  343A               	retlw	58	;':'
   417  083E  3425               	retlw	37	;'%'
   418  083F  3464               	retlw	100	;'d'
   419  0840  3420               	retlw	32	;' '
   420  0841  3444               	retlw	68	;'D'
   421  0842  3469               	retlw	105	;'i'
   422  0843  3473               	retlw	115	;'s'
   423  0844  3474               	retlw	116	;'t'
   424  0845  343A               	retlw	58	;':'
   425  0846  3425               	retlw	37	;'%'
   426  0847  3464               	retlw	100	;'d'
   427  0848  3400               	retlw	0
   428                           psect	strings
   429                           	
   430  0849                     STR_21:	
   431  0849  3441               	retlw	65	;'A'
   432  084A  3453               	retlw	83	;'S'
   433  084B  343A               	retlw	58	;':'
   434  084C  3425               	retlw	37	;'%'
   435  084D  3464               	retlw	100	;'d'
   436  084E  3444               	retlw	68	;'D'
   437  084F  3454               	retlw	84	;'T'
   438  0850  343A               	retlw	58	;':'
   439  0851  3425               	retlw	37	;'%'
   440  0852  3464               	retlw	100	;'d'
   441  0853  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  0854                     STR_23:	
   445  0854  3444               	retlw	68	;'D'
   446  0855  343A               	retlw	58	;':'
   447  0856  3425               	retlw	37	;'%'
   448  0857  3464               	retlw	100	;'d'
   449  0858  3420               	retlw	32	;' '
   450  0859  3444               	retlw	68	;'D'
   451  085A  343A               	retlw	58	;':'
   452  085B  3425               	retlw	37	;'%'
   453  085C  3464               	retlw	100	;'d'
   454  085D  3400               	retlw	0
   455                           psect	strings
   456                           	
   457  085E                     STR_20:	
   458  085E  3420               	retlw	32	;' '
   459  085F  3420               	retlw	32	;' '
   460  0860  3445               	retlw	69	;'E'
   461  0861  3458               	retlw	88	;'X'
   462  0862  3449               	retlw	73	;'I'
   463  0863  3454               	retlw	84	;'T'
   464  0864  3420               	retlw	32	;' '
   465  0865  3420               	retlw	32	;' '
   466  0866  3400               	retlw	0
   467                           psect	strings
   468                           	
   469  0867                     STR_6:	
   470  0867  3420               	retlw	32	;' '
   471  0868  3443               	retlw	67	;'C'
   472  0869  3468               	retlw	104	;'h'
   473  086A  3461               	retlw	97	;'a'
   474  086B  3472               	retlw	114	;'r'
   475  086C  3467               	retlw	103	;'g'
   476  086D  3465               	retlw	101	;'e'
   477  086E  3420               	retlw	32	;' '
   478  086F  3400               	retlw	0
   479                           psect	strings
   480                           	
   481  0870                     STR_2:	
   482  0870  3453               	retlw	83	;'S'
   483  0871  3463               	retlw	99	;'c'
   484  0872  3461               	retlw	97	;'a'
   485  0873  346E               	retlw	110	;'n'
   486  0874  345F               	retlw	95	;'_'
   487  0875  3433               	retlw	51	;'3'
   488  0876  3436               	retlw	54	;'6'
   489  0877  3430               	retlw	48	;'0'
   490  0878  3400               	retlw	0
   491                           psect	strings
   492                           	
   493  0879                     STR_1:	
   494  0879  3443               	retlw	67	;'C'
   495  087A  3461               	retlw	97	;'a'
   496  087B  346C               	retlw	108	;'l'
   497  087C  3469               	retlw	105	;'i'
   498  087D  3462               	retlw	98	;'b'
   499  087E  345F               	retlw	95	;'_'
   500  087F  3449               	retlw	73	;'I'
   501  0880  3452               	retlw	82	;'R'
   502  0881  3400               	retlw	0
   503                           psect	strings
   504                           	
   505  0882                     STR_5:	
   506  0882  3446               	retlw	70	;'F'
   507  0883  346C               	retlw	108	;'l'
   508  0884  3477               	retlw	119	;'w'
   509  0885  345F               	retlw	95	;'_'
   510  0886  3457               	retlw	87	;'W'
   511  0887  3461               	retlw	97	;'a'
   512  0888  346C               	retlw	108	;'l'
   513  0889  346C               	retlw	108	;'l'
   514  088A  3400               	retlw	0
   515                           psect	strings
   516                           	
   517  088B                     STR_3:	
   518  088B  3444               	retlw	68	;'D'
   519  088C  3472               	retlw	114	;'r'
   520  088D  3469               	retlw	105	;'i'
   521  088E  3476               	retlw	118	;'v'
   522  088F  3465               	retlw	101	;'e'
   523  0890  345F               	retlw	95	;'_'
   524  0891  3432               	retlw	50	;'2'
   525  0892  346D               	retlw	109	;'m'
   526  0893  3400               	retlw	0
   527                           psect	strings
   528                           	
   529  0894                     STR_4:	
   530  0894  3444               	retlw	68	;'D'
   531  0895  3472               	retlw	114	;'r'
   532  0896  3469               	retlw	105	;'i'
   533  0897  3476               	retlw	118	;'v'
   534  0898  3465               	retlw	101	;'e'
   535  0899  345F               	retlw	95	;'_'
   536  089A  344C               	retlw	76	;'L'
   537  089B  3400               	retlw	0
   538                           psect	strings
   539                           	
   540  089C                     STR_17:	
   541  089C  3443               	retlw	67	;'C'
   542  089D  344F               	retlw	79	;'O'
   543  089E  344E               	retlw	78	;'N'
   544  089F  3446               	retlw	70	;'F'
   545  08A0  3449               	retlw	73	;'I'
   546  08A1  3452               	retlw	82	;'R'
   547  08A2  344D               	retlw	77	;'M'
   548  08A3  3400               	retlw	0
   549                           psect	strings
   550                           	
   551  08A4                     STR_9:	
   552  08A4  3444               	retlw	68	;'D'
   553  08A5  3472               	retlw	114	;'r'
   554  08A6  3432               	retlw	50	;'2'
   555  08A7  3400               	retlw	0
   556                           psect	strings
   557                           	
   558  08A8                     STR_16:	
   559  08A8  343C               	retlw	60	;'<'
   560  08A9  343C               	retlw	60	;'<'
   561  08AA  343C               	retlw	60	;'<'
   562  08AB  3400               	retlw	0
   563                           psect	strings
   564                           	
   565  08AC                     STR_18:	
   566  08AC  343E               	retlw	62	;'>'
   567  08AD  343E               	retlw	62	;'>'
   568  08AE  343E               	retlw	62	;'>'
   569  08AF  3400               	retlw	0
   570                           psect	strings
   571                           	
   572  08B0                     STR_10:	
   573  08B0  3444               	retlw	68	;'D'
   574  08B1  3472               	retlw	114	;'r'
   575  08B2  344C               	retlw	76	;'L'
   576  08B3  3400               	retlw	0
   577                           psect	strings
   578                           	
   579  08B4                     STR_12:	
   580  08B4  3443               	retlw	67	;'C'
   581  08B5  3468               	retlw	104	;'h'
   582  08B6  3467               	retlw	103	;'g'
   583  08B7  3400               	retlw	0
   584                           psect	strings
   585                           	
   586  08B8                     STR_7:	
   587  08B8  3443               	retlw	67	;'C'
   588  08B9  3461               	retlw	97	;'a'
   589  08BA  346C               	retlw	108	;'l'
   590  08BB  3400               	retlw	0
   591                           psect	strings
   592                           	
   593  08BC                     STR_8:	
   594  08BC  3453               	retlw	83	;'S'
   595  08BD  3463               	retlw	99	;'c'
   596  08BE  346E               	retlw	110	;'n'
   597  08BF  3400               	retlw	0
   598                           psect	strings
   599                           	
   600  08C0                     STR_11:	
   601  08C0  3446               	retlw	70	;'F'
   602  08C1  346C               	retlw	108	;'l'
   603  08C2  3477               	retlw	119	;'w'
   604  08C3  3400               	retlw	0
   605                           psect	strings
   606  083A                     STR_14	equ	STR_13+0
   607  085E                     STR_22	equ	STR_20+0
   608  085E                     STR_24	equ	STR_20+0
   609                           	file	"Assignment3_AldnoahZero.as"
   610                           	line	#
   611                           psect cinit,class=CODE,delta=2
   612                           global start_initialization
   613  14A7                     start_initialization:
   614                           
   615                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   616                           global __pbitbssCOMMON
   617  0380                     __pbitbssCOMMON:
   618  0380                     _CenterPressed:
   619  0380                            ds      1
   620                           
   621  0381                     _CenterReleased:
   622  0381                            ds      1
   623                           
   624  0382                     _DownPressed:
   625  0382                            ds      1
   626                           
   627  0383                     _DownReleased:
   628  0383                            ds      1
   629                           
   630  0384                     _LeftPressed:
   631  0384                            ds      1
   632                           
   633  0385                     _LeftReleased:
   634  0385                            ds      1
   635                           
   636  0386                     _RTC_FLAG_10MS:
   637  0386                            ds      1
   638                           
   639  0387                     _RTC_FLAG_1MS:
   640  0387                            ds      1
   641                           
   642  0388                     _RTC_FLAG_250MS:
   643  0388                            ds      1
   644                           
   645  0389                     _RTC_FLAG_500MS:
   646  0389                            ds      1
   647                           
   648  038A                     _RTC_FLAG_50MS:
   649  038A                            ds      1
   650                           
   651  038B                     _RightPressed:
   652  038B                            ds      1
   653                           
   654  038C                     _RightReleased:
   655  038C                            ds      1
   656                           
   657  038D                     _UpPressed:
   658  038D                            ds      1
   659                           
   660  038E                     _UpReleased:
   661  038E                            ds      1
   662                           
   663                           psect	bssCOMMON,class=COMMON,space=1
   664                           global __pbssCOMMON
   665  007D                     __pbssCOMMON:
   666  007D                     _buttonPressed:
   667  007D                            ds      1
   668                           
   669                           psect	bssBANK0,class=BANK0,space=1
   670                           global __pbssBANK0
   671  006A                     __pbssBANK0:
   672  006A                     _adcVal:
   673  006A                            ds      2
   674                           
   675  006C                     _BumpSensors:
   676  006C                            ds      1
   677                           
   678  006D                     _rxiptr:
   679  006D                            ds      1
   680                           
   681  006E                     _rxoptr:
   682  006E                            ds      1
   683                           
   684  006F                     _txiptr:
   685  006F                            ds      1
   686                           
   687                           psect	bssBANK1,class=BANK1,space=1
   688                           global __pbssBANK1
   689  00A0                     __pbssBANK1:
   690  00A0                     _rxfifo:
   691  00A0                            ds      16
   692                           
   693  00B0                     _RTC_Counter:
   694  00B0                            ds      2
   695                           
   696  00B2                     _d2travel:
   697  00B2                            ds      2
   698                           
   699  00B4                     _distTravelled:
   700  00B4                            ds      2
   701                           
   702  00B6                     _dist_high:
   703  00B6                            ds      2
   704                           
   705  00B8                     _dist_low:
   706  00B8                            ds      2
   707                           
   708  00BA                     _distance:
   709  00BA                            ds      2
   710                           
   711  00BC                     _pos:
   712  00BC                            ds      2
   713                           
   714  00BE                     _test:
   715  00BE                            ds      2
   716                           
   717  00C0                     _total:
   718  00C0                            ds      2
   719                           
   720  00C2                     _totalSteps:
   721  00C2                            ds      2
   722                           
   723  00C4                     _CenterDebounceCount:
   724  00C4                            ds      1
   725                           
   726  00C5                     _DistHighByte:
   727  00C5                            ds      1
   728                           
   729  00C6                     _DistLowByte:
   730  00C6                            ds      1
   731                           
   732  00C7                     _DownDebounceCount:
   733  00C7                            ds      1
   734                           
   735  00C8                     _LeftDebounceCount:
   736  00C8                            ds      1
   737                           
   738  00C9                     _RightDebounceCount:
   739  00C9                            ds      1
   740                           
   741  00CA                     _UpDebounceCount:
   742  00CA                            ds      1
   743                           
   744  00CB                     _currentMenu:
   745  00CB                            ds      1
   746                           
   747  00CC                     _current_direction:
   748  00CC                            ds      1
   749                           
   750  00CD                     _highByte:
   751  00CD                            ds      1
   752                           
   753  00CE                     _lowByte:
   754  00CE                            ds      1
   755                           
   756  00CF                     _ser_tmp:
   757  00CF                            ds      1
   758                           
   759  00D0                     _serialInput:
   760  00D0                            ds      1
   761                           
   762  00D1                     _turnhighByte:
   763  00D1                            ds      1
   764                           
   765  00D2                     _turnlowByte:
   766  00D2                            ds      1
   767                           
   768  00D3                     _txoptr:
   769  00D3                            ds      1
   770                           
   771                           psect	dataBANK1,class=BANK1,space=1
   772                           global __pdataBANK1
   773  00D4                     __pdataBANK1:
   774                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
   775                           	line	32
   776  00D4                     _menuStrings:
   777  00D4                            ds      6
   778                           
   779                           psect	dataBANK1
   780                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
   781                           	line	33
   782  00DA                     _shortMenuStrings:
   783  00DA                            ds      6
   784                           
   785                           psect	dataBANK1
   786                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.h"
   787                           	line	7
   788  00E0                     _assignedSpeed:
   789  00E0                            ds      2
   790                           
   791                           psect	dataBANK1
   792                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\steppermotor.c"
   793                           	line	30
   794  00E2                     _current_step:
   795  00E2                            ds      1
   796                           
   797                           psect	bssBANK3,class=BANK3,space=1
   798                           global __pbssBANK3
   799  0190                     __pbssBANK3:
   800  0190                     UpdateDisplay@F1236:
   801  0190                            ds      16
   802                           
   803  01A0                     _txfifo:
   804  01A0                            ds      16
   805                           
   806                           psect clrtext,class=CODE,delta=2
   807                           global clear_ram
   808                           ;	Called with FSR containing the base address, and
   809                           ;	W with the last address+1
   810  12A2                     clear_ram:
   811  12A2  0064               	clrwdt			;clear the watchdog before getting into this loop
   812  12A3                     clrloop:
   813  12A3  0180               	clrf	indf		;clear RAM location pointed to by FSR
   814  12A4  0A84               	incf	fsr,f		;increment pointer
   815  12A5  0604               	xorwf	fsr,w		;XOR with final address
   816  12A6  1903               	btfsc	status,2	;have we reached the end yet?
   817  12A7  3400               	retlw	0		;all done for this memory range, return
   818  12A8  0604               	xorwf	fsr,w		;XOR again to restore value
   819  12A9  2AA3               	goto	clrloop		;do the next byte
   820                           
   821                           ; Clear objects allocated to BITCOMMON
   822                           psect cinit,class=CODE,delta=2
   823  14A7  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   824  14A8  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   825                           ; Clear objects allocated to COMMON
   826                           psect cinit,class=CODE,delta=2
   827  14A9  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   828                           ; Clear objects allocated to BANK0
   829                           psect cinit,class=CODE,delta=2
   830  14AA  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   831  14AB  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   832  14AC  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   833  14AD  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   834  14AE  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   835  14AF  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   836                           ; Clear objects allocated to BANK1
   837                           psect cinit,class=CODE,delta=2
   838  14B0  1383               	bcf	status, 7	;select IRP bank0
   839  14B1  30A0               	movlw	low(__pbssBANK1)
   840  14B2  0084               	movwf	fsr
   841  14B3  30D4               	movlw	low((__pbssBANK1)+034h)
   842  14B4  160A  118A  22A2   	fcall	clear_ram
              160A  118A         
   843                           ; Clear objects allocated to BANK3
   844                           psect cinit,class=CODE,delta=2
   845  14B9  1783               	bsf	status, 7	;select IRP bank2
   846  14BA  3090               	movlw	low(__pbssBANK3)
   847  14BB  0084               	movwf	fsr
   848  14BC  30B0               	movlw	low((__pbssBANK3)+020h)
   849  14BD  160A  118A  22A2   	fcall	clear_ram
              160A  118A         
   850                           global btemp
   851                           psect inittext,class=CODE,delta=2
   852                           global init_fetch,btemp
   853                           ;	Called with low address in FSR and high address in W
   854  12C8                     init_fetch:
   855  12C8  087E               	movf btemp,w
   856  12C9  008A               	movwf pclath
   857  12CA  087F               	movf btemp+1,w
   858  12CB  0082               	movwf pc
   859                           global init_ram
   860                           ;Called with:
   861                           ;	high address of idata address in btemp 
   862                           ;	low address of idata address in btemp+1 
   863                           ;	low address of data in FSR
   864                           ;	high address + 1 of data in btemp-1
   865  12CC                     init_ram:
   866  12CC  160A  118A  22C8   	fcall init_fetch
              160A  118A         
   867  12D1  0080               	movwf indf,f
   868  12D2  0A84               	incf fsr,f
   869  12D3  0804               	movf fsr,w
   870  12D4  067D               	xorwf btemp-1,w
   871  12D5  1903               	btfsc status,2
   872  12D6  3400               	retlw 0
   873  12D7  0AFF               	incf btemp+1,f
   874  12D8  1903               	btfsc status,2
   875  12D9  0AFE               	incf btemp,f
   876  12DA  2ACC               	goto init_ram
   877                           ; Initialize objects allocated to BANK1
   878                           psect cinit,class=CODE,delta=2
   879                           global init_ram, __pidataBANK1
   880  14C2  1383               	bcf	status, 7	;select IRP bank0
   881  14C3  30E3               	movlw low(__pdataBANK1+15)
   882  14C4  00FD               	movwf btemp-1,f
   883  14C5  3008               	movlw high(__pidataBANK1)
   884  14C6  00FE               	movwf btemp,f
   885  14C7  30C4               	movlw low(__pidataBANK1)
   886  14C8  00FF               	movwf btemp+1,f
   887  14C9  30D4               	movlw low(__pdataBANK1)
   888  14CA  0084               	movwf fsr,f
   889  14CB  160A  118A  22CC   	fcall init_ram
              160A  118A         
   890                           psect cinit,class=CODE,delta=2
   891                           global end_of_initialization
   892                           
   893                           ;End of C runtime variable initialization code
   894                           
   895  14D0                     end_of_initialization:
   896  14D0  0183               clrf status
   897  14D1  120A  118A  2815   ljmp _main	;jump to C main() function
   898                           psect	cstackBANK1,class=BANK1,space=1
   899                           global __pcstackBANK1
   900  00E3                     __pcstackBANK1:
   901                           	global	main@direction1
   902  00E3                     main@direction1:	; 2 bytes @ 0x0
   903  00E3                     	ds	2
   904                           	global	main@RT2A
   905  00E5                     main@RT2A:	; 2 bytes @ 0x2
   906  00E5                     	ds	2
   907                           	global	main@choice
   908  00E7                     main@choice:	; 1 bytes @ 0x4
   909  00E7                     	ds	1
   910                           	global	main@shortwall
   911  00E8                     main@shortwall:	; 2 bytes @ 0x5
   912  00E8                     	ds	2
   913                           	global	main@RT2P
   914  00EA                     main@RT2P:	; 2 bytes @ 0x7
   915  00EA                     	ds	2
   916                           psect	cstackCOMMON,class=COMMON,space=1
   917                           global __pcstackCOMMON
   918  0072                     __pcstackCOMMON:
   919                           	global	?_ser_init
   920  0072                     ?_ser_init:	; 0 bytes @ 0x0
   921                           	global	?_robo_init
   922  0072                     ?_robo_init:	; 0 bytes @ 0x0
   923                           	global	?_UpdateDisplay
   924  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   925                           	global	?_ser_putch
   926  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   927                           	global	?_readAvgDistance
   928  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   929                           	global	?_robot_read
   930  0072                     ?_robot_read:	; 0 bytes @ 0x0
   931                           	global	?_ADCconvert
   932  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   933                           	global	?_init_adc
   934  0072                     ?_init_adc:	; 0 bytes @ 0x0
   935                           	global	?_lcd_write_control
   936  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   937                           	global	?_lcd_write_data
   938  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   939                           	global	?_lcd_set_cursor
   940  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   941                           	global	?_lcd_init
   942  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   943                           	global	?_isr1
   944  0072                     ?_isr1:	; 0 bytes @ 0x0
   945                           	global	?_init
   946  0072                     ?_init:	; 0 bytes @ 0x0
   947                           	global	?_ChargeMode
   948  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   949                           	global	?_main
   950  0072                     ?_main:	; 0 bytes @ 0x0
   951                           	global	?_Debounce
   952  0072                     ?_Debounce:	; 0 bytes @ 0x0
   953                           	global	??_Debounce
   954  0072                     ??_Debounce:	; 0 bytes @ 0x0
   955                           	global	?_ser_isrx
   956  0072                     ?_ser_isrx:	; 1 bit 
   957                           	global	?_ReadButtons
   958  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   959                           	global	?_Menu
   960  0072                     ?_Menu:	; 1 bytes @ 0x0
   961                           	global	?_ser_getch
   962  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   963                           	global	?_adc_read_channel
   964  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   965                           	global	?_spi_transfer
   966  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   967                           	global	?i1___lwmod
   968  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   969                           	global	i1___lwmod@divisor
   970  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   971  0072                     	ds	1
   972                           	global	??_ReadButtons
   973  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   974  0073                     	ds	1
   975                           	global	i1___lwmod@dividend
   976  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   977  0074                     	ds	2
   978                           	global	??i1___lwmod
   979  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   980  0076                     	ds	1
   981                           	global	i1___lwmod@counter
   982  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   983  0077                     	ds	1
   984                           	global	??_isr1
   985  0078                     ??_isr1:	; 0 bytes @ 0x6
   986  0078                     	ds	5
   987                           psect	cstackBANK0,class=BANK0,space=1
   988                           global __pcstackBANK0
   989  0020                     __pcstackBANK0:
   990                           	global	??_ser_init
   991  0020                     ??_ser_init:	; 0 bytes @ 0x0
   992                           	global	??_ser_putch
   993  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   994                           	global	??_Menu
   995  0020                     ??_Menu:	; 0 bytes @ 0x0
   996                           	global	??_ser_getch
   997  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   998                           	global	??_init_adc
   999  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1000                           	global	??_lcd_write_control
  1001  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1002                           	global	??_lcd_write_data
  1003  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1004                           	global	??_spi_transfer
  1005  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1006                           	global	??_ser_isrx
  1007  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1008                           	global	?_adc_read
  1009  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1010                           	global	?___wmul
  1011  0020                     ?___wmul:	; 2 bytes @ 0x0
  1012                           	global	?___awmod
  1013  0020                     ?___awmod:	; 2 bytes @ 0x0
  1014                           	global	?___ftpack
  1015  0020                     ?___ftpack:	; 3 bytes @ 0x0
  1016                           	global	Menu@BTN_input
  1017  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1018                           	global	___wmul@multiplier
  1019  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1020                           	global	___awmod@divisor
  1021  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1022                           	global	___ftpack@arg
  1023  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
  1024  0020                     	ds	1
  1025                           	global	spi_transfer@temp
  1026  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1027                           	global	ser_getch@c
  1028  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1029                           	global	ser_putch@c
  1030  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1031  0021                     	ds	1
  1032                           	global	??_adc_read
  1033  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1034                           	global	??_robo_init
  1035  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1036                           	global	?_robotTurn
  1037  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1038                           	global	??_robot_read
  1039  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1040                           	global	lcd_write_control@databyte
  1041  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1042                           	global	lcd_write_data@databyte
  1043  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1044                           	global	spi_transfer@data
  1045  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1046                           	global	robotTurn@distance
  1047  0022                     robotTurn@distance:	; 2 bytes @ 0x2
  1048                           	global	___wmul@multiplicand
  1049  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1050                           	global	___awmod@dividend
  1051  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1052  0022                     	ds	1
  1053                           	global	?_rotate
  1054  0023                     ?_rotate:	; 0 bytes @ 0x3
  1055                           	global	??_lcd_set_cursor
  1056  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1057                           	global	??_lcd_init
  1058  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1059                           	global	??_init
  1060  0023                     ??_init:	; 0 bytes @ 0x3
  1061                           	global	lcd_set_cursor@address
  1062  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1063                           	global	___ftpack@exp
  1064  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1065                           	global	rotate@numsteps
  1066  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1067  0023                     	ds	1
  1068                           	global	??_robotTurn
  1069  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1070                           	global	??___wmul
  1071  0024                     ??___wmul:	; 0 bytes @ 0x4
  1072                           	global	??___awmod
  1073  0024                     ??___awmod:	; 0 bytes @ 0x4
  1074                           	global	___ftpack@sign
  1075  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1076                           	global	adc_read@adc_value
  1077  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1078                           	global	___wmul@product
  1079  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1080  0024                     	ds	1
  1081                           	global	??___ftpack
  1082  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1083                           	global	rotate@direction
  1084  0025                     rotate@direction:	; 1 bytes @ 0x5
  1085                           	global	___awmod@counter
  1086  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1087  0025                     	ds	1
  1088                           	global	??_rotate
  1089  0026                     ??_rotate:	; 0 bytes @ 0x6
  1090                           	global	??_adc_read_channel
  1091  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1092                           	global	?_abs
  1093  0026                     ?_abs:	; 2 bytes @ 0x6
  1094                           	global	?___lwdiv
  1095  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1096                           	global	___awmod@sign
  1097  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1098                           	global	abs@v
  1099  0026                     abs@v:	; 2 bytes @ 0x6
  1100                           	global	___lwdiv@divisor
  1101  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1102  0026                     	ds	1
  1103                           	global	?_lcd_write_string
  1104  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1105                           	global	adc_read_channel@channel
  1106  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1107                           	global	lcd_write_string@s
  1108  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1109  0027                     	ds	1
  1110                           	global	??_abs
  1111  0028                     ??_abs:	; 0 bytes @ 0x8
  1112                           	global	?_readDistance
  1113  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1114                           	global	?___fttol
  1115  0028                     ?___fttol:	; 4 bytes @ 0x8
  1116                           	global	rotate@i
  1117  0028                     rotate@i:	; 2 bytes @ 0x8
  1118                           	global	___lwdiv@dividend
  1119  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1120                           	global	___fttol@f1
  1121  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1122  0028                     	ds	1
  1123                           	global	??_lcd_write_string
  1124  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1125  0029                     	ds	1
  1126                           	global	??_readDistance
  1127  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1128                           	global	??___lwdiv
  1129  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1130  002A                     	ds	1
  1131                           	global	___lwdiv@quotient
  1132  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1133  002B                     	ds	1
  1134                           	global	??___fttol
  1135  002C                     ??___fttol:	; 0 bytes @ 0xC
  1136                           	global	readDistance@fullval
  1137  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1138  002C                     	ds	1
  1139                           	global	___lwdiv@counter
  1140  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1141  002D                     	ds	1
  1142                           	global	??_ADCconvert
  1143  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1144                           	global	?___lwmod
  1145  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1146                           	global	___lwmod@divisor
  1147  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1148  002E                     	ds	2
  1149                           	global	??_readAvgDistance
  1150  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1151                           	global	___fttol@sign1
  1152  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1153                           	global	readAvgDistance@fullval
  1154  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1155                           	global	___lwmod@dividend
  1156  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1157  0030                     	ds	1
  1158                           	global	___fttol@lval
  1159  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1160  0031                     	ds	1
  1161                           	global	??___lwmod
  1162  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1163                           	global	readAvgDistance@i
  1164  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1165  0032                     	ds	1
  1166                           	global	___lwmod@counter
  1167  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1168  0033                     	ds	1
  1169                           	global	?_sprintf
  1170  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1171                           	global	sprintf@f
  1172  0034                     sprintf@f:	; 1 bytes @ 0x14
  1173  0034                     	ds	1
  1174                           	global	___fttol@exp1
  1175  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1176  0035                     	ds	1
  1177                           	global	?___awtoft
  1178  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1179                           	global	___awtoft@c
  1180  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1181  0036                     	ds	3
  1182                           	global	??_sprintf
  1183  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1184                           	global	??___awtoft
  1185  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1186  0039                     	ds	2
  1187                           	global	___awtoft@sign
  1188  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1189  003B                     	ds	1
  1190                           	global	?___ftmul
  1191  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1192                           	global	sprintf@ap
  1193  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1194                           	global	___ftmul@f1
  1195  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1196  003C                     	ds	1
  1197                           	global	sprintf@flag
  1198  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1199  003D                     	ds	1
  1200                           	global	sprintf@prec
  1201  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1202  003E                     	ds	1
  1203                           	global	___ftmul@f2
  1204  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1205                           	global	sprintf@_val
  1206  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1207  003F                     	ds	3
  1208                           	global	??___ftmul
  1209  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1210  0042                     	ds	1
  1211                           	global	sprintf@sp
  1212  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1213  0043                     	ds	1
  1214                           	global	sprintf@c
  1215  0044                     sprintf@c:	; 1 bytes @ 0x24
  1216  0044                     	ds	1
  1217                           	global	??_UpdateDisplay
  1218  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1219  0045                     	ds	1
  1220                           	global	___ftmul@exp
  1221  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1222  0046                     	ds	1
  1223                           	global	___ftmul@f3_as_product
  1224  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1225  0047                     	ds	2
  1226                           	global	UpdateDisplay@adcOutput
  1227  0049                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x29
  1228  0049                     	ds	1
  1229                           	global	___ftmul@cntr
  1230  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1231  004A                     	ds	1
  1232                           	global	___ftmul@sign
  1233  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1234  004B                     	ds	14
  1235                           	global	?_robotMoveSpeed
  1236  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1237                           	global	?_robotMove
  1238  0059                     ?_robotMove:	; 0 bytes @ 0x39
  1239                           	global	??_ChargeMode
  1240  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1241                           	global	?_scan360
  1242  0059                     ?_scan360:	; 2 bytes @ 0x39
  1243                           	global	robotMoveSpeed@distance
  1244  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1245                           	global	robotMove@distance
  1246  0059                     robotMove@distance:	; 2 bytes @ 0x39
  1247  0059                     	ds	2
  1248                           	global	??_robotMove
  1249  005B                     ??_robotMove:	; 0 bytes @ 0x3B
  1250                           	global	??_scan360
  1251  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1252                           	global	scan360@lowestVal
  1253  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1254                           	global	robotMoveSpeed@speed
  1255  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1256  005B                     	ds	2
  1257                           	global	??_robotMoveSpeed
  1258  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1259                           	global	scan360@lowestSteps
  1260  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1261  005D                     	ds	2
  1262                           	global	scan360@steps
  1263  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1264  005F                     	ds	1
  1265                           	global	robotMoveSpeed@speedlowByte
  1266  0060                     robotMoveSpeed@speedlowByte:	; 1 bytes @ 0x40
  1267  0060                     	ds	1
  1268                           	global	robotMoveSpeed@speedhighByte
  1269  0061                     robotMoveSpeed@speedhighByte:	; 1 bytes @ 0x41
  1270  0061                     	ds	1
  1271                           	global	robotMoveSpeed@temp1
  1272  0062                     robotMoveSpeed@temp1:	; 2 bytes @ 0x42
  1273  0062                     	ds	2
  1274                           	global	?_straightLineTest
  1275  0064                     ?_straightLineTest:	; 0 bytes @ 0x44
  1276                           	global	straightLineTest@menuflag
  1277  0064                     straightLineTest@menuflag:	; 2 bytes @ 0x44
  1278  0064                     	ds	2
  1279                           	global	??_straightLineTest
  1280  0066                     ??_straightLineTest:	; 0 bytes @ 0x46
  1281  0066                     	ds	1
  1282                           	global	??_main
  1283  0067                     ??_main:	; 0 bytes @ 0x47
  1284  0067                     	ds	3
  1285 ;;Data sizes: Strings 170, constant 10, data 15, bss 91, persistent 0 stack 0
  1286 ;;Auto spaces:   Size  Autos    Used
  1287 ;; COMMON          14     11      14
  1288 ;; BANK0           80     74      80
  1289 ;; BANK1           80      9      76
  1290 ;; BANK3           96      0      32
  1291 ;; BANK2           96      0       0
  1292                           
  1293 ;;
  1294 ;; Pointer list with targets:
  1295                           
  1296 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1297 ;;
  1298 ;; ?___ftpack	float  size(1) Largest target is 2
  1299 ;;		 -> main@RT2P(BANK1[2]), 
  1300 ;;
  1301 ;; ?_abs	int  size(1) Largest target is 0
  1302 ;;
  1303 ;; ?___awmod	int  size(1) Largest target is 0
  1304 ;;
  1305 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1306 ;;
  1307 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1308 ;;
  1309 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1310 ;;
  1311 ;; ?___fttol	long  size(1) Largest target is 0
  1312 ;;
  1313 ;; ?___ftmul	float  size(1) Largest target is 0
  1314 ;;
  1315 ;; ?___awtoft	float  size(1) Largest target is 0
  1316 ;;
  1317 ;; ?_scan360	int  size(1) Largest target is 0
  1318 ;;
  1319 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1320 ;;
  1321 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1322 ;;
  1323 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1324 ;;		 -> STR_23(CODE[10]), STR_21(CODE[11]), STR_14(CODE[15]), STR_13(CODE[15]), 
  1325 ;;
  1326 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1327 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1328 ;;
  1329 ;; ?_sprintf	int  size(1) Largest target is 0
  1330 ;;
  1331 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1332 ;;		 -> ?_sprintf(BANK0[2]), 
  1333 ;;
  1334 ;; S8178$_cp	PTR const unsigned char  size(1) Largest target is 0
  1335 ;;
  1336 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1337 ;;
  1338 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1339 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1340 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1341 ;;
  1342 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1343 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1344 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1345 ;;
  1346 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1347 ;;		 -> STR_24(CODE[9]), STR_22(CODE[9]), STR_20(CODE[9]), STR_19(CODE[16]), 
  1348 ;;		 -> STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[4]), STR_15(CODE[16]), 
  1349 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1350 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1351 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1352 ;;		 -> STR_1(CODE[9]), 
  1353 ;;
  1354                           
  1355                           
  1356 ;;
  1357 ;; Critical Paths under _main in COMMON
  1358 ;;
  1359 ;;   None.
  1360 ;;
  1361 ;; Critical Paths under _isr1 in COMMON
  1362 ;;
  1363 ;;   _isr1->i1___lwmod
  1364 ;;   _ReadButtons->_Debounce
  1365 ;;
  1366 ;; Critical Paths under _main in BANK0
  1367 ;;
  1368 ;;   _main->_straightLineTest
  1369 ;;   _straightLineTest->_robotMoveSpeed
  1370 ;;   _robotMove->_UpdateDisplay
  1371 ;;   _scan360->_UpdateDisplay
  1372 ;;   _ChargeMode->_UpdateDisplay
  1373 ;;   _robotMoveSpeed->_UpdateDisplay
  1374 ;;   _readAvgDistance->_ADCconvert
  1375 ;;   _UpdateDisplay->_sprintf
  1376 ;;   _readDistance->_adc_read_channel
  1377 ;;   _robot_read->_ser_putch
  1378 ;;   _robot_read->_ser_getch
  1379 ;;   _lcd_init->_lcd_write_control
  1380 ;;   _lcd_write_string->___awmod
  1381 ;;   _lcd_set_cursor->_lcd_write_control
  1382 ;;   ___awtoft->___fttol
  1383 ;;   ___ftmul->___awtoft
  1384 ;;   _abs->___wmul
  1385 ;;   _sprintf->___lwmod
  1386 ;;   _ADCconvert->___lwdiv
  1387 ;;   _rotate->_spi_transfer
  1388 ;;   _robotTurn->_ser_putch
  1389 ;;   _robo_init->_ser_putch
  1390 ;;   _adc_read_channel->_adc_read
  1391 ;;   ___fttol->___ftpack
  1392 ;;   ___lwmod->___lwdiv
  1393 ;;   ___lwdiv->___wmul
  1394 ;;
  1395 ;; Critical Paths under _isr1 in BANK0
  1396 ;;
  1397 ;;   None.
  1398 ;;
  1399 ;; Critical Paths under _main in BANK1
  1400 ;;
  1401 ;;   None.
  1402 ;;
  1403 ;; Critical Paths under _isr1 in BANK1
  1404 ;;
  1405 ;;   None.
  1406 ;;
  1407 ;; Critical Paths under _main in BANK3
  1408 ;;
  1409 ;;   None.
  1410 ;;
  1411 ;; Critical Paths under _isr1 in BANK3
  1412 ;;
  1413 ;;   None.
  1414 ;;
  1415 ;; Critical Paths under _main in BANK2
  1416 ;;
  1417 ;;   None.
  1418 ;;
  1419 ;; Critical Paths under _isr1 in BANK2
  1420 ;;
  1421 ;;   None.
  1422                           
  1423 ;;
  1424 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1425 ;;
  1426                           
  1427 ;;
  1428 ;;Call Graph Tables:
  1429 ;;
  1430 ;; ---------------------------------------------------------------------------------
  1431 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1432 ;; ---------------------------------------------------------------------------------
  1433 ;; (0) _main                                                12    12      0   12260
  1434 ;;                                             71 BANK0      3     3      0
  1435 ;;                                              0 BANK1      9     9      0
  1436 ;;                               _init
  1437 ;;                         _robot_read
  1438 ;;                    _readAvgDistance
  1439 ;;                      _UpdateDisplay
  1440 ;;                               _Menu
  1441 ;;                   _straightLineTest
  1442 ;;                          _robotMove
  1443 ;;                          _robotTurn
  1444 ;;                            _scan360
  1445 ;;                             _rotate
  1446 ;;                           ___awtoft
  1447 ;;                            ___ftmul
  1448 ;;                            ___fttol
  1449 ;;                         _ChargeMode
  1450 ;; ---------------------------------------------------------------------------------
  1451 ;; (1) _straightLineTest                                     3     1      2    3324
  1452 ;;                                             68 BANK0      3     1      2
  1453 ;;                      _UpdateDisplay
  1454 ;;                          _robotTurn
  1455 ;;                     _robotMoveSpeed
  1456 ;; ---------------------------------------------------------------------------------
  1457 ;; (1) _robotMove                                            4     2      2    1504
  1458 ;;                                             57 BANK0      4     2      2
  1459 ;;                          _ser_putch
  1460 ;;                         _robot_read
  1461 ;;                      _UpdateDisplay
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (1) _scan360                                              8     6      2    2184
  1464 ;;                                             57 BANK0      8     6      2
  1465 ;;                    _readAvgDistance
  1466 ;;                             _rotate
  1467 ;;                      _UpdateDisplay
  1468 ;; ---------------------------------------------------------------------------------
  1469 ;; (1) _ChargeMode                                           1     1      0    1415
  1470 ;;                                             57 BANK0      1     1      0
  1471 ;;                          _ser_putch
  1472 ;;                      _UpdateDisplay
  1473 ;; ---------------------------------------------------------------------------------
  1474 ;; (2) _robotMoveSpeed                                      11     7      4    1777
  1475 ;;                                             57 BANK0     11     7      4
  1476 ;;                          _ser_putch
  1477 ;;                         _robot_read
  1478 ;;                      _UpdateDisplay
  1479 ;;                                _abs
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (2) _readAvgDistance                                      4     4      0     555
  1482 ;;                                             16 BANK0      4     4      0
  1483 ;;                       _readDistance
  1484 ;;                            ___lwdiv
  1485 ;;                         _ADCconvert
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (2) _UpdateDisplay                                       20    20      0    1393
  1488 ;;                                             37 BANK0     20    20      0
  1489 ;;                  _lcd_write_control
  1490 ;;                            _sprintf
  1491 ;;                     _lcd_set_cursor
  1492 ;;                   _lcd_write_string
  1493 ;;                            ___awmod
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (1) _init                                                 1     1      0      44
  1496 ;;                                              3 BANK0      1     1      0
  1497 ;;                           _ser_init
  1498 ;;                           _init_adc
  1499 ;;                           _lcd_init
  1500 ;;                          _robo_init
  1501 ;; ---------------------------------------------------------------------------------
  1502 ;; (3) _readDistance                                         6     4      2      69
  1503 ;;                                              8 BANK0      6     4      2
  1504 ;;                   _adc_read_channel
  1505 ;; ---------------------------------------------------------------------------------
  1506 ;; (2) _robot_read                                           2     2      0      45
  1507 ;;                                              2 BANK0      2     2      0
  1508 ;;                          _ser_putch
  1509 ;;                          _ser_getch
  1510 ;; ---------------------------------------------------------------------------------
  1511 ;; (2) _lcd_init                                             0     0      0      22
  1512 ;;                  _lcd_write_control
  1513 ;; ---------------------------------------------------------------------------------
  1514 ;; (3) _lcd_write_string                                     2     0      2      67
  1515 ;;                                              7 BANK0      2     0      2
  1516 ;;                     _lcd_write_data
  1517 ;;                            ___awmod (ARG)
  1518 ;; ---------------------------------------------------------------------------------
  1519 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1520 ;;                                              3 BANK0      1     1      0
  1521 ;;                  _lcd_write_control
  1522 ;; ---------------------------------------------------------------------------------
  1523 ;; (1) ___awtoft                                             6     3      3     300
  1524 ;;                                             22 BANK0      6     3      3
  1525 ;;                           ___ftpack
  1526 ;;                            ___fttol (ARG)
  1527 ;; ---------------------------------------------------------------------------------
  1528 ;; (1) ___ftmul                                             16    10      6     535
  1529 ;;                                             28 BANK0     16    10      6
  1530 ;;                           ___ftpack
  1531 ;;                           ___awtoft (ARG)
  1532 ;;                            ___fttol (ARG)
  1533 ;; ---------------------------------------------------------------------------------
  1534 ;; (3) _abs                                                  4     2      2     158
  1535 ;;                                              6 BANK0      4     2      2
  1536 ;;                             ___wmul
  1537 ;; ---------------------------------------------------------------------------------
  1538 ;; (3) _ser_getch                                            2     2      0      23
  1539 ;;                                              0 BANK0      2     2      0
  1540 ;;                           _ser_isrx
  1541 ;; ---------------------------------------------------------------------------------
  1542 ;; (3) _sprintf                                             17    12      5     798
  1543 ;;                                             20 BANK0     17    12      5
  1544 ;;                            ___lwdiv
  1545 ;;                            ___lwmod
  1546 ;; ---------------------------------------------------------------------------------
  1547 ;; (3) _ADCconvert                                           2     2      0     254
  1548 ;;                                             14 BANK0      2     2      0
  1549 ;;                             ___wmul
  1550 ;;                            ___lwdiv
  1551 ;; ---------------------------------------------------------------------------------
  1552 ;; (1) _rotate                                               7     4      3      98
  1553 ;;                                              3 BANK0      7     4      3
  1554 ;;                       _spi_transfer
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (1) _robotTurn                                            3     1      2      88
  1557 ;;                                              2 BANK0      3     1      2
  1558 ;;                          _ser_putch
  1559 ;; ---------------------------------------------------------------------------------
  1560 ;; (2) _robo_init                                            0     0      0      22
  1561 ;;                          _ser_putch
  1562 ;; ---------------------------------------------------------------------------------
  1563 ;; (4) _lcd_write_data                                       3     3      0      22
  1564 ;;                                              0 BANK0      3     3      0
  1565 ;; ---------------------------------------------------------------------------------
  1566 ;; (4) _lcd_write_control                                    3     3      0      22
  1567 ;;                                              0 BANK0      3     3      0
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (2) _init_adc                                             1     1      0       0
  1570 ;;                                              0 BANK0      1     1      0
  1571 ;; ---------------------------------------------------------------------------------
  1572 ;; (4) _adc_read_channel                                     2     2      0      46
  1573 ;;                                              6 BANK0      2     2      0
  1574 ;;                           _adc_read
  1575 ;; ---------------------------------------------------------------------------------
  1576 ;; (3) ___awmod                                              7     3      4     296
  1577 ;;                                              0 BANK0      7     3      4
  1578 ;; ---------------------------------------------------------------------------------
  1579 ;; (1) ___fttol                                             14    10      4     252
  1580 ;;                                              8 BANK0     14    10      4
  1581 ;;                           ___ftpack (ARG)
  1582 ;; ---------------------------------------------------------------------------------
  1583 ;; (2) ___ftpack                                             8     3      5     209
  1584 ;;                                              0 BANK0      8     3      5
  1585 ;; ---------------------------------------------------------------------------------
  1586 ;; (4) ___lwmod                                              6     2      4     159
  1587 ;;                                             14 BANK0      6     2      4
  1588 ;;                            ___lwdiv (ARG)
  1589 ;; ---------------------------------------------------------------------------------
  1590 ;; (4) ___lwdiv                                              8     4      4     162
  1591 ;;                                              6 BANK0      8     4      4
  1592 ;;                             ___wmul (ARG)
  1593 ;; ---------------------------------------------------------------------------------
  1594 ;; (4) ___wmul                                               6     2      4      92
  1595 ;;                                              0 BANK0      6     2      4
  1596 ;; ---------------------------------------------------------------------------------
  1597 ;; (4) _ser_isrx                                             0     0      0       0
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (2) _spi_transfer                                         3     3      0      30
  1600 ;;                                              0 BANK0      3     3      0
  1601 ;; ---------------------------------------------------------------------------------
  1602 ;; (1) _Menu                                                 1     1      0      22
  1603 ;;                                              0 BANK0      1     1      0
  1604 ;; ---------------------------------------------------------------------------------
  1605 ;; (2) _ser_putch                                            2     2      0      22
  1606 ;;                                              0 BANK0      2     2      0
  1607 ;; ---------------------------------------------------------------------------------
  1608 ;; (2) _ser_init                                             1     1      0       0
  1609 ;;                                              0 BANK0      1     1      0
  1610 ;; ---------------------------------------------------------------------------------
  1611 ;; (5) _adc_read                                             6     4      2      24
  1612 ;;                                              0 BANK0      6     4      2
  1613 ;; ---------------------------------------------------------------------------------
  1614 ;; Estimated maximum stack depth 5
  1615 ;; ---------------------------------------------------------------------------------
  1616 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1617 ;; ---------------------------------------------------------------------------------
  1618 ;; (6) _isr1                                                 5     5      0     521
  1619 ;;                                              6 COMMON     5     5      0
  1620 ;;                          i1___lwmod
  1621 ;;                        _ReadButtons
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (7) _ReadButtons                                          0     0      0       0
  1624 ;;                           _Debounce
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (7) i1___lwmod                                            6     2      4     521
  1627 ;;                                              0 COMMON     6     2      4
  1628 ;; ---------------------------------------------------------------------------------
  1629 ;; (8) _Debounce                                             1     1      0       0
  1630 ;;                                              0 COMMON     1     1      0
  1631 ;; ---------------------------------------------------------------------------------
  1632 ;; Estimated maximum stack depth 8
  1633 ;; ---------------------------------------------------------------------------------
  1634                           
  1635 ;; Call Graph Graphs:
  1636                           
  1637 ;; _main (ROOT)
  1638 ;;   _init
  1639 ;;     _ser_init
  1640 ;;     _init_adc
  1641 ;;     _lcd_init
  1642 ;;       _lcd_write_control
  1643 ;;     _robo_init
  1644 ;;       _ser_putch
  1645 ;;   _robot_read
  1646 ;;     _ser_putch
  1647 ;;     _ser_getch
  1648 ;;       _ser_isrx
  1649 ;;   _readAvgDistance
  1650 ;;     _readDistance
  1651 ;;       _adc_read_channel
  1652 ;;         _adc_read
  1653 ;;     ___lwdiv
  1654 ;;       ___wmul (ARG)
  1655 ;;     _ADCconvert
  1656 ;;       ___wmul
  1657 ;;       ___lwdiv
  1658 ;;         ___wmul (ARG)
  1659 ;;   _UpdateDisplay
  1660 ;;     _lcd_write_control
  1661 ;;     _sprintf
  1662 ;;       ___lwdiv
  1663 ;;         ___wmul (ARG)
  1664 ;;       ___lwmod
  1665 ;;         ___lwdiv (ARG)
  1666 ;;           ___wmul (ARG)
  1667 ;;     _lcd_set_cursor
  1668 ;;       _lcd_write_control
  1669 ;;     _lcd_write_string
  1670 ;;       _lcd_write_data
  1671 ;;       ___awmod (ARG)
  1672 ;;     ___awmod
  1673 ;;   _Menu
  1674 ;;   _straightLineTest
  1675 ;;     _UpdateDisplay
  1676 ;;       _lcd_write_control
  1677 ;;       _sprintf
  1678 ;;         ___lwdiv
  1679 ;;           ___wmul (ARG)
  1680 ;;         ___lwmod
  1681 ;;           ___lwdiv (ARG)
  1682 ;;             ___wmul (ARG)
  1683 ;;       _lcd_set_cursor
  1684 ;;         _lcd_write_control
  1685 ;;       _lcd_write_string
  1686 ;;         _lcd_write_data
  1687 ;;         ___awmod (ARG)
  1688 ;;       ___awmod
  1689 ;;     _robotTurn
  1690 ;;       _ser_putch
  1691 ;;     _robotMoveSpeed
  1692 ;;       _ser_putch
  1693 ;;       _robot_read
  1694 ;;         _ser_putch
  1695 ;;         _ser_getch
  1696 ;;           _ser_isrx
  1697 ;;       _UpdateDisplay
  1698 ;;         _lcd_write_control
  1699 ;;         _sprintf
  1700 ;;           ___lwdiv
  1701 ;;             ___wmul (ARG)
  1702 ;;           ___lwmod
  1703 ;;             ___lwdiv (ARG)
  1704 ;;               ___wmul (ARG)
  1705 ;;         _lcd_set_cursor
  1706 ;;           _lcd_write_control
  1707 ;;         _lcd_write_string
  1708 ;;           _lcd_write_data
  1709 ;;           ___awmod (ARG)
  1710 ;;         ___awmod
  1711 ;;       _abs
  1712 ;;         ___wmul
  1713 ;;   _robotMove
  1714 ;;     _ser_putch
  1715 ;;     _robot_read
  1716 ;;       _ser_putch
  1717 ;;       _ser_getch
  1718 ;;         _ser_isrx
  1719 ;;     _UpdateDisplay
  1720 ;;       _lcd_write_control
  1721 ;;       _sprintf
  1722 ;;         ___lwdiv
  1723 ;;           ___wmul (ARG)
  1724 ;;         ___lwmod
  1725 ;;           ___lwdiv (ARG)
  1726 ;;             ___wmul (ARG)
  1727 ;;       _lcd_set_cursor
  1728 ;;         _lcd_write_control
  1729 ;;       _lcd_write_string
  1730 ;;         _lcd_write_data
  1731 ;;         ___awmod (ARG)
  1732 ;;       ___awmod
  1733 ;;   _robotTurn
  1734 ;;     _ser_putch
  1735 ;;   _scan360
  1736 ;;     _readAvgDistance
  1737 ;;       _readDistance
  1738 ;;         _adc_read_channel
  1739 ;;           _adc_read
  1740 ;;       ___lwdiv
  1741 ;;         ___wmul (ARG)
  1742 ;;       _ADCconvert
  1743 ;;         ___wmul
  1744 ;;         ___lwdiv
  1745 ;;           ___wmul (ARG)
  1746 ;;     _rotate
  1747 ;;       _spi_transfer
  1748 ;;     _UpdateDisplay
  1749 ;;       _lcd_write_control
  1750 ;;       _sprintf
  1751 ;;         ___lwdiv
  1752 ;;           ___wmul (ARG)
  1753 ;;         ___lwmod
  1754 ;;           ___lwdiv (ARG)
  1755 ;;             ___wmul (ARG)
  1756 ;;       _lcd_set_cursor
  1757 ;;         _lcd_write_control
  1758 ;;       _lcd_write_string
  1759 ;;         _lcd_write_data
  1760 ;;         ___awmod (ARG)
  1761 ;;       ___awmod
  1762 ;;   _rotate
  1763 ;;     _spi_transfer
  1764 ;;   ___awtoft
  1765 ;;     ___ftpack
  1766 ;;     ___fttol (ARG)
  1767 ;;       ___ftpack (ARG)
  1768 ;;   ___ftmul
  1769 ;;     ___ftpack
  1770 ;;     ___awtoft (ARG)
  1771 ;;       ___ftpack
  1772 ;;       ___fttol (ARG)
  1773 ;;         ___ftpack (ARG)
  1774 ;;     ___fttol (ARG)
  1775 ;;       ___ftpack (ARG)
  1776 ;;   ___fttol
  1777 ;;     ___ftpack (ARG)
  1778 ;;   _ChargeMode
  1779 ;;     _ser_putch
  1780 ;;     _UpdateDisplay
  1781 ;;       _lcd_write_control
  1782 ;;       _sprintf
  1783 ;;         ___lwdiv
  1784 ;;           ___wmul (ARG)
  1785 ;;         ___lwmod
  1786 ;;           ___lwdiv (ARG)
  1787 ;;             ___wmul (ARG)
  1788 ;;       _lcd_set_cursor
  1789 ;;         _lcd_write_control
  1790 ;;       _lcd_write_string
  1791 ;;         _lcd_write_data
  1792 ;;         ___awmod (ARG)
  1793 ;;       ___awmod
  1794 ;;
  1795 ;; _isr1 (ROOT)
  1796 ;;   i1___lwmod
  1797 ;;   _ReadButtons
  1798 ;;     _Debounce
  1799 ;;
  1800                           
  1801 ;; Address spaces:
  1802                           
  1803 ;;Name               Size   Autos  Total    Cost      Usage
  1804 ;;BANK3               60      0      20       9       33.3%
  1805 ;;BITBANK3            60      0       0       8        0.0%
  1806 ;;SFR3                 0      0       0       4        0.0%
  1807 ;;BITSFR3              0      0       0       4        0.0%
  1808 ;;BANK2               60      0       0      11        0.0%
  1809 ;;BITBANK2            60      0       0      10        0.0%
  1810 ;;SFR2                 0      0       0       5        0.0%
  1811 ;;BITSFR2              0      0       0       5        0.0%
  1812 ;;SFR1                 0      0       0       2        0.0%
  1813 ;;BITSFR1              0      0       0       2        0.0%
  1814 ;;BANK1               50      9      4C       7       95.0%
  1815 ;;BITBANK1            50      0       0       6        0.0%
  1816 ;;CODE                 0      0       0       0        0.0%
  1817 ;;DATA                 0      0      D5      12        0.0%
  1818 ;;ABS                  0      0      CA       3        0.0%
  1819 ;;NULL                 0      0       0       0        0.0%
  1820 ;;STACK                0      0       B       2        0.0%
  1821 ;;BANK0               50     4A      50       5      100.0%
  1822 ;;BITBANK0            50      0       0       4        0.0%
  1823 ;;SFR0                 0      0       0       1        0.0%
  1824 ;;BITSFR0              0      0       0       1        0.0%
  1825 ;;COMMON               E      B       E       1      100.0%
  1826 ;;BITCOMMON            E      0       2       0       14.3%
  1827 ;;EEDATA             100      0       0       0        0.0%
  1828                           
  1829                           	global	_main
  1830                           psect	maintext,global,class=CODE,delta=2
  1831                           global __pmaintext
  1832  0015                     __pmaintext:
  1833                           
  1834 ;; *************** function _main *****************
  1835 ;; Defined at:
  1836 ;;		line 369 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  RT2P            2    7[BANK1 ] int 
  1841 ;;  RT2A            2    2[BANK1 ] int 
  1842 ;;  direction1      2    0[BANK1 ] int 
  1843 ;;  shortwall       2    5[BANK1 ] int 
  1844 ;;  choice          1    4[BANK1 ] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 17F/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         0       0       9       0       0
  1856 ;;      Temps:          0       3       0       0       0
  1857 ;;      Totals:         0       3       9       0       0
  1858 ;;Total ram usage:       12 bytes
  1859 ;; Hardware stack levels required when called:    8
  1860 ;; This function calls:
  1861 ;;		_init
  1862 ;;		_robot_read
  1863 ;;		_readAvgDistance
  1864 ;;		_UpdateDisplay
  1865 ;;		_Menu
  1866 ;;		_straightLineTest
  1867 ;;		_robotMove
  1868 ;;		_robotTurn
  1869 ;;		_scan360
  1870 ;;		_rotate
  1871 ;;		___awtoft
  1872 ;;		___ftmul
  1873 ;;		___fttol
  1874 ;;		_ChargeMode
  1875 ;; This function is called by:
  1876 ;;		Startup code after reset
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           psect	maintext
  1880                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  1881                           	line	369
  1882                           	global	__size_of_main
  1883  02B8                     	__size_of_main	equ	__end_of_main-_main
  1884                           	
  1885  0015                     _main:	
  1886                           	opt	stack 0
  1887                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1888                           	line	370
  1889                           	
  1890  0015                     l11781:	
  1891                           ;Main.c: 370: unsigned char choice = 255;
  1892  0015  30FF               	movlw	(0FFh)
  1893  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1894  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1895  0018  00E7               	movwf	(??_main+0)+0
  1896  0019  0867               	movf	(??_main+0)+0,w
  1897  001A  1683               	bsf	status, 5	;RP0=1, select bank1
  1898  001B  1303               	bcf	status, 6	;RP1=0, select bank1
  1899  001C  00E7               	movwf	(main@choice)^080h
  1900                           	line	371
  1901                           	
  1902  001D                     l11783:	
  1903                           ;Main.c: 371: int shortwall = 0;
  1904  001D  01E8               	clrf	(main@shortwall)^080h
  1905  001E  01E9               	clrf	(main@shortwall+1)^080h
  1906                           	line	375
  1907                           	
  1908  001F                     l11785:	
  1909                           ;Main.c: 375: init();
  1910  001F  160A  118A  24D4   	fcall	_init
              120A  118A         
  1911  0024  2825               	goto	l11787
  1912                           	line	380
  1913                           ;Main.c: 380: while(1)
  1914                           	
  1915  0025                     l2285:	
  1916                           	line	384
  1917                           	
  1918  0025                     l11787:	
  1919                           ;Main.c: 381: {
  1920                           ;Main.c: 384: if (RTC_FLAG_250MS == 1)
  1921  0025  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1922  0026  2828               	goto	u5621
  1923  0027  2829               	goto	u5620
  1924  0028                     u5621:
  1925  0028  286D               	goto	l11819
  1926  0029                     u5620:
  1927                           	line	386
  1928                           	
  1929  0029                     l11789:	
  1930                           ;Main.c: 385: {
  1931                           ;Main.c: 386: RTC_FLAG_250MS = 0;
  1932  0029  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1933                           	line	387
  1934                           	
  1935  002A                     l11791:	
  1936                           ;Main.c: 387: robot_read();
  1937  002A  160A  118A  275A   	fcall	_robot_read
              120A  118A         
  1938                           	line	388
  1939                           	
  1940  002F                     l11793:	
  1941                           ;Main.c: 388: readAvgDistance();
  1942  002F  160A  118A  27AB   	fcall	_readAvgDistance
              120A  118A         
  1943                           	line	389
  1944                           	
  1945  0034                     l11795:	
  1946                           ;Main.c: 389: UpdateDisplay();
  1947  0034  120A  118A  24F0   	fcall	_UpdateDisplay
              120A  118A         
  1948  0039  286D               	goto	l11819
  1949                           	line	390
  1950                           	
  1951  003A                     l2286:	
  1952                           	line	392
  1953                           ;Main.c: 390: }
  1954                           ;Main.c: 392: switch (buttonPressed)
  1955  003A  286D               	goto	l11819
  1956                           	line	394
  1957                           ;Main.c: 393: {
  1958                           ;Main.c: 394: case 1:
  1959                           	
  1960  003B                     l2288:	
  1961                           	line	395
  1962                           	
  1963  003B                     l11797:	
  1964                           ;Main.c: 395: Menu(1);
  1965  003B  3001               	movlw	(01h)
  1966  003C  160A  118A  2673   	fcall	_Menu
              120A  118A         
  1967                           	line	397
  1968                           	
  1969  0041                     l11799:	
  1970                           ;Main.c: 397: buttonPressed = 0;
  1971  0041  01FD               	clrf	(_buttonPressed)	;volatile
  1972                           	line	399
  1973                           ;Main.c: 399: break;
  1974  0042  2AAA               	goto	l11907
  1975                           	line	400
  1976                           ;Main.c: 400: case 2:
  1977                           	
  1978  0043                     l2290:	
  1979                           	line	401
  1980                           	
  1981  0043                     l11801:	
  1982                           ;Main.c: 401: Menu(2);
  1983  0043  3002               	movlw	(02h)
  1984  0044  160A  118A  2673   	fcall	_Menu
              120A  118A         
  1985                           	line	403
  1986                           	
  1987  0049                     l11803:	
  1988                           ;Main.c: 403: buttonPressed = 0;
  1989  0049  01FD               	clrf	(_buttonPressed)	;volatile
  1990                           	line	405
  1991                           ;Main.c: 405: break;
  1992  004A  2AAA               	goto	l11907
  1993                           	line	406
  1994                           ;Main.c: 406: case 3:
  1995                           	
  1996  004B                     l2291:	
  1997                           	line	407
  1998                           	
  1999  004B                     l11805:	
  2000                           ;Main.c: 407: Menu(3);
  2001  004B  3003               	movlw	(03h)
  2002  004C  160A  118A  2673   	fcall	_Menu
              120A  118A         
  2003                           	line	409
  2004                           	
  2005  0051                     l11807:	
  2006                           ;Main.c: 409: buttonPressed = 0;
  2007  0051  01FD               	clrf	(_buttonPressed)	;volatile
  2008                           	line	411
  2009                           ;Main.c: 411: break;
  2010  0052  2AAA               	goto	l11907
  2011                           	line	412
  2012                           ;Main.c: 412: case 4:
  2013                           	
  2014  0053                     l2292:	
  2015                           	line	413
  2016                           	
  2017  0053                     l11809:	
  2018                           ;Main.c: 413: Menu(4);
  2019  0053  3004               	movlw	(04h)
  2020  0054  160A  118A  2673   	fcall	_Menu
              120A  118A         
  2021                           	line	415
  2022                           	
  2023  0059                     l11811:	
  2024                           ;Main.c: 415: buttonPressed = 0;
  2025  0059  01FD               	clrf	(_buttonPressed)	;volatile
  2026                           	line	417
  2027                           ;Main.c: 417: break;
  2028  005A  2AAA               	goto	l11907
  2029                           	line	418
  2030                           ;Main.c: 418: case 5:
  2031                           	
  2032  005B                     l2293:	
  2033                           	line	419
  2034                           	
  2035  005B                     l11813:	
  2036                           ;Main.c: 419: choice = Menu(5);
  2037  005B  3005               	movlw	(05h)
  2038  005C  160A  118A  2673   	fcall	_Menu
              120A  118A         
  2039  0061  1283               	bcf	status, 5	;RP0=0, select bank0
  2040  0062  1303               	bcf	status, 6	;RP1=0, select bank0
  2041  0063  00E7               	movwf	(??_main+0)+0
  2042  0064  0867               	movf	(??_main+0)+0,w
  2043  0065  1683               	bsf	status, 5	;RP0=1, select bank1
  2044  0066  1303               	bcf	status, 6	;RP1=0, select bank1
  2045  0067  00E7               	movwf	(main@choice)^080h
  2046                           	line	421
  2047                           	
  2048  0068                     l11815:	
  2049                           ;Main.c: 421: buttonPressed = 0;
  2050  0068  01FD               	clrf	(_buttonPressed)	;volatile
  2051                           	line	423
  2052                           ;Main.c: 423: break;
  2053  0069  2AAA               	goto	l11907
  2054                           	line	424
  2055                           ;Main.c: 424: default:
  2056                           	
  2057  006A                     l2294:	
  2058                           	line	425
  2059                           ;Main.c: 425: buttonPressed = 0;
  2060  006A  01FD               	clrf	(_buttonPressed)	;volatile
  2061                           	line	426
  2062                           ;Main.c: 426: break;
  2063  006B  2AAA               	goto	l11907
  2064                           	line	427
  2065                           	
  2066  006C                     l11817:	
  2067                           ;Main.c: 427: }
  2068  006C  2AAA               	goto	l11907
  2069                           	line	392
  2070                           	
  2071  006D                     l2287:	
  2072                           	
  2073  006D                     l11819:	
  2074  006D  087D               	movf	(_buttonPressed),w	;volatile
  2075                           	; Switch size 1, requested type "space"
  2076                           ; Number of cases is 5, Range of values is 1 to 5
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte           16     9 (average)
  2080                           ; direct_byte           26    11 (fixed)
  2081                           ; jumptable            263     9 (fixed)
  2082                           ;	Chosen strategy is simple_byte
  2083                           
  2084                           	opt asmopt_off
  2085  006E  3A01               	xorlw	1^0	; case 1
  2086  006F  1903               	skipnz
  2087  0070  283B               	goto	l11797
  2088  0071  3A03               	xorlw	2^1	; case 2
  2089  0072  1903               	skipnz
  2090  0073  2843               	goto	l11801
  2091  0074  3A01               	xorlw	3^2	; case 3
  2092  0075  1903               	skipnz
  2093  0076  284B               	goto	l11805
  2094  0077  3A07               	xorlw	4^3	; case 4
  2095  0078  1903               	skipnz
  2096  0079  2853               	goto	l11809
  2097  007A  3A01               	xorlw	5^4	; case 5
  2098  007B  1903               	skipnz
  2099  007C  285B               	goto	l11813
  2100  007D  286A               	goto	l2294
  2101                           	opt asmopt_on
  2102                           
  2103                           	line	427
  2104                           	
  2105  007E                     l2289:	
  2106                           	line	430
  2107                           ;Main.c: 430: switch (choice)
  2108  007E  2AAA               	goto	l11907
  2109                           	line	432
  2110                           ;Main.c: 431: {
  2111                           ;Main.c: 432: case 0:
  2112                           	
  2113  007F                     l2296:	
  2114                           	line	435
  2115                           	
  2116  007F                     l11821:	
  2117                           ;Main.c: 435: straightLineTest(0);
  2118  007F  3000               	movlw	low(0)
  2119  0080  1283               	bcf	status, 5	;RP0=0, select bank0
  2120  0081  1303               	bcf	status, 6	;RP1=0, select bank0
  2121  0082  00E4               	movwf	(?_straightLineTest)
  2122  0083  3000               	movlw	high(0)
  2123  0084  00E5               	movwf	((?_straightLineTest))+1
  2124  0085  120A  158A  249F   	fcall	_straightLineTest
              120A  118A         
  2125                           	line	437
  2126                           ;Main.c: 437: break;
  2127  008A  2AC0               	goto	l11909
  2128                           	line	438
  2129                           ;Main.c: 438: case 1:
  2130                           	
  2131  008B                     l2298:	
  2132                           	line	440
  2133                           	
  2134  008B                     l11823:	
  2135                           ;Main.c: 440: straightLineTest(1);
  2136  008B  3001               	movlw	low(01h)
  2137  008C  1283               	bcf	status, 5	;RP0=0, select bank0
  2138  008D  1303               	bcf	status, 6	;RP1=0, select bank0
  2139  008E  00E4               	movwf	(?_straightLineTest)
  2140  008F  3000               	movlw	high(01h)
  2141  0090  00E5               	movwf	((?_straightLineTest))+1
  2142  0091  120A  158A  249F   	fcall	_straightLineTest
              120A  118A         
  2143                           	line	441
  2144                           ;Main.c: 441: break;
  2145  0096  2AC0               	goto	l11909
  2146                           	line	442
  2147                           ;Main.c: 442: case 2:
  2148                           	
  2149  0097                     l2299:	
  2150                           	line	443
  2151                           	
  2152  0097                     l11825:	
  2153                           ;Main.c: 443: straightLineTest(1);
  2154  0097  3001               	movlw	low(01h)
  2155  0098  1283               	bcf	status, 5	;RP0=0, select bank0
  2156  0099  1303               	bcf	status, 6	;RP1=0, select bank0
  2157  009A  00E4               	movwf	(?_straightLineTest)
  2158  009B  3000               	movlw	high(01h)
  2159  009C  00E5               	movwf	((?_straightLineTest))+1
  2160  009D  120A  158A  249F   	fcall	_straightLineTest
              120A  118A         
  2161                           	line	448
  2162                           ;Main.c: 448: break;
  2163  00A2  2AC0               	goto	l11909
  2164                           	line	449
  2165                           ;Main.c: 449: case 3:
  2166                           	
  2167  00A3                     l2300:	
  2168                           	line	450
  2169                           	
  2170  00A3                     l11827:	
  2171                           ;Main.c: 450: _delay((unsigned long)((100)*(20000000/4000.0)));
  2172                           	opt asmopt_off
  2173  00A3  3003               movlw  3
  2174  00A4  1283               	bcf	status, 5	;RP0=0, select bank0
  2175  00A5  1303               	bcf	status, 6	;RP1=0, select bank0
  2176  00A6  00E9               movwf	((??_main+0)+0+2),f
  2177  00A7  308A               movlw	138
  2178  00A8  00E8               movwf	((??_main+0)+0+1),f
  2179  00A9  3056               	movlw	86
  2180  00AA  00E7               movwf	((??_main+0)+0),f
  2181  00AB                     u5737:
  2182  00AB  0BE7               	decfsz	((??_main+0)+0),f
  2183  00AC  28AB               	goto	u5737
  2184  00AD  0BE8               	decfsz	((??_main+0)+0+1),f
  2185  00AE  28AB               	goto	u5737
  2186  00AF  0BE9               	decfsz	((??_main+0)+0+2),f
  2187  00B0  28AB               	goto	u5737
  2188  00B1  28B2               	nop2
  2189                           opt asmopt_on
  2190                           
  2191                           	line	451
  2192                           	
  2193  00B2                     l11829:	
  2194                           ;Main.c: 451: robotMove(1000);
  2195  00B2  30E8               	movlw	low(03E8h)
  2196  00B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2197  00B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2198  00B5  00D9               	movwf	(?_robotMove)
  2199  00B6  3003               	movlw	high(03E8h)
  2200  00B7  00DA               	movwf	((?_robotMove))+1
  2201  00B8  120A  158A  23F8   	fcall	_robotMove
              120A  118A         
  2202                           	line	452
  2203                           	
  2204  00BD                     l11831:	
  2205                           ;Main.c: 452: _delay((unsigned long)((100)*(20000000/4000.0)));
  2206                           	opt asmopt_off
  2207  00BD  3003               movlw  3
  2208  00BE  1283               	bcf	status, 5	;RP0=0, select bank0
  2209  00BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2210  00C0  00E9               movwf	((??_main+0)+0+2),f
  2211  00C1  308A               movlw	138
  2212  00C2  00E8               movwf	((??_main+0)+0+1),f
  2213  00C3  3056               	movlw	86
  2214  00C4  00E7               movwf	((??_main+0)+0),f
  2215  00C5                     u5747:
  2216  00C5  0BE7               	decfsz	((??_main+0)+0),f
  2217  00C6  28C5               	goto	u5747
  2218  00C7  0BE8               	decfsz	((??_main+0)+0+1),f
  2219  00C8  28C5               	goto	u5747
  2220  00C9  0BE9               	decfsz	((??_main+0)+0+2),f
  2221  00CA  28C5               	goto	u5747
  2222  00CB  28CC               	nop2
  2223                           opt asmopt_on
  2224                           
  2225                           	line	453
  2226                           	
  2227  00CC                     l11833:	
  2228                           ;Main.c: 453: robotTurn(-90);
  2229  00CC  30A6               	movlw	low(-90)
  2230  00CD  1283               	bcf	status, 5	;RP0=0, select bank0
  2231  00CE  1303               	bcf	status, 6	;RP1=0, select bank0
  2232  00CF  00A2               	movwf	(?_robotTurn)
  2233  00D0  30FF               	movlw	high(-90)
  2234  00D1  00A3               	movwf	((?_robotTurn))+1
  2235  00D2  120A  158A  2232   	fcall	_robotTurn
              120A  118A         
  2236                           	line	454
  2237                           	
  2238  00D7                     l11835:	
  2239                           ;Main.c: 454: _delay((unsigned long)((100)*(20000000/4000.0)));
  2240                           	opt asmopt_off
  2241  00D7  3003               movlw  3
  2242  00D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2243  00D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2244  00DA  00E9               movwf	((??_main+0)+0+2),f
  2245  00DB  308A               movlw	138
  2246  00DC  00E8               movwf	((??_main+0)+0+1),f
  2247  00DD  3056               	movlw	86
  2248  00DE  00E7               movwf	((??_main+0)+0),f
  2249  00DF                     u5757:
  2250  00DF  0BE7               	decfsz	((??_main+0)+0),f
  2251  00E0  28DF               	goto	u5757
  2252  00E1  0BE8               	decfsz	((??_main+0)+0+1),f
  2253  00E2  28DF               	goto	u5757
  2254  00E3  0BE9               	decfsz	((??_main+0)+0+2),f
  2255  00E4  28DF               	goto	u5757
  2256  00E5  28E6               	nop2
  2257                           opt asmopt_on
  2258                           
  2259                           	line	455
  2260                           	
  2261  00E6                     l11837:	
  2262                           ;Main.c: 455: robotMove(1000);
  2263  00E6  30E8               	movlw	low(03E8h)
  2264  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2265  00E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2266  00E9  00D9               	movwf	(?_robotMove)
  2267  00EA  3003               	movlw	high(03E8h)
  2268  00EB  00DA               	movwf	((?_robotMove))+1
  2269  00EC  120A  158A  23F8   	fcall	_robotMove
              120A  118A         
  2270                           	line	456
  2271                           ;Main.c: 456: break;
  2272  00F1  2AC0               	goto	l11909
  2273                           	line	457
  2274                           ;Main.c: 457: case 4:
  2275                           	
  2276  00F2                     l2301:	
  2277  00F2  28F3               	goto	l11839
  2278                           	line	459
  2279                           ;Main.c: 459: while(1)
  2280                           	
  2281  00F3                     l2302:	
  2282                           	line	461
  2283                           	
  2284  00F3                     l11839:	
  2285                           ;Main.c: 460: {
  2286                           ;Main.c: 461: shortwall = scan360() - 13;
  2287  00F3  120A  158A  213B   	fcall	_scan360
              120A  118A         
  2288  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2289  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2290  00FA  0859               	movf	(0+(?_scan360)),w
  2291  00FB  3EF3               	addlw	low(-13)
  2292  00FC  1683               	bsf	status, 5	;RP0=1, select bank1
  2293  00FD  1303               	bcf	status, 6	;RP1=0, select bank1
  2294  00FE  00E8               	movwf	(main@shortwall)^080h
  2295  00FF  1283               	bcf	status, 5	;RP0=0, select bank0
  2296  0100  1303               	bcf	status, 6	;RP1=0, select bank0
  2297  0101  085A               	movf	(1+(?_scan360)),w
  2298  0102  1803               	skipnc
  2299  0103  3E01               	addlw	1
  2300  0104  3EFF               	addlw	high(-13)
  2301  0105  1683               	bsf	status, 5	;RP0=1, select bank1
  2302  0106  1303               	bcf	status, 6	;RP1=0, select bank1
  2303  0107  00E9               	movwf	1+(main@shortwall)^080h
  2304                           	line	462
  2305                           	
  2306  0108                     l11841:	
  2307                           ;Main.c: 462: int RT2P = 0;
  2308  0108  01EA               	clrf	(main@RT2P)^080h
  2309  0109  01EB               	clrf	(main@RT2P+1)^080h
  2310                           	line	463
  2311                           	
  2312  010A                     l11843:	
  2313                           ;Main.c: 463: int direction1 = 0;
  2314  010A  01E3               	clrf	(main@direction1)^080h
  2315  010B  01E4               	clrf	(main@direction1+1)^080h
  2316                           	line	464
  2317                           	
  2318  010C                     l11845:	
  2319                           ;Main.c: 464: if (shortwall > 200)
  2320  010C  0869               	movf	(main@shortwall+1)^080h,w
  2321  010D  3A80               	xorlw	80h
  2322  010E  00FF               	movwf	btemp+1
  2323  010F  3080               	movlw	(high(0C9h))^80h
  2324  0110  027F               	subwf	btemp+1,w
  2325  0111  1D03               	skipz
  2326  0112  2915               	goto	u5635
  2327  0113  30C9               	movlw	low(0C9h)
  2328  0114  0268               	subwf	(main@shortwall)^080h,w
  2329  0115                     u5635:
  2330                           
  2331  0115  1C03               	skipc
  2332  0116  2918               	goto	u5631
  2333  0117  2919               	goto	u5630
  2334  0118                     u5631:
  2335  0118  2924               	goto	l11849
  2336  0119                     u5630:
  2337                           	line	465
  2338                           	
  2339  0119                     l11847:	
  2340                           ;Main.c: 465: RT2P = shortwall + 100;
  2341  0119  1683               	bsf	status, 5	;RP0=1, select bank1
  2342  011A  1303               	bcf	status, 6	;RP1=0, select bank1
  2343  011B  0868               	movf	(main@shortwall)^080h,w
  2344  011C  3E64               	addlw	low(064h)
  2345  011D  00EA               	movwf	(main@RT2P)^080h
  2346  011E  0869               	movf	(main@shortwall+1)^080h,w
  2347  011F  1803               	skipnc
  2348  0120  3E01               	addlw	1
  2349  0121  3E00               	addlw	high(064h)
  2350  0122  00EB               	movwf	1+(main@RT2P)^080h
  2351  0123  2924               	goto	l11849
  2352                           	
  2353  0124                     l2303:	
  2354                           	line	466
  2355                           	
  2356  0124                     l11849:	
  2357                           ;Main.c: 466: if (shortwall < 200)
  2358  0124  1683               	bsf	status, 5	;RP0=1, select bank1
  2359  0125  1303               	bcf	status, 6	;RP1=0, select bank1
  2360  0126  0869               	movf	(main@shortwall+1)^080h,w
  2361  0127  3A80               	xorlw	80h
  2362  0128  00FF               	movwf	btemp+1
  2363  0129  3080               	movlw	(high(0C8h))^80h
  2364  012A  027F               	subwf	btemp+1,w
  2365  012B  1D03               	skipz
  2366  012C  292F               	goto	u5645
  2367  012D  30C8               	movlw	low(0C8h)
  2368  012E  0268               	subwf	(main@shortwall)^080h,w
  2369  012F                     u5645:
  2370                           
  2371  012F  1803               	skipnc
  2372  0130  2932               	goto	u5641
  2373  0131  2933               	goto	u5640
  2374  0132                     u5641:
  2375  0132  293E               	goto	l11853
  2376  0133                     u5640:
  2377                           	line	467
  2378                           	
  2379  0133                     l11851:	
  2380                           ;Main.c: 467: RT2P = shortwall - 100;
  2381  0133  1683               	bsf	status, 5	;RP0=1, select bank1
  2382  0134  1303               	bcf	status, 6	;RP1=0, select bank1
  2383  0135  0868               	movf	(main@shortwall)^080h,w
  2384  0136  3E9C               	addlw	low(-100)
  2385  0137  00EA               	movwf	(main@RT2P)^080h
  2386  0138  0869               	movf	(main@shortwall+1)^080h,w
  2387  0139  1803               	skipnc
  2388  013A  3E01               	addlw	1
  2389  013B  3EFF               	addlw	high(-100)
  2390  013C  00EB               	movwf	1+(main@RT2P)^080h
  2391  013D  293E               	goto	l11853
  2392                           	
  2393  013E                     l2304:	
  2394                           	line	470
  2395                           	
  2396  013E                     l11853:	
  2397                           ;Main.c: 470: if (RT2P >= 400 && RT2P < 500 )
  2398  013E  1683               	bsf	status, 5	;RP0=1, select bank1
  2399  013F  1303               	bcf	status, 6	;RP1=0, select bank1
  2400  0140  086B               	movf	(main@RT2P+1)^080h,w
  2401  0141  3A80               	xorlw	80h
  2402  0142  00FF               	movwf	btemp+1
  2403  0143  3081               	movlw	(high(0190h))^80h
  2404  0144  027F               	subwf	btemp+1,w
  2405  0145  1D03               	skipz
  2406  0146  2949               	goto	u5655
  2407  0147  3090               	movlw	low(0190h)
  2408  0148  026A               	subwf	(main@RT2P)^080h,w
  2409  0149                     u5655:
  2410                           
  2411  0149  1C03               	skipc
  2412  014A  294C               	goto	u5651
  2413  014B  294D               	goto	u5650
  2414  014C                     u5651:
  2415  014C  296B               	goto	l11861
  2416  014D                     u5650:
  2417                           	
  2418  014D                     l11855:	
  2419  014D  1683               	bsf	status, 5	;RP0=1, select bank1
  2420  014E  1303               	bcf	status, 6	;RP1=0, select bank1
  2421  014F  086B               	movf	(main@RT2P+1)^080h,w
  2422  0150  3A80               	xorlw	80h
  2423  0151  00FF               	movwf	btemp+1
  2424  0152  3081               	movlw	(high(01F4h))^80h
  2425  0153  027F               	subwf	btemp+1,w
  2426  0154  1D03               	skipz
  2427  0155  2958               	goto	u5665
  2428  0156  30F4               	movlw	low(01F4h)
  2429  0157  026A               	subwf	(main@RT2P)^080h,w
  2430  0158                     u5665:
  2431                           
  2432  0158  1803               	skipnc
  2433  0159  295B               	goto	u5661
  2434  015A  295C               	goto	u5660
  2435  015B                     u5661:
  2436  015B  296B               	goto	l11861
  2437  015C                     u5660:
  2438                           	line	472
  2439                           	
  2440  015C                     l11857:	
  2441                           ;Main.c: 471: {
  2442                           ;Main.c: 472: RT2P = RT2P - 400;
  2443  015C  1683               	bsf	status, 5	;RP0=1, select bank1
  2444  015D  1303               	bcf	status, 6	;RP1=0, select bank1
  2445  015E  086A               	movf	(main@RT2P)^080h,w
  2446  015F  3E70               	addlw	low(-400)
  2447  0160  00EA               	movwf	(main@RT2P)^080h
  2448  0161  086B               	movf	(main@RT2P+1)^080h,w
  2449  0162  1803               	skipnc
  2450  0163  3E01               	addlw	1
  2451  0164  3EFE               	addlw	high(-400)
  2452  0165  00EB               	movwf	1+(main@RT2P)^080h
  2453                           	line	473
  2454                           	
  2455  0166                     l11859:	
  2456                           ;Main.c: 473: direction1 = 1;
  2457  0166  3001               	movlw	low(01h)
  2458  0167  00E3               	movwf	(main@direction1)^080h
  2459  0168  3000               	movlw	high(01h)
  2460  0169  00E4               	movwf	((main@direction1)^080h)+1
  2461  016A  296B               	goto	l11861
  2462                           	line	474
  2463                           	
  2464  016B                     l2305:	
  2465                           	line	475
  2466                           	
  2467  016B                     l11861:	
  2468                           ;Main.c: 474: }
  2469                           ;Main.c: 475: if (RT2P >= 200 && RT2P < 400)
  2470  016B  1683               	bsf	status, 5	;RP0=1, select bank1
  2471  016C  1303               	bcf	status, 6	;RP1=0, select bank1
  2472  016D  086B               	movf	(main@RT2P+1)^080h,w
  2473  016E  3A80               	xorlw	80h
  2474  016F  00FF               	movwf	btemp+1
  2475  0170  3080               	movlw	(high(0C8h))^80h
  2476  0171  027F               	subwf	btemp+1,w
  2477  0172  1D03               	skipz
  2478  0173  2976               	goto	u5675
  2479  0174  30C8               	movlw	low(0C8h)
  2480  0175  026A               	subwf	(main@RT2P)^080h,w
  2481  0176                     u5675:
  2482                           
  2483  0176  1C03               	skipc
  2484  0177  2979               	goto	u5671
  2485  0178  297A               	goto	u5670
  2486  0179                     u5671:
  2487  0179  29AE               	goto	l11871
  2488  017A                     u5670:
  2489                           	
  2490  017A                     l11863:	
  2491  017A  1683               	bsf	status, 5	;RP0=1, select bank1
  2492  017B  1303               	bcf	status, 6	;RP1=0, select bank1
  2493  017C  086B               	movf	(main@RT2P+1)^080h,w
  2494  017D  3A80               	xorlw	80h
  2495  017E  00FF               	movwf	btemp+1
  2496  017F  3081               	movlw	(high(0190h))^80h
  2497  0180  027F               	subwf	btemp+1,w
  2498  0181  1D03               	skipz
  2499  0182  2985               	goto	u5685
  2500  0183  3090               	movlw	low(0190h)
  2501  0184  026A               	subwf	(main@RT2P)^080h,w
  2502  0185                     u5685:
  2503                           
  2504  0185  1803               	skipnc
  2505  0186  2988               	goto	u5681
  2506  0187  2989               	goto	u5680
  2507  0188                     u5681:
  2508  0188  29AE               	goto	l11871
  2509  0189                     u5680:
  2510                           	line	477
  2511                           	
  2512  0189                     l11865:	
  2513                           ;Main.c: 476: {
  2514                           ;Main.c: 477: RT2P = 400 - RT2P;
  2515  0189  1683               	bsf	status, 5	;RP0=1, select bank1
  2516  018A  1303               	bcf	status, 6	;RP1=0, select bank1
  2517  018B  096A               	comf	(main@RT2P)^080h,w
  2518  018C  1283               	bcf	status, 5	;RP0=0, select bank0
  2519  018D  1303               	bcf	status, 6	;RP1=0, select bank0
  2520  018E  00E7               	movwf	(??_main+0)+0
  2521  018F  1683               	bsf	status, 5	;RP0=1, select bank1
  2522  0190  1303               	bcf	status, 6	;RP1=0, select bank1
  2523  0191  096B               	comf	(main@RT2P+1)^080h,w
  2524  0192  1283               	bcf	status, 5	;RP0=0, select bank0
  2525  0193  1303               	bcf	status, 6	;RP1=0, select bank0
  2526  0194  00E8               	movwf	((??_main+0)+0+1)
  2527  0195  0AE7               	incf	(??_main+0)+0,f
  2528  0196  1903               	skipnz
  2529  0197  0AE8               	incf	((??_main+0)+0+1),f
  2530  0198  0867               	movf	0+(??_main+0)+0,w
  2531  0199  3E90               	addlw	low(0190h)
  2532  019A  1683               	bsf	status, 5	;RP0=1, select bank1
  2533  019B  1303               	bcf	status, 6	;RP1=0, select bank1
  2534  019C  00EA               	movwf	(main@RT2P)^080h
  2535  019D  1283               	bcf	status, 5	;RP0=0, select bank0
  2536  019E  1303               	bcf	status, 6	;RP1=0, select bank0
  2537  019F  0868               	movf	1+(??_main+0)+0,w
  2538  01A0  1803               	skipnc
  2539  01A1  3E01               	addlw	1
  2540  01A2  3E01               	addlw	high(0190h)
  2541  01A3  1683               	bsf	status, 5	;RP0=1, select bank1
  2542  01A4  1303               	bcf	status, 6	;RP1=0, select bank1
  2543  01A5  00EB               	movwf	1+(main@RT2P)^080h
  2544                           	line	478
  2545                           	
  2546  01A6                     l11867:	
  2547                           ;Main.c: 478: RT2P = RT2P * -1;
  2548  01A6  09EA               	comf	(main@RT2P)^080h,f
  2549  01A7  09EB               	comf	(main@RT2P+1)^080h,f
  2550  01A8  0AEA               	incf	(main@RT2P)^080h,f
  2551  01A9  1903               	skipnz
  2552  01AA  0AEB               	incf	(main@RT2P+1)^080h,f
  2553                           	line	479
  2554                           	
  2555  01AB                     l11869:	
  2556                           ;Main.c: 479: direction1 = 0;
  2557  01AB  01E3               	clrf	(main@direction1)^080h
  2558  01AC  01E4               	clrf	(main@direction1+1)^080h
  2559  01AD  29AE               	goto	l11871
  2560                           	line	480
  2561                           	
  2562  01AE                     l2306:	
  2563                           	line	481
  2564                           	
  2565  01AE                     l11871:	
  2566                           ;Main.c: 480: }
  2567                           ;Main.c: 481: if (RT2P < 200 && RT2P >= 0)
  2568  01AE  1683               	bsf	status, 5	;RP0=1, select bank1
  2569  01AF  1303               	bcf	status, 6	;RP1=0, select bank1
  2570  01B0  086B               	movf	(main@RT2P+1)^080h,w
  2571  01B1  3A80               	xorlw	80h
  2572  01B2  00FF               	movwf	btemp+1
  2573  01B3  3080               	movlw	(high(0C8h))^80h
  2574  01B4  027F               	subwf	btemp+1,w
  2575  01B5  1D03               	skipz
  2576  01B6  29B9               	goto	u5695
  2577  01B7  30C8               	movlw	low(0C8h)
  2578  01B8  026A               	subwf	(main@RT2P)^080h,w
  2579  01B9                     u5695:
  2580                           
  2581  01B9  1803               	skipnc
  2582  01BA  29BC               	goto	u5691
  2583  01BB  29BD               	goto	u5690
  2584  01BC                     u5691:
  2585  01BC  29C8               	goto	l11877
  2586  01BD                     u5690:
  2587                           	
  2588  01BD                     l11873:	
  2589  01BD  1683               	bsf	status, 5	;RP0=1, select bank1
  2590  01BE  1303               	bcf	status, 6	;RP1=0, select bank1
  2591  01BF  1BEB               	btfsc	(main@RT2P+1)^080h,7
  2592  01C0  29C2               	goto	u5701
  2593  01C1  29C3               	goto	u5700
  2594  01C2                     u5701:
  2595  01C2  29C8               	goto	l11877
  2596  01C3                     u5700:
  2597                           	line	483
  2598                           	
  2599  01C3                     l11875:	
  2600                           ;Main.c: 482: {
  2601                           ;Main.c: 483: direction1 = 1;
  2602  01C3  3001               	movlw	low(01h)
  2603  01C4  00E3               	movwf	(main@direction1)^080h
  2604  01C5  3000               	movlw	high(01h)
  2605  01C6  00E4               	movwf	((main@direction1)^080h)+1
  2606  01C7  29C8               	goto	l11877
  2607                           	line	484
  2608                           	
  2609  01C8                     l2307:	
  2610                           	line	485
  2611                           	
  2612  01C8                     l11877:	
  2613                           ;Main.c: 484: }
  2614                           ;Main.c: 485: if (RT2P < 0 && RT2P >= -200)
  2615  01C8  1683               	bsf	status, 5	;RP0=1, select bank1
  2616  01C9  1303               	bcf	status, 6	;RP1=0, select bank1
  2617  01CA  1FEB               	btfss	(main@RT2P+1)^080h,7
  2618  01CB  29CD               	goto	u5711
  2619  01CC  29CE               	goto	u5710
  2620  01CD                     u5711:
  2621  01CD  29E4               	goto	l11887
  2622  01CE                     u5710:
  2623                           	
  2624  01CE                     l11879:	
  2625  01CE  086B               	movf	(main@RT2P+1)^080h,w
  2626  01CF  3A80               	xorlw	80h
  2627  01D0  00FF               	movwf	btemp+1
  2628  01D1  307F               	movlw	(high(-200))^80h
  2629  01D2  027F               	subwf	btemp+1,w
  2630  01D3  1D03               	skipz
  2631  01D4  29D7               	goto	u5725
  2632  01D5  3038               	movlw	low(-200)
  2633  01D6  026A               	subwf	(main@RT2P)^080h,w
  2634  01D7                     u5725:
  2635                           
  2636  01D7  1C03               	skipc
  2637  01D8  29DA               	goto	u5721
  2638  01D9  29DB               	goto	u5720
  2639  01DA                     u5721:
  2640  01DA  29E4               	goto	l11887
  2641  01DB                     u5720:
  2642                           	line	488
  2643                           	
  2644  01DB                     l11881:	
  2645                           ;Main.c: 486: {
  2646                           ;Main.c: 488: direction1 = 0;
  2647  01DB  1683               	bsf	status, 5	;RP0=1, select bank1
  2648  01DC  1303               	bcf	status, 6	;RP1=0, select bank1
  2649  01DD  01E3               	clrf	(main@direction1)^080h
  2650  01DE  01E4               	clrf	(main@direction1+1)^080h
  2651  01DF  29E4               	goto	l11887
  2652                           	line	489
  2653                           	
  2654  01E0                     l2308:	
  2655  01E0  29E4               	goto	l11887
  2656                           	line	490
  2657                           	
  2658  01E1                     l11883:	
  2659  01E1  29E4               	goto	l11887
  2660                           	
  2661  01E2                     l11885:	
  2662  01E2  29E4               	goto	l11887
  2663                           	
  2664  01E3                     l2311:	
  2665  01E3  29E4               	goto	l11887
  2666                           	line	493
  2667                           ;Main.c: 491: {
  2668                           	
  2669  01E4                     l2309:	
  2670                           	line	495
  2671                           	
  2672  01E4                     l11887:	
  2673                           ;Main.c: 493: }
  2674                           ;Main.c: 495: rotate((400 - shortwall ), 0);
  2675  01E4  1683               	bsf	status, 5	;RP0=1, select bank1
  2676  01E5  1303               	bcf	status, 6	;RP1=0, select bank1
  2677  01E6  0968               	comf	(main@shortwall)^080h,w
  2678  01E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2679  01E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2680  01E9  00E7               	movwf	(??_main+0)+0
  2681  01EA  1683               	bsf	status, 5	;RP0=1, select bank1
  2682  01EB  1303               	bcf	status, 6	;RP1=0, select bank1
  2683  01EC  0969               	comf	(main@shortwall+1)^080h,w
  2684  01ED  1283               	bcf	status, 5	;RP0=0, select bank0
  2685  01EE  1303               	bcf	status, 6	;RP1=0, select bank0
  2686  01EF  00E8               	movwf	((??_main+0)+0+1)
  2687  01F0  0AE7               	incf	(??_main+0)+0,f
  2688  01F1  1903               	skipnz
  2689  01F2  0AE8               	incf	((??_main+0)+0+1),f
  2690  01F3  0867               	movf	0+(??_main+0)+0,w
  2691  01F4  3E90               	addlw	low(0190h)
  2692  01F5  00A3               	movwf	(?_rotate)
  2693  01F6  0868               	movf	1+(??_main+0)+0,w
  2694  01F7  1803               	skipnc
  2695  01F8  3E01               	addlw	1
  2696  01F9  3E01               	addlw	high(0190h)
  2697  01FA  00A4               	movwf	1+(?_rotate)
  2698  01FB  01A5               	clrf	0+(?_rotate)+02h
  2699  01FC  160A  118A  270A   	fcall	_rotate
              120A  118A         
  2700                           	line	496
  2701                           	
  2702  0201                     l11889:	
  2703                           ;Main.c: 496: _delay((unsigned long)((100)*(20000000/4000.0)));
  2704                           	opt asmopt_off
  2705  0201  3003               movlw  3
  2706  0202  1283               	bcf	status, 5	;RP0=0, select bank0
  2707  0203  1303               	bcf	status, 6	;RP1=0, select bank0
  2708  0204  00E9               movwf	((??_main+0)+0+2),f
  2709  0205  308A               movlw	138
  2710  0206  00E8               movwf	((??_main+0)+0+1),f
  2711  0207  3056               	movlw	86
  2712  0208  00E7               movwf	((??_main+0)+0),f
  2713  0209                     u5767:
  2714  0209  0BE7               	decfsz	((??_main+0)+0),f
  2715  020A  2A09               	goto	u5767
  2716  020B  0BE8               	decfsz	((??_main+0)+0+1),f
  2717  020C  2A09               	goto	u5767
  2718  020D  0BE9               	decfsz	((??_main+0)+0+2),f
  2719  020E  2A09               	goto	u5767
  2720  020F  2A10               	nop2
  2721                           opt asmopt_on
  2722                           
  2723                           	line	499
  2724                           	
  2725  0210                     l11891:	
  2726                           ;Main.c: 499: int RT2A= RT2P * (36.0/40.0);
  2727  0210  1683               	bsf	status, 5	;RP0=1, select bank1
  2728  0211  1303               	bcf	status, 6	;RP1=0, select bank1
  2729  0212  086B               	movf	(main@RT2P+1)^080h,w
  2730  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  2731  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  2732  0215  01B7               	clrf	(?___awtoft+1)
  2733  0216  07B7               	addwf	(?___awtoft+1)
  2734  0217  1683               	bsf	status, 5	;RP0=1, select bank1
  2735  0218  1303               	bcf	status, 6	;RP1=0, select bank1
  2736  0219  086A               	movf	(main@RT2P)^080h,w
  2737  021A  1283               	bcf	status, 5	;RP0=0, select bank0
  2738  021B  1303               	bcf	status, 6	;RP1=0, select bank0
  2739  021C  01B6               	clrf	(?___awtoft)
  2740  021D  07B6               	addwf	(?___awtoft)
  2741                           
  2742  021E  160A  118A  244F   	fcall	___awtoft
              120A  118A         
  2743  0223  1283               	bcf	status, 5	;RP0=0, select bank0
  2744  0224  1303               	bcf	status, 6	;RP1=0, select bank0
  2745  0225  0836               	movf	(0+(?___awtoft)),w
  2746  0226  00BF               	movwf	0+(?___ftmul)+03h
  2747  0227  0837               	movf	(1+(?___awtoft)),w
  2748  0228  00C0               	movwf	1+(?___ftmul)+03h
  2749  0229  0838               	movf	(2+(?___awtoft)),w
  2750  022A  00C1               	movwf	2+(?___ftmul)+03h
  2751  022B  3066               	movlw	0x66
  2752  022C  00BC               	movwf	(?___ftmul)
  2753  022D  3066               	movlw	0x66
  2754  022E  00BD               	movwf	(?___ftmul+1)
  2755  022F  303F               	movlw	0x3f
  2756  0230  00BE               	movwf	(?___ftmul+2)
  2757  0231  120A  118A  2711   	fcall	___ftmul
              120A  118A         
  2758  0236  1283               	bcf	status, 5	;RP0=0, select bank0
  2759  0237  1303               	bcf	status, 6	;RP1=0, select bank0
  2760  0238  083C               	movf	(0+(?___ftmul)),w
  2761  0239  00A8               	movwf	(?___fttol)
  2762  023A  083D               	movf	(1+(?___ftmul)),w
  2763  023B  00A9               	movwf	(?___fttol+1)
  2764  023C  083E               	movf	(2+(?___ftmul)),w
  2765  023D  00AA               	movwf	(?___fttol+2)
  2766  023E  120A  158A  2352   	fcall	___fttol
              120A  118A         
  2767  0243  1283               	bcf	status, 5	;RP0=0, select bank0
  2768  0244  1303               	bcf	status, 6	;RP1=0, select bank0
  2769  0245  0829               	movf	1+(((0+(?___fttol)))),w
  2770  0246  1683               	bsf	status, 5	;RP0=1, select bank1
  2771  0247  1303               	bcf	status, 6	;RP1=0, select bank1
  2772  0248  01E6               	clrf	(main@RT2A+1)^080h
  2773  0249  07E6               	addwf	(main@RT2A+1)^080h
  2774  024A  1283               	bcf	status, 5	;RP0=0, select bank0
  2775  024B  1303               	bcf	status, 6	;RP1=0, select bank0
  2776  024C  0828               	movf	0+(((0+(?___fttol)))),w
  2777  024D  1683               	bsf	status, 5	;RP0=1, select bank1
  2778  024E  1303               	bcf	status, 6	;RP1=0, select bank1
  2779  024F  01E5               	clrf	(main@RT2A)^080h
  2780  0250  07E5               	addwf	(main@RT2A)^080h
  2781                           
  2782                           	line	500
  2783                           	
  2784  0251                     l11893:	
  2785                           ;Main.c: 500: robotTurn(RT2A);
  2786  0251  0866               	movf	(main@RT2A+1)^080h,w
  2787  0252  1283               	bcf	status, 5	;RP0=0, select bank0
  2788  0253  1303               	bcf	status, 6	;RP1=0, select bank0
  2789  0254  01A3               	clrf	(?_robotTurn+1)
  2790  0255  07A3               	addwf	(?_robotTurn+1)
  2791  0256  1683               	bsf	status, 5	;RP0=1, select bank1
  2792  0257  1303               	bcf	status, 6	;RP1=0, select bank1
  2793  0258  0865               	movf	(main@RT2A)^080h,w
  2794  0259  1283               	bcf	status, 5	;RP0=0, select bank0
  2795  025A  1303               	bcf	status, 6	;RP1=0, select bank0
  2796  025B  01A2               	clrf	(?_robotTurn)
  2797  025C  07A2               	addwf	(?_robotTurn)
  2798                           
  2799  025D  120A  158A  2232   	fcall	_robotTurn
              120A  118A         
  2800                           	line	501
  2801                           	
  2802  0262                     l11895:	
  2803                           ;Main.c: 501: _delay((unsigned long)((100)*(20000000/4000.0)));
  2804                           	opt asmopt_off
  2805  0262  3003               movlw  3
  2806  0263  1283               	bcf	status, 5	;RP0=0, select bank0
  2807  0264  1303               	bcf	status, 6	;RP1=0, select bank0
  2808  0265  00E9               movwf	((??_main+0)+0+2),f
  2809  0266  308A               movlw	138
  2810  0267  00E8               movwf	((??_main+0)+0+1),f
  2811  0268  3056               	movlw	86
  2812  0269  00E7               movwf	((??_main+0)+0),f
  2813  026A                     u5777:
  2814  026A  0BE7               	decfsz	((??_main+0)+0),f
  2815  026B  2A6A               	goto	u5777
  2816  026C  0BE8               	decfsz	((??_main+0)+0+1),f
  2817  026D  2A6A               	goto	u5777
  2818  026E  0BE9               	decfsz	((??_main+0)+0+2),f
  2819  026F  2A6A               	goto	u5777
  2820  0270  2A71               	nop2
  2821                           opt asmopt_on
  2822                           
  2823                           	line	502
  2824                           	
  2825  0271                     l11897:	
  2826                           ;Main.c: 502: rotate(shortwall,0);
  2827  0271  1683               	bsf	status, 5	;RP0=1, select bank1
  2828  0272  1303               	bcf	status, 6	;RP1=0, select bank1
  2829  0273  0869               	movf	(main@shortwall+1)^080h,w
  2830  0274  1283               	bcf	status, 5	;RP0=0, select bank0
  2831  0275  1303               	bcf	status, 6	;RP1=0, select bank0
  2832  0276  01A4               	clrf	(?_rotate+1)
  2833  0277  07A4               	addwf	(?_rotate+1)
  2834  0278  1683               	bsf	status, 5	;RP0=1, select bank1
  2835  0279  1303               	bcf	status, 6	;RP1=0, select bank1
  2836  027A  0868               	movf	(main@shortwall)^080h,w
  2837  027B  1283               	bcf	status, 5	;RP0=0, select bank0
  2838  027C  1303               	bcf	status, 6	;RP1=0, select bank0
  2839  027D  01A3               	clrf	(?_rotate)
  2840  027E  07A3               	addwf	(?_rotate)
  2841                           
  2842  027F  01A5               	clrf	0+(?_rotate)+02h
  2843  0280  160A  118A  270A   	fcall	_rotate
              120A  118A         
  2844                           	line	503
  2845                           	
  2846  0285                     l11899:	
  2847                           ;Main.c: 503: _delay((unsigned long)((100)*(20000000/4000.0)));
  2848                           	opt asmopt_off
  2849  0285  3003               movlw  3
  2850  0286  1283               	bcf	status, 5	;RP0=0, select bank0
  2851  0287  1303               	bcf	status, 6	;RP1=0, select bank0
  2852  0288  00E9               movwf	((??_main+0)+0+2),f
  2853  0289  308A               movlw	138
  2854  028A  00E8               movwf	((??_main+0)+0+1),f
  2855  028B  3056               	movlw	86
  2856  028C  00E7               movwf	((??_main+0)+0),f
  2857  028D                     u5787:
  2858  028D  0BE7               	decfsz	((??_main+0)+0),f
  2859  028E  2A8D               	goto	u5787
  2860  028F  0BE8               	decfsz	((??_main+0)+0+1),f
  2861  0290  2A8D               	goto	u5787
  2862  0291  0BE9               	decfsz	((??_main+0)+0+2),f
  2863  0292  2A8D               	goto	u5787
  2864  0293  2A94               	nop2
  2865                           opt asmopt_on
  2866                           
  2867                           	line	504
  2868                           	
  2869  0294                     l11901:	
  2870                           ;Main.c: 504: robotMove(500);
  2871  0294  30F4               	movlw	low(01F4h)
  2872  0295  1283               	bcf	status, 5	;RP0=0, select bank0
  2873  0296  1303               	bcf	status, 6	;RP1=0, select bank0
  2874  0297  00D9               	movwf	(?_robotMove)
  2875  0298  3001               	movlw	high(01F4h)
  2876  0299  00DA               	movwf	((?_robotMove))+1
  2877  029A  120A  158A  23F8   	fcall	_robotMove
              120A  118A         
  2878  029F  28F3               	goto	l11839
  2879                           	line	505
  2880                           	
  2881  02A0                     l2312:	
  2882                           	line	459
  2883  02A0  28F3               	goto	l11839
  2884                           	
  2885  02A1                     l2313:	
  2886                           	line	507
  2887                           ;Main.c: 505: }
  2888                           ;Main.c: 507: break;
  2889  02A1  2AC0               	goto	l11909
  2890                           	line	509
  2891                           ;Main.c: 509: case 5:
  2892                           	
  2893  02A2                     l2314:	
  2894                           	line	510
  2895                           	
  2896  02A2                     l11903:	
  2897                           ;Main.c: 510: ChargeMode();
  2898  02A2  160A  118A  262D   	fcall	_ChargeMode
              120A  118A         
  2899                           	line	511
  2900                           ;Main.c: 511: break;
  2901  02A7  2AC0               	goto	l11909
  2902                           	line	512
  2903                           ;Main.c: 512: default:
  2904                           	
  2905  02A8                     l2315:	
  2906                           	line	514
  2907                           ;Main.c: 514: break;
  2908  02A8  2AC0               	goto	l11909
  2909                           	line	515
  2910                           	
  2911  02A9                     l11905:	
  2912                           ;Main.c: 515: }
  2913  02A9  2AC0               	goto	l11909
  2914                           	line	430
  2915                           	
  2916  02AA                     l2295:	
  2917                           	
  2918  02AA                     l11907:	
  2919  02AA  1683               	bsf	status, 5	;RP0=1, select bank1
  2920  02AB  1303               	bcf	status, 6	;RP1=0, select bank1
  2921  02AC  0867               	movf	(main@choice)^080h,w
  2922                           	; Switch size 1, requested type "space"
  2923                           ; Number of cases is 6, Range of values is 0 to 5
  2924                           ; switch strategies available:
  2925                           ; Name         Instructions Cycles
  2926                           ; simple_byte           19    10 (average)
  2927                           ; direct_byte           26     8 (fixed)
  2928                           ; jumptable            260     6 (fixed)
  2929                           ; rangetable            10     6 (fixed)
  2930                           ; spacedrange           18     9 (fixed)
  2931                           ; locatedrange           6     3 (fixed)
  2932                           ;	Chosen strategy is simple_byte
  2933                           
  2934                           	opt asmopt_off
  2935  02AD  3A00               	xorlw	0^0	; case 0
  2936  02AE  1903               	skipnz
  2937  02AF  287F               	goto	l11821
  2938  02B0  3A01               	xorlw	1^0	; case 1
  2939  02B1  1903               	skipnz
  2940  02B2  288B               	goto	l11823
  2941  02B3  3A03               	xorlw	2^1	; case 2
  2942  02B4  1903               	skipnz
  2943  02B5  2897               	goto	l11825
  2944  02B6  3A01               	xorlw	3^2	; case 3
  2945  02B7  1903               	skipnz
  2946  02B8  28A3               	goto	l11827
  2947  02B9  3A07               	xorlw	4^3	; case 4
  2948  02BA  1903               	skipnz
  2949  02BB  28F3               	goto	l11839
  2950  02BC  3A01               	xorlw	5^4	; case 5
  2951  02BD  1903               	skipnz
  2952  02BE  2AA2               	goto	l11903
  2953  02BF  2AC0               	goto	l11909
  2954                           	opt asmopt_on
  2955                           
  2956                           	line	515
  2957                           	
  2958  02C0                     l2297:	
  2959                           	line	516
  2960                           	
  2961  02C0                     l11909:	
  2962                           ;Main.c: 516: choice = 255;
  2963  02C0  30FF               	movlw	(0FFh)
  2964  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
  2965  02C2  1303               	bcf	status, 6	;RP1=0, select bank0
  2966  02C3  00E7               	movwf	(??_main+0)+0
  2967  02C4  0867               	movf	(??_main+0)+0,w
  2968  02C5  1683               	bsf	status, 5	;RP0=1, select bank1
  2969  02C6  1303               	bcf	status, 6	;RP1=0, select bank1
  2970  02C7  00E7               	movwf	(main@choice)^080h
  2971  02C8  2825               	goto	l11787
  2972                           	line	517
  2973                           	
  2974  02C9                     l2316:	
  2975                           	line	380
  2976  02C9  2825               	goto	l11787
  2977                           	
  2978  02CA                     l2317:	
  2979                           	line	518
  2980                           	
  2981  02CA                     l2318:	
  2982                           	global	start
  2983  02CA  120A  118A  2812   	ljmp	start
  2984                           	opt stack 0
  2985                           GLOBAL	__end_of_main
  2986  02CD                     	__end_of_main:
  2987 ;; =============== function _main ends ============
  2988                           
  2989                           	signat	_main,88
  2990                           	global	_straightLineTest
  2991                           psect	text1068,local,class=CODE,delta=2
  2992                           global __ptext1068
  2993  0C9F                     __ptext1068:
  2994                           
  2995 ;; *************** function _straightLineTest *****************
  2996 ;; Defined at:
  2997 ;;		line 163 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  menuflag        2   68[BANK0 ] int 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;		None               void
  3004 ;; Registers used:
  3005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       2       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          0       1       0       0       0
  3014 ;;      Totals:         0       3       0       0       0
  3015 ;;Total ram usage:        3 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    7
  3018 ;; This function calls:
  3019 ;;		_UpdateDisplay
  3020 ;;		_robotTurn
  3021 ;;		_robotMoveSpeed
  3022 ;; This function is called by:
  3023 ;;		_main
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           psect	text1068
  3027                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  3028                           	line	163
  3029                           	global	__size_of_straightLineTest
  3030  00B6                     	__size_of_straightLineTest	equ	__end_of_straightLineTest-_straightLineTest
  3031                           	
  3032  0C9F                     _straightLineTest:	
  3033                           	opt	stack 0
  3034                           ; Regs used in _straightLineTest: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3035                           	line	165
  3036                           	
  3037  0C9F                     l11743:	
  3038                           ;Main.c: 165: currentMenu = menuflag + 3;
  3039  0C9F  1283               	bcf	status, 5	;RP0=0, select bank0
  3040  0CA0  1303               	bcf	status, 6	;RP1=0, select bank0
  3041  0CA1  0864               	movf	(straightLineTest@menuflag),w
  3042  0CA2  3E03               	addlw	03h
  3043  0CA3  00E6               	movwf	(??_straightLineTest+0)+0
  3044  0CA4  0866               	movf	(??_straightLineTest+0)+0,w
  3045  0CA5  1683               	bsf	status, 5	;RP0=1, select bank1
  3046  0CA6  1303               	bcf	status, 6	;RP1=0, select bank1
  3047  0CA7  00CB               	movwf	(_currentMenu)^080h	;volatile
  3048  0CA8  2CA9               	goto	l11745
  3049                           	line	167
  3050                           ;Main.c: 167: while (1)
  3051                           	
  3052  0CA9                     l2228:	
  3053                           	line	169
  3054                           	
  3055  0CA9                     l11745:	
  3056                           ;Main.c: 168: {
  3057                           ;Main.c: 169: if (RTC_FLAG_250MS == 1)
  3058  0CA9  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3059  0CAA  2CAC               	goto	u5571
  3060  0CAB  2CAD               	goto	u5570
  3061  0CAC                     u5571:
  3062  0CAC  2D41               	goto	l11779
  3063  0CAD                     u5570:
  3064                           	line	171
  3065                           	
  3066  0CAD                     l11747:	
  3067                           ;Main.c: 170: {
  3068                           ;Main.c: 171: RTC_FLAG_250MS = 0;
  3069  0CAD  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3070                           	line	172
  3071                           	
  3072  0CAE                     l11749:	
  3073                           ;Main.c: 172: UpdateDisplay();
  3074  0CAE  120A  118A  24F0   	fcall	_UpdateDisplay
              120A  158A         
  3075  0CB3  2D41               	goto	l11779
  3076                           	line	173
  3077                           	
  3078  0CB4                     l2229:	
  3079                           	line	174
  3080                           ;Main.c: 173: }
  3081                           ;Main.c: 174: switch (buttonPressed)
  3082  0CB4  2D41               	goto	l11779
  3083                           	line	176
  3084                           ;Main.c: 175: {
  3085                           ;Main.c: 176: case 1:
  3086                           	
  3087  0CB5                     l2231:	
  3088                           	line	179
  3089                           ;Main.c: 179: buttonPressed = 0;
  3090  0CB5  01FD               	clrf	(_buttonPressed)	;volatile
  3091                           	line	180
  3092                           	
  3093  0CB6                     l11751:	
  3094                           ;Main.c: 180: robotTurn(180);
  3095  0CB6  30B4               	movlw	low(0B4h)
  3096  0CB7  1283               	bcf	status, 5	;RP0=0, select bank0
  3097  0CB8  1303               	bcf	status, 6	;RP1=0, select bank0
  3098  0CB9  00A2               	movwf	(?_robotTurn)
  3099  0CBA  3000               	movlw	high(0B4h)
  3100  0CBB  00A3               	movwf	((?_robotTurn))+1
  3101  0CBC  120A  158A  2232   	fcall	_robotTurn
              120A  158A         
  3102                           	line	182
  3103                           ;Main.c: 182: break;
  3104  0CC1  2CA9               	goto	l11745
  3105                           	line	183
  3106                           ;Main.c: 183: case 2:
  3107                           	
  3108  0CC2                     l2233:	
  3109                           	line	186
  3110                           ;Main.c: 186: buttonPressed = 0;
  3111  0CC2  01FD               	clrf	(_buttonPressed)	;volatile
  3112                           	line	187
  3113                           ;Main.c: 187: currentMenu = 0;
  3114  0CC3  1683               	bsf	status, 5	;RP0=1, select bank1
  3115  0CC4  1303               	bcf	status, 6	;RP1=0, select bank1
  3116  0CC5  01CB               	clrf	(_currentMenu)^080h	;volatile
  3117                           	line	188
  3118                           ;Main.c: 188: return;
  3119  0CC6  2D54               	goto	l2234
  3120                           	line	190
  3121                           ;Main.c: 190: case 3:
  3122                           	
  3123  0CC7                     l2235:	
  3124                           	line	191
  3125                           	
  3126  0CC7                     l11753:	
  3127                           ;Main.c: 191: if(menuflag)
  3128  0CC7  1283               	bcf	status, 5	;RP0=0, select bank0
  3129  0CC8  1303               	bcf	status, 6	;RP1=0, select bank0
  3130  0CC9  0865               	movf	(straightLineTest@menuflag+1),w
  3131  0CCA  0464               	iorwf	(straightLineTest@menuflag),w
  3132  0CCB  1903               	skipnz
  3133  0CCC  2CCE               	goto	u5581
  3134  0CCD  2CCF               	goto	u5580
  3135  0CCE                     u5581:
  3136  0CCE  2CDC               	goto	l11757
  3137  0CCF                     u5580:
  3138                           	line	193
  3139                           	
  3140  0CCF                     l11755:	
  3141                           ;Main.c: 192: {
  3142                           ;Main.c: 193: d2travel -= 500;
  3143  0CCF  300C               	movlw	low(-500)
  3144  0CD0  1683               	bsf	status, 5	;RP0=1, select bank1
  3145  0CD1  1303               	bcf	status, 6	;RP1=0, select bank1
  3146  0CD2  07B2               	addwf	(_d2travel)^080h,f
  3147  0CD3  1803               	skipnc
  3148  0CD4  0AB3               	incf	(_d2travel+1)^080h,f
  3149  0CD5  30FE               	movlw	high(-500)
  3150  0CD6  07B3               	addwf	(_d2travel+1)^080h,f
  3151                           	line	194
  3152                           ;Main.c: 194: assignedSpeed = 200;
  3153  0CD7  30C8               	movlw	low(0C8h)
  3154  0CD8  00E0               	movwf	(_assignedSpeed)^080h
  3155  0CD9  3000               	movlw	high(0C8h)
  3156  0CDA  00E1               	movwf	((_assignedSpeed)^080h)+1
  3157                           	line	195
  3158                           ;Main.c: 195: }
  3159  0CDB  2CE9               	goto	l11759
  3160                           	line	196
  3161                           	
  3162  0CDC                     l2236:	
  3163                           	line	198
  3164                           	
  3165  0CDC                     l11757:	
  3166                           ;Main.c: 196: else
  3167                           ;Main.c: 197: {
  3168                           ;Main.c: 198: assignedSpeed -= 100;
  3169  0CDC  309C               	movlw	low(-100)
  3170  0CDD  1683               	bsf	status, 5	;RP0=1, select bank1
  3171  0CDE  1303               	bcf	status, 6	;RP1=0, select bank1
  3172  0CDF  07E0               	addwf	(_assignedSpeed)^080h,f
  3173  0CE0  1803               	skipnc
  3174  0CE1  0AE1               	incf	(_assignedSpeed+1)^080h,f
  3175  0CE2  30FF               	movlw	high(-100)
  3176  0CE3  07E1               	addwf	(_assignedSpeed+1)^080h,f
  3177                           	line	199
  3178                           ;Main.c: 199: d2travel = 2000;
  3179  0CE4  30D0               	movlw	low(07D0h)
  3180  0CE5  00B2               	movwf	(_d2travel)^080h
  3181  0CE6  3007               	movlw	high(07D0h)
  3182  0CE7  00B3               	movwf	((_d2travel)^080h)+1
  3183  0CE8  2CE9               	goto	l11759
  3184                           	line	200
  3185                           	
  3186  0CE9                     l2237:	
  3187                           	line	201
  3188                           	
  3189  0CE9                     l11759:	
  3190                           ;Main.c: 200: }
  3191                           ;Main.c: 201: buttonPressed = 0;
  3192  0CE9  01FD               	clrf	(_buttonPressed)	;volatile
  3193                           	line	203
  3194                           ;Main.c: 203: break;
  3195  0CEA  2CA9               	goto	l11745
  3196                           	line	204
  3197                           ;Main.c: 204: case 4:
  3198                           	
  3199  0CEB                     l2238:	
  3200                           	line	205
  3201                           	
  3202  0CEB                     l11761:	
  3203                           ;Main.c: 205: if(menuflag)
  3204  0CEB  1283               	bcf	status, 5	;RP0=0, select bank0
  3205  0CEC  1303               	bcf	status, 6	;RP1=0, select bank0
  3206  0CED  0865               	movf	(straightLineTest@menuflag+1),w
  3207  0CEE  0464               	iorwf	(straightLineTest@menuflag),w
  3208  0CEF  1903               	skipnz
  3209  0CF0  2CF2               	goto	u5591
  3210  0CF1  2CF3               	goto	u5590
  3211  0CF2                     u5591:
  3212  0CF2  2D00               	goto	l11765
  3213  0CF3                     u5590:
  3214                           	line	207
  3215                           	
  3216  0CF3                     l11763:	
  3217                           ;Main.c: 206: {
  3218                           ;Main.c: 207: d2travel += 500;
  3219  0CF3  30F4               	movlw	low(01F4h)
  3220  0CF4  1683               	bsf	status, 5	;RP0=1, select bank1
  3221  0CF5  1303               	bcf	status, 6	;RP1=0, select bank1
  3222  0CF6  07B2               	addwf	(_d2travel)^080h,f
  3223  0CF7  1803               	skipnc
  3224  0CF8  0AB3               	incf	(_d2travel+1)^080h,f
  3225  0CF9  3001               	movlw	high(01F4h)
  3226  0CFA  07B3               	addwf	(_d2travel+1)^080h,f
  3227                           	line	208
  3228                           ;Main.c: 208: assignedSpeed = 200;
  3229  0CFB  30C8               	movlw	low(0C8h)
  3230  0CFC  00E0               	movwf	(_assignedSpeed)^080h
  3231  0CFD  3000               	movlw	high(0C8h)
  3232  0CFE  00E1               	movwf	((_assignedSpeed)^080h)+1
  3233                           	line	209
  3234                           ;Main.c: 209: }
  3235  0CFF  2D0D               	goto	l11767
  3236                           	line	210
  3237                           	
  3238  0D00                     l2239:	
  3239                           	line	212
  3240                           	
  3241  0D00                     l11765:	
  3242                           ;Main.c: 210: else
  3243                           ;Main.c: 211: {
  3244                           ;Main.c: 212: assignedSpeed += 100;
  3245  0D00  3064               	movlw	low(064h)
  3246  0D01  1683               	bsf	status, 5	;RP0=1, select bank1
  3247  0D02  1303               	bcf	status, 6	;RP1=0, select bank1
  3248  0D03  07E0               	addwf	(_assignedSpeed)^080h,f
  3249  0D04  1803               	skipnc
  3250  0D05  0AE1               	incf	(_assignedSpeed+1)^080h,f
  3251  0D06  3000               	movlw	high(064h)
  3252  0D07  07E1               	addwf	(_assignedSpeed+1)^080h,f
  3253                           	line	213
  3254                           ;Main.c: 213: d2travel = 2000;
  3255  0D08  30D0               	movlw	low(07D0h)
  3256  0D09  00B2               	movwf	(_d2travel)^080h
  3257  0D0A  3007               	movlw	high(07D0h)
  3258  0D0B  00B3               	movwf	((_d2travel)^080h)+1
  3259  0D0C  2D0D               	goto	l11767
  3260                           	line	214
  3261                           	
  3262  0D0D                     l2240:	
  3263                           	line	215
  3264                           	
  3265  0D0D                     l11767:	
  3266                           ;Main.c: 214: }
  3267                           ;Main.c: 215: buttonPressed = 0;
  3268  0D0D  01FD               	clrf	(_buttonPressed)	;volatile
  3269                           	line	217
  3270                           ;Main.c: 217: break;
  3271  0D0E  2CA9               	goto	l11745
  3272                           	line	218
  3273                           ;Main.c: 218: case 5:
  3274                           	
  3275  0D0F                     l2241:	
  3276                           	line	220
  3277                           	
  3278  0D0F                     l11769:	
  3279                           ;Main.c: 220: if (assignedSpeed && d2travel)
  3280  0D0F  1683               	bsf	status, 5	;RP0=1, select bank1
  3281  0D10  1303               	bcf	status, 6	;RP1=0, select bank1
  3282  0D11  0861               	movf	(_assignedSpeed+1)^080h,w
  3283  0D12  0460               	iorwf	(_assignedSpeed)^080h,w
  3284  0D13  1903               	skipnz
  3285  0D14  2D16               	goto	u5601
  3286  0D15  2D17               	goto	u5600
  3287  0D16                     u5601:
  3288  0D16  2D3D               	goto	l11775
  3289  0D17                     u5600:
  3290                           	
  3291  0D17                     l11771:	
  3292  0D17  0833               	movf	(_d2travel+1)^080h,w
  3293  0D18  0432               	iorwf	(_d2travel)^080h,w
  3294  0D19  1903               	skipnz
  3295  0D1A  2D1C               	goto	u5611
  3296  0D1B  2D1D               	goto	u5610
  3297  0D1C                     u5611:
  3298  0D1C  2D3D               	goto	l11775
  3299  0D1D                     u5610:
  3300                           	line	222
  3301                           	
  3302  0D1D                     l11773:	
  3303                           ;Main.c: 221: {
  3304                           ;Main.c: 222: robotMoveSpeed(d2travel,assignedSpeed);
  3305  0D1D  0833               	movf	(_d2travel+1)^080h,w
  3306  0D1E  1283               	bcf	status, 5	;RP0=0, select bank0
  3307  0D1F  1303               	bcf	status, 6	;RP1=0, select bank0
  3308  0D20  01DA               	clrf	(?_robotMoveSpeed+1)
  3309  0D21  07DA               	addwf	(?_robotMoveSpeed+1)
  3310  0D22  1683               	bsf	status, 5	;RP0=1, select bank1
  3311  0D23  1303               	bcf	status, 6	;RP1=0, select bank1
  3312  0D24  0832               	movf	(_d2travel)^080h,w
  3313  0D25  1283               	bcf	status, 5	;RP0=0, select bank0
  3314  0D26  1303               	bcf	status, 6	;RP1=0, select bank0
  3315  0D27  01D9               	clrf	(?_robotMoveSpeed)
  3316  0D28  07D9               	addwf	(?_robotMoveSpeed)
  3317                           
  3318  0D29  1683               	bsf	status, 5	;RP0=1, select bank1
  3319  0D2A  1303               	bcf	status, 6	;RP1=0, select bank1
  3320  0D2B  0861               	movf	(_assignedSpeed+1)^080h,w
  3321  0D2C  1283               	bcf	status, 5	;RP0=0, select bank0
  3322  0D2D  1303               	bcf	status, 6	;RP1=0, select bank0
  3323  0D2E  01DC               	clrf	1+(?_robotMoveSpeed)+02h
  3324  0D2F  07DC               	addwf	1+(?_robotMoveSpeed)+02h
  3325  0D30  1683               	bsf	status, 5	;RP0=1, select bank1
  3326  0D31  1303               	bcf	status, 6	;RP1=0, select bank1
  3327  0D32  0860               	movf	(_assignedSpeed)^080h,w
  3328  0D33  1283               	bcf	status, 5	;RP0=0, select bank0
  3329  0D34  1303               	bcf	status, 6	;RP1=0, select bank0
  3330  0D35  01DB               	clrf	0+(?_robotMoveSpeed)+02h
  3331  0D36  07DB               	addwf	0+(?_robotMoveSpeed)+02h
  3332                           
  3333  0D37  120A  158A  2555   	fcall	_robotMoveSpeed
              120A  158A         
  3334  0D3C  2D3D               	goto	l11775
  3335                           	line	223
  3336                           	
  3337  0D3D                     l2242:	
  3338                           	line	225
  3339                           	
  3340  0D3D                     l11775:	
  3341                           ;Main.c: 223: }
  3342                           ;Main.c: 225: buttonPressed = 0;
  3343  0D3D  01FD               	clrf	(_buttonPressed)	;volatile
  3344  0D3E  2CA9               	goto	l11745
  3345                           	line	226
  3346                           ;Main.c: 226: default:
  3347                           	
  3348  0D3F                     l2243:	
  3349                           	line	228
  3350                           ;Main.c: 228: break;
  3351  0D3F  2CA9               	goto	l11745
  3352                           	line	229
  3353                           	
  3354  0D40                     l11777:	
  3355                           ;Main.c: 229: }
  3356  0D40  2CA9               	goto	l11745
  3357                           	line	174
  3358                           	
  3359  0D41                     l2230:	
  3360                           	
  3361  0D41                     l11779:	
  3362  0D41  087D               	movf	(_buttonPressed),w	;volatile
  3363                           	; Switch size 1, requested type "space"
  3364                           ; Number of cases is 5, Range of values is 1 to 5
  3365                           ; switch strategies available:
  3366                           ; Name         Instructions Cycles
  3367                           ; simple_byte           16     9 (average)
  3368                           ; direct_byte           26    11 (fixed)
  3369                           ; jumptable            263     9 (fixed)
  3370                           ;	Chosen strategy is simple_byte
  3371                           
  3372                           	opt asmopt_off
  3373  0D42  3A01               	xorlw	1^0	; case 1
  3374  0D43  1903               	skipnz
  3375  0D44  2CB5               	goto	l2231
  3376  0D45  3A03               	xorlw	2^1	; case 2
  3377  0D46  1903               	skipnz
  3378  0D47  2CC2               	goto	l2233
  3379  0D48  3A01               	xorlw	3^2	; case 3
  3380  0D49  1903               	skipnz
  3381  0D4A  2CC7               	goto	l11753
  3382  0D4B  3A07               	xorlw	4^3	; case 4
  3383  0D4C  1903               	skipnz
  3384  0D4D  2CEB               	goto	l11761
  3385  0D4E  3A01               	xorlw	5^4	; case 5
  3386  0D4F  1903               	skipnz
  3387  0D50  2D0F               	goto	l11769
  3388  0D51  2CA9               	goto	l11745
  3389                           	opt asmopt_on
  3390                           
  3391                           	line	229
  3392                           	
  3393  0D52                     l2232:	
  3394  0D52  2CA9               	goto	l11745
  3395                           	line	231
  3396                           	
  3397  0D53                     l2244:	
  3398                           	line	167
  3399  0D53  2CA9               	goto	l11745
  3400                           	
  3401  0D54                     l2245:	
  3402                           	line	232
  3403                           	
  3404  0D54                     l2234:	
  3405  0D54  0008               	return
  3406                           	opt stack 0
  3407                           GLOBAL	__end_of_straightLineTest
  3408  0D55                     	__end_of_straightLineTest:
  3409 ;; =============== function _straightLineTest ends ============
  3410                           
  3411                           	signat	_straightLineTest,4216
  3412                           	global	_robotMove
  3413                           psect	text1069,local,class=CODE,delta=2
  3414                           global __ptext1069
  3415  0BF8                     __ptext1069:
  3416                           
  3417 ;; *************** function _robotMove *****************
  3418 ;; Defined at:
  3419 ;;		line 76 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  distance        2   57[BANK0 ] int 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;		None               void
  3426 ;; Registers used:
  3427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3433 ;;      Params:         0       2       0       0       0
  3434 ;;      Locals:         0       0       0       0       0
  3435 ;;      Temps:          0       2       0       0       0
  3436 ;;      Totals:         0       4       0       0       0
  3437 ;;Total ram usage:        4 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    6
  3440 ;; This function calls:
  3441 ;;		_ser_putch
  3442 ;;		_robot_read
  3443 ;;		_UpdateDisplay
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           psect	text1069
  3449                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  3450                           	line	76
  3451                           	global	__size_of_robotMove
  3452  00A7                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  3453                           	
  3454  0BF8                     _robotMove:	
  3455                           	opt	stack 1
  3456                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3457                           	line	77
  3458                           	
  3459  0BF8                     l11721:	
  3460                           ;robot.c: 77: distTravelled =0;
  3461  0BF8  1683               	bsf	status, 5	;RP0=1, select bank1
  3462  0BF9  1303               	bcf	status, 6	;RP1=0, select bank1
  3463  0BFA  01B4               	clrf	(_distTravelled)^080h
  3464  0BFB  01B5               	clrf	(_distTravelled+1)^080h
  3465                           	line	80
  3466                           	
  3467  0BFC                     l11723:	
  3468                           ;robot.c: 80: if (distance >= 0)
  3469  0BFC  1283               	bcf	status, 5	;RP0=0, select bank0
  3470  0BFD  1303               	bcf	status, 6	;RP1=0, select bank0
  3471  0BFE  1BDA               	btfsc	(robotMove@distance+1),7
  3472  0BFF  2C01               	goto	u5541
  3473  0C00  2C02               	goto	u5540
  3474  0C01                     u5541:
  3475  0C01  2C21               	goto	l11727
  3476  0C02                     u5540:
  3477                           	line	82
  3478                           	
  3479  0C02                     l11725:	
  3480                           ;robot.c: 81: {
  3481                           ;robot.c: 82: ser_putch(137);
  3482  0C02  3089               	movlw	(089h)
  3483  0C03  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3484                           	line	84
  3485                           ;robot.c: 84: ser_putch(0);
  3486  0C08  3000               	movlw	(0)
  3487  0C09  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3488                           	line	86
  3489                           ;robot.c: 86: ser_putch(50);
  3490  0C0E  3032               	movlw	(032h)
  3491  0C0F  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3492                           	line	88
  3493                           ;robot.c: 88: ser_putch(128);
  3494  0C14  3080               	movlw	(080h)
  3495  0C15  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3496                           	line	90
  3497                           ;robot.c: 90: ser_putch(0);
  3498  0C1A  3000               	movlw	(0)
  3499  0C1B  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3500                           	line	91
  3501                           ;robot.c: 91: }
  3502  0C20  2C67               	goto	l11739
  3503                           	line	92
  3504                           	
  3505  0C21                     l6068:	
  3506                           	line	94
  3507                           	
  3508  0C21                     l11727:	
  3509                           ;robot.c: 92: else
  3510                           ;robot.c: 93: {
  3511                           ;robot.c: 94: ser_putch(137);
  3512  0C21  3089               	movlw	(089h)
  3513  0C22  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3514                           	line	96
  3515                           ;robot.c: 96: ser_putch(0xff);
  3516  0C27  30FF               	movlw	(0FFh)
  3517  0C28  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3518                           	line	98
  3519                           ;robot.c: 98: ser_putch(0x38);
  3520  0C2D  3038               	movlw	(038h)
  3521  0C2E  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3522                           	line	100
  3523                           ;robot.c: 100: ser_putch(128);
  3524  0C33  3080               	movlw	(080h)
  3525  0C34  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3526                           	line	102
  3527                           ;robot.c: 102: ser_putch(0);
  3528  0C39  3000               	movlw	(0)
  3529  0C3A  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3530  0C3F  2C67               	goto	l11739
  3531                           	line	103
  3532                           	
  3533  0C40                     l6069:	
  3534                           	line	106
  3535                           ;robot.c: 103: }
  3536                           ;robot.c: 106: while (distTravelled <= distance)
  3537  0C40  2C67               	goto	l11739
  3538                           	
  3539  0C41                     l6071:	
  3540                           	line	108
  3541                           	
  3542  0C41                     l11729:	
  3543                           ;robot.c: 107: {
  3544                           ;robot.c: 108: robot_read();
  3545  0C41  160A  118A  275A   	fcall	_robot_read
              120A  158A         
  3546                           	line	109
  3547                           	
  3548  0C46                     l11731:	
  3549                           ;robot.c: 109: if (BumpSensors)
  3550  0C46  1283               	bcf	status, 5	;RP0=0, select bank0
  3551  0C47  1303               	bcf	status, 6	;RP1=0, select bank0
  3552  0C48  086C               	movf	(_BumpSensors),w	;volatile
  3553  0C49  1D03               	skipz
  3554  0C4A  2C4C               	goto	u5550
  3555  0C4B  2C4E               	goto	l11735
  3556  0C4C                     u5550:
  3557  0C4C  2C80               	goto	l11741
  3558                           	line	110
  3559                           	
  3560  0C4D                     l11733:	
  3561                           ;robot.c: 110: break;
  3562  0C4D  2C80               	goto	l11741
  3563                           	
  3564  0C4E                     l6072:	
  3565                           	line	111
  3566                           	
  3567  0C4E                     l11735:	
  3568                           ;robot.c: 111: distTravelled += DistLowByte;
  3569  0C4E  1683               	bsf	status, 5	;RP0=1, select bank1
  3570  0C4F  1303               	bcf	status, 6	;RP1=0, select bank1
  3571  0C50  0846               	movf	(_DistLowByte)^080h,w	;volatile
  3572  0C51  1283               	bcf	status, 5	;RP0=0, select bank0
  3573  0C52  1303               	bcf	status, 6	;RP1=0, select bank0
  3574  0C53  00DB               	movwf	(??_robotMove+0)+0
  3575  0C54  01DC               	clrf	(??_robotMove+0)+0+1
  3576  0C55  085B               	movf	0+(??_robotMove+0)+0,w
  3577  0C56  1683               	bsf	status, 5	;RP0=1, select bank1
  3578  0C57  1303               	bcf	status, 6	;RP1=0, select bank1
  3579  0C58  07B4               	addwf	(_distTravelled)^080h,f
  3580  0C59  1803               	skipnc
  3581  0C5A  0AB5               	incf	(_distTravelled+1)^080h,f
  3582  0C5B  1283               	bcf	status, 5	;RP0=0, select bank0
  3583  0C5C  1303               	bcf	status, 6	;RP1=0, select bank0
  3584  0C5D  085C               	movf	1+(??_robotMove+0)+0,w
  3585  0C5E  1683               	bsf	status, 5	;RP0=1, select bank1
  3586  0C5F  1303               	bcf	status, 6	;RP1=0, select bank1
  3587  0C60  07B5               	addwf	(_distTravelled+1)^080h,f
  3588                           	line	112
  3589                           	
  3590  0C61                     l11737:	
  3591                           ;robot.c: 112: UpdateDisplay();
  3592  0C61  120A  118A  24F0   	fcall	_UpdateDisplay
              120A  158A         
  3593  0C66  2C67               	goto	l11739
  3594                           	line	113
  3595                           	
  3596  0C67                     l6070:	
  3597                           	line	106
  3598                           	
  3599  0C67                     l11739:	
  3600  0C67  1283               	bcf	status, 5	;RP0=0, select bank0
  3601  0C68  1303               	bcf	status, 6	;RP1=0, select bank0
  3602  0C69  085A               	movf	(robotMove@distance+1),w
  3603  0C6A  3A80               	xorlw	80h
  3604  0C6B  00DB               	movwf	(??_robotMove+0)+0
  3605  0C6C  1683               	bsf	status, 5	;RP0=1, select bank1
  3606  0C6D  1303               	bcf	status, 6	;RP1=0, select bank1
  3607  0C6E  0835               	movf	(_distTravelled+1)^080h,w
  3608  0C6F  3A80               	xorlw	80h
  3609  0C70  1283               	bcf	status, 5	;RP0=0, select bank0
  3610  0C71  1303               	bcf	status, 6	;RP1=0, select bank0
  3611  0C72  025B               	subwf	(??_robotMove+0)+0,w
  3612  0C73  1D03               	skipz
  3613  0C74  2C7B               	goto	u5565
  3614  0C75  1683               	bsf	status, 5	;RP0=1, select bank1
  3615  0C76  1303               	bcf	status, 6	;RP1=0, select bank1
  3616  0C77  0834               	movf	(_distTravelled)^080h,w
  3617  0C78  1283               	bcf	status, 5	;RP0=0, select bank0
  3618  0C79  1303               	bcf	status, 6	;RP1=0, select bank0
  3619  0C7A  0259               	subwf	(robotMove@distance),w
  3620  0C7B                     u5565:
  3621                           
  3622  0C7B  1803               	skipnc
  3623  0C7C  2C7E               	goto	u5561
  3624  0C7D  2C7F               	goto	u5560
  3625  0C7E                     u5561:
  3626  0C7E  2C41               	goto	l11729
  3627  0C7F                     u5560:
  3628  0C7F  2C80               	goto	l11741
  3629                           	
  3630  0C80                     l6073:	
  3631                           	line	115
  3632                           	
  3633  0C80                     l11741:	
  3634                           ;robot.c: 113: }
  3635                           ;robot.c: 115: ser_putch(137);
  3636  0C80  3089               	movlw	(089h)
  3637  0C81  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3638                           	line	117
  3639                           ;robot.c: 117: ser_putch(0);
  3640  0C86  3000               	movlw	(0)
  3641  0C87  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3642                           	line	119
  3643                           ;robot.c: 119: ser_putch(0);
  3644  0C8C  3000               	movlw	(0)
  3645  0C8D  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3646                           	line	121
  3647                           ;robot.c: 121: ser_putch(0);
  3648  0C92  3000               	movlw	(0)
  3649  0C93  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3650                           	line	123
  3651                           ;robot.c: 123: ser_putch(0);
  3652  0C98  3000               	movlw	(0)
  3653  0C99  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3654                           	line	125
  3655                           	
  3656  0C9E                     l6074:	
  3657  0C9E  0008               	return
  3658                           	opt stack 0
  3659                           GLOBAL	__end_of_robotMove
  3660  0C9F                     	__end_of_robotMove:
  3661 ;; =============== function _robotMove ends ============
  3662                           
  3663                           	signat	_robotMove,4216
  3664                           	global	_scan360
  3665                           psect	text1070,local,class=CODE,delta=2
  3666                           global __ptext1070
  3667  093B                     __ptext1070:
  3668                           
  3669 ;; *************** function _scan360 *****************
  3670 ;; Defined at:
  3671 ;;		line 340 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  steps           2   63[BANK0 ] int 
  3676 ;;  lowestSteps     2   61[BANK0 ] int 
  3677 ;;  lowestVal       2   59[BANK0 ] int 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  2   57[BANK0 ] int 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       2       0       0       0
  3688 ;;      Locals:         0       6       0       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         0       8       0       0       0
  3691 ;;Total ram usage:        8 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    7
  3694 ;; This function calls:
  3695 ;;		_readAvgDistance
  3696 ;;		_rotate
  3697 ;;		_UpdateDisplay
  3698 ;; This function is called by:
  3699 ;;		_main
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           psect	text1070
  3703                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  3704                           	line	340
  3705                           	global	__size_of_scan360
  3706  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3707                           	
  3708  093B                     _scan360:	
  3709                           	opt	stack 0
  3710                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3711                           	line	341
  3712                           	
  3713  093B                     l11691:	
  3714                           ;Main.c: 341: int lowestVal = 0, lowestSteps = 0;
  3715  093B  1283               	bcf	status, 5	;RP0=0, select bank0
  3716  093C  1303               	bcf	status, 6	;RP1=0, select bank0
  3717  093D  01DB               	clrf	(scan360@lowestVal)
  3718  093E  01DC               	clrf	(scan360@lowestVal+1)
  3719  093F  01DD               	clrf	(scan360@lowestSteps)
  3720  0940  01DE               	clrf	(scan360@lowestSteps+1)
  3721                           	line	343
  3722                           ;Main.c: 343: for (int steps = 0; steps < 400; steps++)
  3723  0941  01DF               	clrf	(scan360@steps)
  3724  0942  01E0               	clrf	(scan360@steps+1)
  3725                           	
  3726  0943                     l11693:	
  3727  0943  0860               	movf	(scan360@steps+1),w
  3728  0944  3A80               	xorlw	80h
  3729  0945  00FF               	movwf	btemp+1
  3730  0946  3081               	movlw	(high(0190h))^80h
  3731  0947  027F               	subwf	btemp+1,w
  3732  0948  1D03               	skipz
  3733  0949  294C               	goto	u5505
  3734  094A  3090               	movlw	low(0190h)
  3735  094B  025F               	subwf	(scan360@steps),w
  3736  094C                     u5505:
  3737                           
  3738  094C  1C03               	skipc
  3739  094D  294F               	goto	u5501
  3740  094E  2950               	goto	u5500
  3741  094F                     u5501:
  3742  094F  2952               	goto	l11697
  3743  0950                     u5500:
  3744  0950  29AB               	goto	l11717
  3745                           	
  3746  0951                     l11695:	
  3747  0951  29AB               	goto	l11717
  3748                           	line	344
  3749                           	
  3750  0952                     l2278:	
  3751                           	line	345
  3752                           	
  3753  0952                     l11697:	
  3754                           ;Main.c: 344: {
  3755                           ;Main.c: 345: readAvgDistance();
  3756  0952  160A  118A  27AB   	fcall	_readAvgDistance
              120A  158A         
  3757                           	line	346
  3758                           	
  3759  0957                     l11699:	
  3760                           ;Main.c: 346: if (adcVal > lowestVal)
  3761  0957  1283               	bcf	status, 5	;RP0=0, select bank0
  3762  0958  1303               	bcf	status, 6	;RP1=0, select bank0
  3763  0959  086B               	movf	(_adcVal+1),w	;volatile
  3764  095A  025C               	subwf	(scan360@lowestVal+1),w
  3765  095B  1D03               	skipz
  3766  095C  295F               	goto	u5515
  3767  095D  086A               	movf	(_adcVal),w	;volatile
  3768  095E  025B               	subwf	(scan360@lowestVal),w
  3769  095F                     u5515:
  3770  095F  1803               	skipnc
  3771  0960  2962               	goto	u5511
  3772  0961  2963               	goto	u5510
  3773  0962                     u5511:
  3774  0962  2970               	goto	l11703
  3775  0963                     u5510:
  3776                           	line	348
  3777                           	
  3778  0963                     l11701:	
  3779                           ;Main.c: 347: {
  3780                           ;Main.c: 348: lowestVal = adcVal;
  3781  0963  086B               	movf	(_adcVal+1),w	;volatile
  3782  0964  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3783  0965  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3784  0966  086A               	movf	(_adcVal),w	;volatile
  3785  0967  01DB               	clrf	(scan360@lowestVal)	;volatile
  3786  0968  07DB               	addwf	(scan360@lowestVal)	;volatile
  3787                           
  3788                           	line	349
  3789                           ;Main.c: 349: lowestSteps = steps;
  3790  0969  0860               	movf	(scan360@steps+1),w
  3791  096A  01DE               	clrf	(scan360@lowestSteps+1)
  3792  096B  07DE               	addwf	(scan360@lowestSteps+1)
  3793  096C  085F               	movf	(scan360@steps),w
  3794  096D  01DD               	clrf	(scan360@lowestSteps)
  3795  096E  07DD               	addwf	(scan360@lowestSteps)
  3796                           
  3797  096F  2970               	goto	l11703
  3798                           	line	351
  3799                           	
  3800  0970                     l2280:	
  3801                           	line	352
  3802                           	
  3803  0970                     l11703:	
  3804                           ;Main.c: 351: }
  3805                           ;Main.c: 352: rotate(1, 1);
  3806  0970  3001               	movlw	low(01h)
  3807  0971  00A3               	movwf	(?_rotate)
  3808  0972  3000               	movlw	high(01h)
  3809  0973  00A4               	movwf	((?_rotate))+1
  3810  0974  01A5               	clrf	0+(?_rotate)+02h
  3811  0975  1403               	bsf	status,0
  3812  0976  0DA5               	rlf	0+(?_rotate)+02h,f
  3813  0977  160A  118A  270A   	fcall	_rotate
              120A  158A         
  3814                           	line	354
  3815                           	
  3816  097C                     l11705:	
  3817                           ;Main.c: 354: if (RTC_FLAG_250MS == 1)
  3818  097C  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3819  097D  297F               	goto	u5521
  3820  097E  2980               	goto	u5520
  3821  097F                     u5521:
  3822  097F  2987               	goto	l11711
  3823  0980                     u5520:
  3824                           	line	356
  3825                           	
  3826  0980                     l11707:	
  3827                           ;Main.c: 355: {
  3828                           ;Main.c: 356: RTC_FLAG_250MS = 0;
  3829  0980  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3830                           	line	357
  3831                           	
  3832  0981                     l11709:	
  3833                           ;Main.c: 357: UpdateDisplay();
  3834  0981  120A  118A  24F0   	fcall	_UpdateDisplay
              120A  158A         
  3835  0986  2987               	goto	l11711
  3836                           	line	358
  3837                           	
  3838  0987                     l2281:	
  3839                           	line	359
  3840                           	
  3841  0987                     l11711:	
  3842                           ;Main.c: 358: }
  3843                           ;Main.c: 359: test = lowestSteps;
  3844  0987  1283               	bcf	status, 5	;RP0=0, select bank0
  3845  0988  1303               	bcf	status, 6	;RP1=0, select bank0
  3846  0989  085E               	movf	(scan360@lowestSteps+1),w
  3847  098A  1683               	bsf	status, 5	;RP0=1, select bank1
  3848  098B  1303               	bcf	status, 6	;RP1=0, select bank1
  3849  098C  01BF               	clrf	(_test+1)^080h
  3850  098D  07BF               	addwf	(_test+1)^080h
  3851  098E  1283               	bcf	status, 5	;RP0=0, select bank0
  3852  098F  1303               	bcf	status, 6	;RP1=0, select bank0
  3853  0990  085D               	movf	(scan360@lowestSteps),w
  3854  0991  1683               	bsf	status, 5	;RP0=1, select bank1
  3855  0992  1303               	bcf	status, 6	;RP1=0, select bank1
  3856  0993  01BE               	clrf	(_test)^080h
  3857  0994  07BE               	addwf	(_test)^080h
  3858                           
  3859                           	line	343
  3860                           	
  3861  0995                     l11713:	
  3862  0995  3001               	movlw	low(01h)
  3863  0996  1283               	bcf	status, 5	;RP0=0, select bank0
  3864  0997  1303               	bcf	status, 6	;RP1=0, select bank0
  3865  0998  07DF               	addwf	(scan360@steps),f
  3866  0999  1803               	skipnc
  3867  099A  0AE0               	incf	(scan360@steps+1),f
  3868  099B  3000               	movlw	high(01h)
  3869  099C  07E0               	addwf	(scan360@steps+1),f
  3870                           	
  3871  099D                     l11715:	
  3872  099D  0860               	movf	(scan360@steps+1),w
  3873  099E  3A80               	xorlw	80h
  3874  099F  00FF               	movwf	btemp+1
  3875  09A0  3081               	movlw	(high(0190h))^80h
  3876  09A1  027F               	subwf	btemp+1,w
  3877  09A2  1D03               	skipz
  3878  09A3  29A6               	goto	u5535
  3879  09A4  3090               	movlw	low(0190h)
  3880  09A5  025F               	subwf	(scan360@steps),w
  3881  09A6                     u5535:
  3882                           
  3883  09A6  1C03               	skipc
  3884  09A7  29A9               	goto	u5531
  3885  09A8  29AA               	goto	u5530
  3886  09A9                     u5531:
  3887  09A9  2952               	goto	l11697
  3888  09AA                     u5530:
  3889  09AA  29AB               	goto	l11717
  3890                           	
  3891  09AB                     l2279:	
  3892                           	line	362
  3893                           	
  3894  09AB                     l11717:	
  3895                           ;Main.c: 360: }
  3896                           ;Main.c: 362: return lowestSteps;
  3897  09AB  1283               	bcf	status, 5	;RP0=0, select bank0
  3898  09AC  1303               	bcf	status, 6	;RP1=0, select bank0
  3899  09AD  085E               	movf	(scan360@lowestSteps+1),w
  3900  09AE  01DA               	clrf	(?_scan360+1)
  3901  09AF  07DA               	addwf	(?_scan360+1)
  3902  09B0  085D               	movf	(scan360@lowestSteps),w
  3903  09B1  01D9               	clrf	(?_scan360)
  3904  09B2  07D9               	addwf	(?_scan360)
  3905                           
  3906  09B3  29B4               	goto	l2282
  3907                           	
  3908  09B4                     l11719:	
  3909                           	line	363
  3910                           	
  3911  09B4                     l2282:	
  3912  09B4  0008               	return
  3913                           	opt stack 0
  3914                           GLOBAL	__end_of_scan360
  3915  09B5                     	__end_of_scan360:
  3916 ;; =============== function _scan360 ends ============
  3917                           
  3918                           	signat	_scan360,90
  3919                           	global	_ChargeMode
  3920                           psect	text1071,local,class=CODE,delta=2
  3921                           global __ptext1071
  3922  162D                     __ptext1071:
  3923                           
  3924 ;; *************** function _ChargeMode *****************
  3925 ;; Defined at:
  3926 ;;		line 286 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;		None               void
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       0       0       0
  3941 ;;      Locals:         0       0       0       0       0
  3942 ;;      Temps:          0       1       0       0       0
  3943 ;;      Totals:         0       1       0       0       0
  3944 ;;Total ram usage:        1 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    6
  3947 ;; This function calls:
  3948 ;;		_ser_putch
  3949 ;;		_UpdateDisplay
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           psect	text1071
  3955                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  3956                           	line	286
  3957                           	global	__size_of_ChargeMode
  3958  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3959                           	
  3960  162D                     _ChargeMode:	
  3961                           	opt	stack 1
  3962                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3963                           	line	288
  3964                           	
  3965  162D                     l11669:	
  3966                           ;Main.c: 288: currentMenu = 2;
  3967  162D  3002               	movlw	(02h)
  3968  162E  1283               	bcf	status, 5	;RP0=0, select bank0
  3969  162F  1303               	bcf	status, 6	;RP1=0, select bank0
  3970  1630  00D9               	movwf	(??_ChargeMode+0)+0
  3971  1631  0859               	movf	(??_ChargeMode+0)+0,w
  3972  1632  1683               	bsf	status, 5	;RP0=1, select bank1
  3973  1633  1303               	bcf	status, 6	;RP1=0, select bank1
  3974  1634  00CB               	movwf	(_currentMenu)^080h	;volatile
  3975                           	line	289
  3976                           	
  3977  1635                     l11671:	
  3978                           ;Main.c: 289: ser_putch(128);
  3979  1635  3080               	movlw	(080h)
  3980  1636  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  3981  163B  2E3C               	goto	l11673
  3982                           	line	291
  3983                           ;Main.c: 291: while (1)
  3984                           	
  3985  163C                     l2263:	
  3986                           	line	293
  3987                           	
  3988  163C                     l11673:	
  3989                           ;Main.c: 292: {
  3990                           ;Main.c: 293: if (RTC_FLAG_250MS == 1)
  3991  163C  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3992  163D  2E3F               	goto	u5491
  3993  163E  2E40               	goto	u5490
  3994  163F                     u5491:
  3995  163F  2E5F               	goto	l11689
  3996  1640                     u5490:
  3997                           	line	295
  3998                           	
  3999  1640                     l11675:	
  4000                           ;Main.c: 294: {
  4001                           ;Main.c: 295: RTC_FLAG_250MS = 0;
  4002  1640  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4003                           	line	296
  4004                           	
  4005  1641                     l11677:	
  4006                           ;Main.c: 296: UpdateDisplay();
  4007  1641  120A  118A  24F0   	fcall	_UpdateDisplay
              160A  118A         
  4008  1646  2E5F               	goto	l11689
  4009                           	line	297
  4010                           	
  4011  1647                     l2264:	
  4012                           	line	298
  4013                           ;Main.c: 297: }
  4014                           ;Main.c: 298: switch (buttonPressed)
  4015  1647  2E5F               	goto	l11689
  4016                           	line	300
  4017                           ;Main.c: 299: {
  4018                           ;Main.c: 300: case 1:
  4019                           	
  4020  1648                     l2266:	
  4021                           	line	303
  4022                           ;Main.c: 303: buttonPressed = 0;
  4023  1648  01FD               	clrf	(_buttonPressed)	;volatile
  4024                           	line	305
  4025                           ;Main.c: 305: break;
  4026  1649  2E3C               	goto	l11673
  4027                           	line	306
  4028                           ;Main.c: 306: case 2:
  4029                           	
  4030  164A                     l2268:	
  4031                           	line	309
  4032                           ;Main.c: 309: buttonPressed = 0;
  4033  164A  01FD               	clrf	(_buttonPressed)	;volatile
  4034                           	line	311
  4035                           ;Main.c: 311: break;
  4036  164B  2E3C               	goto	l11673
  4037                           	line	312
  4038                           ;Main.c: 312: case 3:
  4039                           	
  4040  164C                     l2269:	
  4041                           	line	315
  4042                           ;Main.c: 315: buttonPressed = 0;
  4043  164C  01FD               	clrf	(_buttonPressed)	;volatile
  4044                           	line	317
  4045                           ;Main.c: 317: break;
  4046  164D  2E3C               	goto	l11673
  4047                           	line	318
  4048                           ;Main.c: 318: case 4:
  4049                           	
  4050  164E                     l2270:	
  4051                           	line	321
  4052                           ;Main.c: 321: buttonPressed = 0;
  4053  164E  01FD               	clrf	(_buttonPressed)	;volatile
  4054                           	line	323
  4055                           ;Main.c: 323: break;
  4056  164F  2E3C               	goto	l11673
  4057                           	line	324
  4058                           ;Main.c: 324: case 5:
  4059                           	
  4060  1650                     l2271:	
  4061                           	line	325
  4062                           	
  4063  1650                     l11679:	
  4064                           ;Main.c: 325: ser_putch(132);
  4065  1650  3084               	movlw	(084h)
  4066  1651  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  4067                           	line	327
  4068                           	
  4069  1656                     l11681:	
  4070                           ;Main.c: 327: buttonPressed = 0;
  4071  1656  01FD               	clrf	(_buttonPressed)	;volatile
  4072                           	line	328
  4073                           	
  4074  1657                     l11683:	
  4075                           ;Main.c: 328: currentMenu = 0;
  4076  1657  1683               	bsf	status, 5	;RP0=1, select bank1
  4077  1658  1303               	bcf	status, 6	;RP1=0, select bank1
  4078  1659  01CB               	clrf	(_currentMenu)^080h	;volatile
  4079  165A  2E72               	goto	l2272
  4080                           	line	329
  4081                           	
  4082  165B                     l11685:	
  4083                           ;Main.c: 329: return;
  4084  165B  2E72               	goto	l2272
  4085                           	line	331
  4086                           ;Main.c: 331: default:
  4087                           	
  4088  165C                     l2273:	
  4089                           	line	332
  4090                           ;Main.c: 332: buttonPressed = 0;
  4091  165C  01FD               	clrf	(_buttonPressed)	;volatile
  4092                           	line	333
  4093                           ;Main.c: 333: break;
  4094  165D  2E3C               	goto	l11673
  4095                           	line	334
  4096                           	
  4097  165E                     l11687:	
  4098                           ;Main.c: 334: }
  4099  165E  2E3C               	goto	l11673
  4100                           	line	298
  4101                           	
  4102  165F                     l2265:	
  4103                           	
  4104  165F                     l11689:	
  4105  165F  087D               	movf	(_buttonPressed),w	;volatile
  4106                           	; Switch size 1, requested type "space"
  4107                           ; Number of cases is 5, Range of values is 1 to 5
  4108                           ; switch strategies available:
  4109                           ; Name         Instructions Cycles
  4110                           ; simple_byte           16     9 (average)
  4111                           ; direct_byte           26    11 (fixed)
  4112                           ; jumptable            263     9 (fixed)
  4113                           ;	Chosen strategy is simple_byte
  4114                           
  4115                           	opt asmopt_off
  4116  1660  3A01               	xorlw	1^0	; case 1
  4117  1661  1903               	skipnz
  4118  1662  2E48               	goto	l2266
  4119  1663  3A03               	xorlw	2^1	; case 2
  4120  1664  1903               	skipnz
  4121  1665  2E4A               	goto	l2268
  4122  1666  3A01               	xorlw	3^2	; case 3
  4123  1667  1903               	skipnz
  4124  1668  2E4C               	goto	l2269
  4125  1669  3A07               	xorlw	4^3	; case 4
  4126  166A  1903               	skipnz
  4127  166B  2E4E               	goto	l2270
  4128  166C  3A01               	xorlw	5^4	; case 5
  4129  166D  1903               	skipnz
  4130  166E  2E50               	goto	l11679
  4131  166F  2E5C               	goto	l2273
  4132                           	opt asmopt_on
  4133                           
  4134                           	line	334
  4135                           	
  4136  1670                     l2267:	
  4137  1670  2E3C               	goto	l11673
  4138                           	line	335
  4139                           	
  4140  1671                     l2274:	
  4141                           	line	291
  4142  1671  2E3C               	goto	l11673
  4143                           	
  4144  1672                     l2275:	
  4145                           	line	336
  4146                           	
  4147  1672                     l2272:	
  4148  1672  0008               	return
  4149                           	opt stack 0
  4150                           GLOBAL	__end_of_ChargeMode
  4151  1673                     	__end_of_ChargeMode:
  4152 ;; =============== function _ChargeMode ends ============
  4153                           
  4154                           	signat	_ChargeMode,88
  4155                           	global	_robotMoveSpeed
  4156                           psect	text1072,local,class=CODE,delta=2
  4157                           global __ptext1072
  4158  0D55                     __ptext1072:
  4159                           
  4160 ;; *************** function _robotMoveSpeed *****************
  4161 ;; Defined at:
  4162 ;;		line 34 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  distance        2   57[BANK0 ] int 
  4165 ;;  speed           2   59[BANK0 ] int 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  temp1           2   66[BANK0 ] int 
  4168 ;;  speedhighByt    1   65[BANK0 ] unsigned char 
  4169 ;;  speedlowByte    1   64[BANK0 ] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;		None               void
  4172 ;; Registers used:
  4173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         0       4       0       0       0
  4180 ;;      Locals:         0       4       0       0       0
  4181 ;;      Temps:          0       3       0       0       0
  4182 ;;      Totals:         0      11       0       0       0
  4183 ;;Total ram usage:       11 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    6
  4186 ;; This function calls:
  4187 ;;		_ser_putch
  4188 ;;		_robot_read
  4189 ;;		_UpdateDisplay
  4190 ;;		_abs
  4191 ;; This function is called by:
  4192 ;;		_straightLineTest
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           psect	text1072
  4196                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  4197                           	line	34
  4198                           	global	__size_of_robotMoveSpeed
  4199  00C9                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  4200                           	
  4201  0D55                     _robotMoveSpeed:	
  4202                           	opt	stack 0
  4203                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4204                           	line	35
  4205                           	
  4206  0D55                     l11635:	
  4207                           ;robot.c: 35: distTravelled = 0;
  4208  0D55  1683               	bsf	status, 5	;RP0=1, select bank1
  4209  0D56  1303               	bcf	status, 6	;RP1=0, select bank1
  4210  0D57  01B4               	clrf	(_distTravelled)^080h
  4211  0D58  01B5               	clrf	(_distTravelled+1)^080h
  4212                           	line	37
  4213                           	
  4214  0D59                     l11637:	
  4215                           ;robot.c: 36: int temp1;
  4216                           ;robot.c: 37: unsigned char speedlowByte = (unsigned char) (speed) ;
  4217  0D59  1283               	bcf	status, 5	;RP0=0, select bank0
  4218  0D5A  1303               	bcf	status, 6	;RP1=0, select bank0
  4219  0D5B  085B               	movf	(robotMoveSpeed@speed),w
  4220  0D5C  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4221  0D5D  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4222  0D5E  00E0               	movwf	(robotMoveSpeed@speedlowByte)
  4223                           	line	38
  4224                           ;robot.c: 38: unsigned char speedhighByte = (unsigned char) (speed >> 8);
  4225  0D5F  085C               	movf	(robotMoveSpeed@speed+1),w
  4226  0D60  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4227  0D61  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4228  0D62  00E1               	movwf	(robotMoveSpeed@speedhighByte)
  4229                           	line	40
  4230                           	
  4231  0D63                     l11639:	
  4232                           ;robot.c: 40: ser_putch(137);
  4233  0D63  3089               	movlw	(089h)
  4234  0D64  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4235                           	line	42
  4236                           	
  4237  0D69                     l11641:	
  4238                           ;robot.c: 42: ser_putch(speedhighByte);
  4239  0D69  1283               	bcf	status, 5	;RP0=0, select bank0
  4240  0D6A  1303               	bcf	status, 6	;RP1=0, select bank0
  4241  0D6B  0861               	movf	(robotMoveSpeed@speedhighByte),w
  4242  0D6C  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4243                           	line	44
  4244                           	
  4245  0D71                     l11643:	
  4246                           ;robot.c: 44: ser_putch(speedlowByte);
  4247  0D71  1283               	bcf	status, 5	;RP0=0, select bank0
  4248  0D72  1303               	bcf	status, 6	;RP1=0, select bank0
  4249  0D73  0860               	movf	(robotMoveSpeed@speedlowByte),w
  4250  0D74  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4251                           	line	46
  4252                           	
  4253  0D79                     l11645:	
  4254                           ;robot.c: 46: ser_putch(128);
  4255  0D79  3080               	movlw	(080h)
  4256  0D7A  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4257                           	line	48
  4258                           	
  4259  0D7F                     l11647:	
  4260                           ;robot.c: 48: ser_putch(0);
  4261  0D7F  3000               	movlw	(0)
  4262  0D80  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4263                           	line	50
  4264                           ;robot.c: 50: while (abs(distTravelled) <= abs(distance))
  4265  0D85  2DC8               	goto	l11665
  4266                           	
  4267  0D86                     l6062:	
  4268                           	line	52
  4269                           	
  4270  0D86                     l11649:	
  4271                           ;robot.c: 51: {
  4272                           ;robot.c: 52: robot_read();
  4273  0D86  160A  118A  275A   	fcall	_robot_read
              120A  158A         
  4274                           	line	53
  4275                           	
  4276  0D8B                     l11651:	
  4277                           ;robot.c: 53: if (BumpSensors)
  4278  0D8B  1283               	bcf	status, 5	;RP0=0, select bank0
  4279  0D8C  1303               	bcf	status, 6	;RP1=0, select bank0
  4280  0D8D  086C               	movf	(_BumpSensors),w	;volatile
  4281  0D8E  1D03               	skipz
  4282  0D8F  2D91               	goto	u5470
  4283  0D90  2D93               	goto	l11655
  4284  0D91                     u5470:
  4285  0D91  2DFF               	goto	l11667
  4286                           	line	55
  4287                           	
  4288  0D92                     l11653:	
  4289                           ;robot.c: 54: {
  4290                           ;robot.c: 55: break;
  4291  0D92  2DFF               	goto	l11667
  4292                           	line	56
  4293                           	
  4294  0D93                     l6063:	
  4295                           	line	57
  4296                           	
  4297  0D93                     l11655:	
  4298                           ;robot.c: 56: }
  4299                           ;robot.c: 57: temp1 = DistHighByte;
  4300  0D93  1683               	bsf	status, 5	;RP0=1, select bank1
  4301  0D94  1303               	bcf	status, 6	;RP1=0, select bank1
  4302  0D95  0845               	movf	(_DistHighByte)^080h,w	;volatile
  4303  0D96  1283               	bcf	status, 5	;RP0=0, select bank0
  4304  0D97  1303               	bcf	status, 6	;RP1=0, select bank0
  4305  0D98  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4306  0D99  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4307  0D9A  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4308  0D9B  00E2               	movwf	(robotMoveSpeed@temp1)
  4309  0D9C  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4310  0D9D  00E3               	movwf	(robotMoveSpeed@temp1+1)
  4311                           	line	58
  4312                           	
  4313  0D9E                     l11657:	
  4314                           ;robot.c: 58: temp1 = temp1 << 8;
  4315  0D9E  0863               	movf	(robotMoveSpeed@temp1+1),w
  4316  0D9F  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  4317  0DA0  0862               	movf	(robotMoveSpeed@temp1),w
  4318  0DA1  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4319  0DA2  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4320  0DA3  00DE               	movwf	(??_robotMoveSpeed+0)+1
  4321  0DA4  01DD               	clrf	(??_robotMoveSpeed+0)+0
  4322  0DA5  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4323  0DA6  00E2               	movwf	(robotMoveSpeed@temp1)
  4324  0DA7  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4325  0DA8  00E3               	movwf	(robotMoveSpeed@temp1+1)
  4326                           	line	59
  4327                           	
  4328  0DA9                     l11659:	
  4329                           ;robot.c: 59: temp1 += DistLowByte;
  4330  0DA9  1683               	bsf	status, 5	;RP0=1, select bank1
  4331  0DAA  1303               	bcf	status, 6	;RP1=0, select bank1
  4332  0DAB  0846               	movf	(_DistLowByte)^080h,w	;volatile
  4333  0DAC  1283               	bcf	status, 5	;RP0=0, select bank0
  4334  0DAD  1303               	bcf	status, 6	;RP1=0, select bank0
  4335  0DAE  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4336  0DAF  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4337  0DB0  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4338  0DB1  07E2               	addwf	(robotMoveSpeed@temp1),f
  4339  0DB2  1803               	skipnc
  4340  0DB3  0AE3               	incf	(robotMoveSpeed@temp1+1),f
  4341  0DB4  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4342  0DB5  07E3               	addwf	(robotMoveSpeed@temp1+1),f
  4343                           	line	60
  4344                           	
  4345  0DB6                     l11661:	
  4346                           ;robot.c: 60: distTravelled += temp1;
  4347  0DB6  0862               	movf	(robotMoveSpeed@temp1),w
  4348  0DB7  1683               	bsf	status, 5	;RP0=1, select bank1
  4349  0DB8  1303               	bcf	status, 6	;RP1=0, select bank1
  4350  0DB9  07B4               	addwf	(_distTravelled)^080h,f
  4351  0DBA  1803               	skipnc
  4352  0DBB  0AB5               	incf	(_distTravelled+1)^080h,f
  4353  0DBC  1283               	bcf	status, 5	;RP0=0, select bank0
  4354  0DBD  1303               	bcf	status, 6	;RP1=0, select bank0
  4355  0DBE  0863               	movf	(robotMoveSpeed@temp1+1),w
  4356  0DBF  1683               	bsf	status, 5	;RP0=1, select bank1
  4357  0DC0  1303               	bcf	status, 6	;RP1=0, select bank1
  4358  0DC1  07B5               	addwf	(_distTravelled+1)^080h,f
  4359                           	line	61
  4360                           	
  4361  0DC2                     l11663:	
  4362                           ;robot.c: 61: UpdateDisplay();
  4363  0DC2  120A  118A  24F0   	fcall	_UpdateDisplay
              120A  158A         
  4364  0DC7  2DC8               	goto	l11665
  4365                           	line	62
  4366                           	
  4367  0DC8                     l6061:	
  4368                           	line	50
  4369                           	
  4370  0DC8                     l11665:	
  4371  0DC8  1283               	bcf	status, 5	;RP0=0, select bank0
  4372  0DC9  1303               	bcf	status, 6	;RP1=0, select bank0
  4373  0DCA  085A               	movf	(robotMoveSpeed@distance+1),w
  4374  0DCB  01A7               	clrf	(?_abs+1)
  4375  0DCC  07A7               	addwf	(?_abs+1)
  4376  0DCD  0859               	movf	(robotMoveSpeed@distance),w
  4377  0DCE  01A6               	clrf	(?_abs)
  4378  0DCF  07A6               	addwf	(?_abs)
  4379                           
  4380  0DD0  160A  118A  2533   	fcall	_abs
              120A  158A         
  4381  0DD5  1283               	bcf	status, 5	;RP0=0, select bank0
  4382  0DD6  1303               	bcf	status, 6	;RP1=0, select bank0
  4383  0DD7  0826               	movf	(0+?_abs),w
  4384  0DD8  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4385  0DD9  0827               	movf	(1+?_abs),w
  4386  0DDA  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  4387  0DDB  1683               	bsf	status, 5	;RP0=1, select bank1
  4388  0DDC  1303               	bcf	status, 6	;RP1=0, select bank1
  4389  0DDD  0835               	movf	(_distTravelled+1)^080h,w
  4390  0DDE  1283               	bcf	status, 5	;RP0=0, select bank0
  4391  0DDF  1303               	bcf	status, 6	;RP1=0, select bank0
  4392  0DE0  01A7               	clrf	(?_abs+1)
  4393  0DE1  07A7               	addwf	(?_abs+1)
  4394  0DE2  1683               	bsf	status, 5	;RP0=1, select bank1
  4395  0DE3  1303               	bcf	status, 6	;RP1=0, select bank1
  4396  0DE4  0834               	movf	(_distTravelled)^080h,w
  4397  0DE5  1283               	bcf	status, 5	;RP0=0, select bank0
  4398  0DE6  1303               	bcf	status, 6	;RP1=0, select bank0
  4399  0DE7  01A6               	clrf	(?_abs)
  4400  0DE8  07A6               	addwf	(?_abs)
  4401                           
  4402  0DE9  160A  118A  2533   	fcall	_abs
              120A  158A         
  4403  0DEE  1283               	bcf	status, 5	;RP0=0, select bank0
  4404  0DEF  1303               	bcf	status, 6	;RP1=0, select bank0
  4405  0DF0  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4406  0DF1  3A80               	xorlw	80h
  4407  0DF2  00DF               	movwf	(??_robotMoveSpeed+2)+0
  4408  0DF3  0827               	movf	(1+(?_abs)),w
  4409  0DF4  3A80               	xorlw	80h
  4410  0DF5  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  4411  0DF6  1D03               	skipz
  4412  0DF7  2DFA               	goto	u5485
  4413  0DF8  0826               	movf	(0+(?_abs)),w
  4414  0DF9  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  4415  0DFA                     u5485:
  4416                           
  4417  0DFA  1803               	skipnc
  4418  0DFB  2DFD               	goto	u5481
  4419  0DFC  2DFE               	goto	u5480
  4420  0DFD                     u5481:
  4421  0DFD  2D86               	goto	l11649
  4422  0DFE                     u5480:
  4423  0DFE  2DFF               	goto	l11667
  4424                           	
  4425  0DFF                     l6064:	
  4426                           	line	64
  4427                           	
  4428  0DFF                     l11667:	
  4429                           ;robot.c: 62: }
  4430                           ;robot.c: 64: ser_putch(137);
  4431  0DFF  3089               	movlw	(089h)
  4432  0E00  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4433                           	line	66
  4434                           ;robot.c: 66: ser_putch(0);
  4435  0E05  3000               	movlw	(0)
  4436  0E06  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4437                           	line	68
  4438                           ;robot.c: 68: ser_putch(0);
  4439  0E0B  3000               	movlw	(0)
  4440  0E0C  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4441                           	line	70
  4442                           ;robot.c: 70: ser_putch(0);
  4443  0E11  3000               	movlw	(0)
  4444  0E12  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4445                           	line	72
  4446                           ;robot.c: 72: ser_putch(0);
  4447  0E17  3000               	movlw	(0)
  4448  0E18  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4449                           	line	73
  4450                           	
  4451  0E1D                     l6065:	
  4452  0E1D  0008               	return
  4453                           	opt stack 0
  4454                           GLOBAL	__end_of_robotMoveSpeed
  4455  0E1E                     	__end_of_robotMoveSpeed:
  4456 ;; =============== function _robotMoveSpeed ends ============
  4457                           
  4458                           	signat	_robotMoveSpeed,8312
  4459                           	global	_readAvgDistance
  4460                           psect	text1073,local,class=CODE,delta=2
  4461                           global __ptext1073
  4462  17AB                     __ptext1073:
  4463                           
  4464 ;; *************** function _readAvgDistance *****************
  4465 ;; Defined at:
  4466 ;;		line 10 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\infrared.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  i               2   18[BANK0 ] int 
  4471 ;;  fullval         2   16[BANK0 ] unsigned int 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4481 ;;      Params:         0       0       0       0       0
  4482 ;;      Locals:         0       4       0       0       0
  4483 ;;      Temps:          0       0       0       0       0
  4484 ;;      Totals:         0       4       0       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    6
  4488 ;; This function calls:
  4489 ;;		_readDistance
  4490 ;;		___lwdiv
  4491 ;;		_ADCconvert
  4492 ;; This function is called by:
  4493 ;;		_scan360
  4494 ;;		_main
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           psect	text1073
  4498                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\infrared.c"
  4499                           	line	10
  4500                           	global	__size_of_readAvgDistance
  4501  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4502                           	
  4503  17AB                     _readAvgDistance:	
  4504                           	opt	stack 0
  4505                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4506                           	line	11
  4507                           	
  4508  17AB                     l11621:	
  4509                           ;infrared.c: 11: unsigned int fullval = 0;
  4510  17AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4511  17AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4512  17AD  01B0               	clrf	(readAvgDistance@fullval)
  4513  17AE  01B1               	clrf	(readAvgDistance@fullval+1)
  4514                           	line	14
  4515                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  4516  17AF  01B2               	clrf	(readAvgDistance@i)
  4517  17B0  01B3               	clrf	(readAvgDistance@i+1)
  4518                           	
  4519  17B1                     l11623:	
  4520  17B1  0833               	movf	(readAvgDistance@i+1),w
  4521  17B2  3A80               	xorlw	80h
  4522  17B3  00FF               	movwf	btemp+1
  4523  17B4  3080               	movlw	(high(0Ah))^80h
  4524  17B5  027F               	subwf	btemp+1,w
  4525  17B6  1D03               	skipz
  4526  17B7  2FBA               	goto	u5455
  4527  17B8  300A               	movlw	low(0Ah)
  4528  17B9  0232               	subwf	(readAvgDistance@i),w
  4529  17BA                     u5455:
  4530                           
  4531  17BA  1C03               	skipc
  4532  17BB  2FBD               	goto	u5451
  4533  17BC  2FBE               	goto	u5450
  4534  17BD                     u5451:
  4535  17BD  2FC0               	goto	l11627
  4536  17BE                     u5450:
  4537  17BE  2FE1               	goto	l11633
  4538                           	
  4539  17BF                     l11625:	
  4540  17BF  2FE1               	goto	l11633
  4541                           	line	15
  4542                           	
  4543  17C0                     l3021:	
  4544                           	line	16
  4545                           	
  4546  17C0                     l11627:	
  4547                           ;infrared.c: 15: {
  4548                           ;infrared.c: 16: fullval += readDistance();
  4549  17C0  160A  118A  2319   	fcall	_readDistance
              160A  118A         
  4550  17C5  1283               	bcf	status, 5	;RP0=0, select bank0
  4551  17C6  1303               	bcf	status, 6	;RP1=0, select bank0
  4552  17C7  0828               	movf	(0+(?_readDistance)),w
  4553  17C8  07B0               	addwf	(readAvgDistance@fullval),f
  4554  17C9  1803               	skipnc
  4555  17CA  0AB1               	incf	(readAvgDistance@fullval+1),f
  4556  17CB  0829               	movf	(1+(?_readDistance)),w
  4557  17CC  07B1               	addwf	(readAvgDistance@fullval+1),f
  4558                           	line	14
  4559                           	
  4560  17CD                     l11629:	
  4561  17CD  3001               	movlw	low(01h)
  4562  17CE  07B2               	addwf	(readAvgDistance@i),f
  4563  17CF  1803               	skipnc
  4564  17D0  0AB3               	incf	(readAvgDistance@i+1),f
  4565  17D1  3000               	movlw	high(01h)
  4566  17D2  07B3               	addwf	(readAvgDistance@i+1),f
  4567                           	
  4568  17D3                     l11631:	
  4569  17D3  0833               	movf	(readAvgDistance@i+1),w
  4570  17D4  3A80               	xorlw	80h
  4571  17D5  00FF               	movwf	btemp+1
  4572  17D6  3080               	movlw	(high(0Ah))^80h
  4573  17D7  027F               	subwf	btemp+1,w
  4574  17D8  1D03               	skipz
  4575  17D9  2FDC               	goto	u5465
  4576  17DA  300A               	movlw	low(0Ah)
  4577  17DB  0232               	subwf	(readAvgDistance@i),w
  4578  17DC                     u5465:
  4579                           
  4580  17DC  1C03               	skipc
  4581  17DD  2FDF               	goto	u5461
  4582  17DE  2FE0               	goto	u5460
  4583  17DF                     u5461:
  4584  17DF  2FC0               	goto	l11627
  4585  17E0                     u5460:
  4586  17E0  2FE1               	goto	l11633
  4587                           	
  4588  17E1                     l3022:	
  4589                           	line	19
  4590                           	
  4591  17E1                     l11633:	
  4592                           ;infrared.c: 18: }
  4593                           ;infrared.c: 19: adcVal = fullval / 10;
  4594  17E1  300A               	movlw	low(0Ah)
  4595  17E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4596  17E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4597  17E4  00A6               	movwf	(?___lwdiv)
  4598  17E5  3000               	movlw	high(0Ah)
  4599  17E6  00A7               	movwf	((?___lwdiv))+1
  4600  17E7  0831               	movf	(readAvgDistance@fullval+1),w
  4601  17E8  01A9               	clrf	1+(?___lwdiv)+02h
  4602  17E9  07A9               	addwf	1+(?___lwdiv)+02h
  4603  17EA  0830               	movf	(readAvgDistance@fullval),w
  4604  17EB  01A8               	clrf	0+(?___lwdiv)+02h
  4605  17EC  07A8               	addwf	0+(?___lwdiv)+02h
  4606                           
  4607  17ED  160A  118A  26BA   	fcall	___lwdiv
              160A  118A         
  4608  17F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4609  17F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4610  17F4  0827               	movf	(1+(?___lwdiv)),w
  4611  17F5  01EB               	clrf	(_adcVal+1)	;volatile
  4612  17F6  07EB               	addwf	(_adcVal+1)	;volatile
  4613  17F7  0826               	movf	(0+(?___lwdiv)),w
  4614  17F8  01EA               	clrf	(_adcVal)	;volatile
  4615  17F9  07EA               	addwf	(_adcVal)	;volatile
  4616                           
  4617                           	line	20
  4618                           ;infrared.c: 20: ADCconvert();
  4619  17FA  120A  118A  22CD   	fcall	_ADCconvert
              160A  118A         
  4620                           	line	21
  4621                           	
  4622  17FF                     l3023:	
  4623  17FF  0008               	return
  4624                           	opt stack 0
  4625                           GLOBAL	__end_of_readAvgDistance
  4626  1800                     	__end_of_readAvgDistance:
  4627 ;; =============== function _readAvgDistance ends ============
  4628                           
  4629                           	signat	_readAvgDistance,88
  4630                           	global	_UpdateDisplay
  4631                           psect	text1074,local,class=CODE,delta=2
  4632                           global __ptext1074
  4633  04F0                     __ptext1074:
  4634                           
  4635 ;; *************** function _UpdateDisplay *****************
  4636 ;; Defined at:
  4637 ;;		line 216 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  adcOutput      16   41[BANK0 ] unsigned char [16]
  4642 ;; Return value:  Size  Location     Type
  4643 ;;		None               void
  4644 ;; Registers used:
  4645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4651 ;;      Params:         0       0       0       0       0
  4652 ;;      Locals:         0      16       0       0       0
  4653 ;;      Temps:          0       4       0       0       0
  4654 ;;      Totals:         0      20       0       0       0
  4655 ;;Total ram usage:       20 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    5
  4658 ;; This function calls:
  4659 ;;		_lcd_write_control
  4660 ;;		_sprintf
  4661 ;;		_lcd_set_cursor
  4662 ;;		_lcd_write_string
  4663 ;;		___awmod
  4664 ;; This function is called by:
  4665 ;;		_straightLineTest
  4666 ;;		_ChargeMode
  4667 ;;		_scan360
  4668 ;;		_main
  4669 ;;		_robotMoveSpeed
  4670 ;;		_robotMove
  4671 ;;		_calibrateIR
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           psect	text1074
  4675                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
  4676                           	line	216
  4677                           	global	__size_of_UpdateDisplay
  4678  0221                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4679                           	
  4680  04F0                     _UpdateDisplay:	
  4681                           	opt	stack 1
  4682                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4683                           	line	217
  4684                           	
  4685  04F0                     l11555:	
  4686                           ;HMI.c: 217: char adcOutput[16] = "";
  4687  04F0  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4688  04F1  0084               	movwf	fsr0
  4689  04F2  3090               	movlw	low(UpdateDisplay@F1236)
  4690  04F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4691  04F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4692  04F5  00C5               	movwf	(??_UpdateDisplay+0)+0
  4693  04F6  0804               	movf	fsr0,w
  4694  04F7  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4695  04F8  3010               	movlw	16
  4696  04F9  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4697  04FA                     u5430:
  4698  04FA  0845               	movf	(??_UpdateDisplay+0)+0,w
  4699  04FB  0084               	movwf	fsr0
  4700  04FC  1783               	bsf	status, 7	;select IRP bank3
  4701                           	
  4702  04FD  0800               	movf	indf,w
  4703  04FE  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4704  04FF  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4705  0500  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4706  0501  0084               	movwf	fsr0
  4707  0502  1383               	bcf	status, 7	;select IRP bank0
  4708                           	
  4709  0503  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4710  0504  0080               	movwf	indf
  4711  0505  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4712  0506  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4713  0507  2CFA               	goto	u5430
  4714                           	line	218
  4715                           ;HMI.c: 218: switch (currentMenu)
  4716  0508  2EFD               	goto	l11619
  4717                           	line	221
  4718                           ;HMI.c: 219: {
  4719                           ;HMI.c: 221: case 0:
  4720                           	
  4721  0509                     l4584:	
  4722                           	line	224
  4723                           	
  4724  0509                     l11557:	
  4725                           ;HMI.c: 224: lcd_write_control(0b00000001);
  4726  0509  3001               	movlw	(01h)
  4727  050A  160A  118A  22EF   	fcall	_lcd_write_control
              120A  118A         
  4728                           	line	226
  4729                           	
  4730  050F                     l11559:	
  4731                           ;HMI.c: 226: sprintf(adcOutput,"ADC:%d Dist:%d",BumpSensors, distTravelled);
  4732  050F  302B               	movlw	((STR_13-__stringbase))&0ffh
  4733  0510  1283               	bcf	status, 5	;RP0=0, select bank0
  4734  0511  1303               	bcf	status, 6	;RP1=0, select bank0
  4735  0512  00C5               	movwf	(??_UpdateDisplay+0)+0
  4736  0513  0845               	movf	(??_UpdateDisplay+0)+0,w
  4737  0514  00B4               	movwf	(?_sprintf)
  4738  0515  086C               	movf	(_BumpSensors),w	;volatile
  4739  0516  00C6               	movwf	(??_UpdateDisplay+1)+0
  4740  0517  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  4741  0518  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  4742  0519  00B5               	movwf	0+(?_sprintf)+01h
  4743  051A  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  4744  051B  00B6               	movwf	1+(?_sprintf)+01h
  4745  051C  1683               	bsf	status, 5	;RP0=1, select bank1
  4746  051D  1303               	bcf	status, 6	;RP1=0, select bank1
  4747  051E  0835               	movf	(_distTravelled+1)^080h,w
  4748  051F  1283               	bcf	status, 5	;RP0=0, select bank0
  4749  0520  1303               	bcf	status, 6	;RP1=0, select bank0
  4750  0521  01B8               	clrf	1+(?_sprintf)+03h
  4751  0522  07B8               	addwf	1+(?_sprintf)+03h
  4752  0523  1683               	bsf	status, 5	;RP0=1, select bank1
  4753  0524  1303               	bcf	status, 6	;RP1=0, select bank1
  4754  0525  0834               	movf	(_distTravelled)^080h,w
  4755  0526  1283               	bcf	status, 5	;RP0=0, select bank0
  4756  0527  1303               	bcf	status, 6	;RP1=0, select bank0
  4757  0528  01B7               	clrf	0+(?_sprintf)+03h
  4758  0529  07B7               	addwf	0+(?_sprintf)+03h
  4759                           
  4760  052A  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4761  052B  120A  158A  2700   	fcall	_sprintf
              120A  118A         
  4762                           	line	229
  4763                           	
  4764  0530                     l11561:	
  4765                           ;HMI.c: 229: lcd_set_cursor(0x00);
  4766  0530  3000               	movlw	(0)
  4767  0531  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  4768                           	line	230
  4769                           ;HMI.c: 230: lcd_write_string(adcOutput);
  4770  0536  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  4771  0537  1283               	bcf	status, 5	;RP0=0, select bank0
  4772  0538  1303               	bcf	status, 6	;RP1=0, select bank0
  4773  0539  00A7               	movwf	(?_lcd_write_string)
  4774  053A  3000               	movlw	(0x0/2)
  4775  053B  00A8               	movwf	(?_lcd_write_string+1)
  4776  053C  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4777                           	line	232
  4778                           	
  4779  0541                     l11563:	
  4780                           ;HMI.c: 232: lcd_set_cursor(0x40);
  4781  0541  3040               	movlw	(040h)
  4782  0542  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  4783                           	line	233
  4784                           	
  4785  0547                     l11565:	
  4786                           ;HMI.c: 233: if (pos > 0)
  4787  0547  1683               	bsf	status, 5	;RP0=1, select bank1
  4788  0548  1303               	bcf	status, 6	;RP1=0, select bank1
  4789  0549  083D               	movf	(_pos+1)^080h,w
  4790  054A  3A80               	xorlw	80h
  4791  054B  00FF               	movwf	btemp+1
  4792  054C  3080               	movlw	(high(01h))^80h
  4793  054D  027F               	subwf	btemp+1,w
  4794  054E  1D03               	skipz
  4795  054F  2D52               	goto	u5445
  4796  0550  3001               	movlw	low(01h)
  4797  0551  023C               	subwf	(_pos)^080h,w
  4798  0552                     u5445:
  4799                           
  4800  0552  1C03               	skipc
  4801  0553  2D55               	goto	u5441
  4802  0554  2D56               	goto	u5440
  4803  0555                     u5441:
  4804  0555  2D69               	goto	l11569
  4805  0556                     u5440:
  4806                           	line	234
  4807                           	
  4808  0556                     l11567:	
  4809                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  4810  0556  1683               	bsf	status, 5	;RP0=1, select bank1
  4811  0557  1303               	bcf	status, 6	;RP1=0, select bank1
  4812  0558  083C               	movf	(_pos)^080h,w
  4813  0559  3EFF               	addlw	0FFh
  4814  055A  3EDA               	addlw	_shortMenuStrings&0ffh
  4815  055B  0084               	movwf	fsr0
  4816  055C  1383               	bcf	status, 7	;select IRP bank1
  4817  055D  0800               	movf	indf,w
  4818  055E  1283               	bcf	status, 5	;RP0=0, select bank0
  4819  055F  1303               	bcf	status, 6	;RP1=0, select bank0
  4820  0560  00A7               	movwf	(?_lcd_write_string)
  4821  0561  3080               	movlw	80h
  4822  0562  00A8               	movwf	(?_lcd_write_string+1)
  4823  0563  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4824  0568  2D7C               	goto	l11571
  4825                           	line	235
  4826                           	
  4827  0569                     l4585:	
  4828                           	line	236
  4829                           	
  4830  0569                     l11569:	
  4831                           ;HMI.c: 235: else
  4832                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4833  0569  1683               	bsf	status, 5	;RP0=1, select bank1
  4834  056A  1303               	bcf	status, 6	;RP1=0, select bank1
  4835  056B  083C               	movf	(_pos)^080h,w
  4836  056C  3E05               	addlw	05h
  4837  056D  3EDA               	addlw	_shortMenuStrings&0ffh
  4838  056E  0084               	movwf	fsr0
  4839  056F  1383               	bcf	status, 7	;select IRP bank1
  4840  0570  0800               	movf	indf,w
  4841  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  4842  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  4843  0573  00A7               	movwf	(?_lcd_write_string)
  4844  0574  3080               	movlw	80h
  4845  0575  00A8               	movwf	(?_lcd_write_string+1)
  4846  0576  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4847  057B  2D7C               	goto	l11571
  4848                           	
  4849  057C                     l4586:	
  4850                           	line	237
  4851                           	
  4852  057C                     l11571:	
  4853                           ;HMI.c: 237: lcd_set_cursor(0x44);
  4854  057C  3044               	movlw	(044h)
  4855  057D  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  4856                           	line	238
  4857                           	
  4858  0582                     l11573:	
  4859                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  4860  0582  1683               	bsf	status, 5	;RP0=1, select bank1
  4861  0583  1303               	bcf	status, 6	;RP1=0, select bank1
  4862  0584  083C               	movf	(_pos)^080h,w
  4863  0585  3ED4               	addlw	_menuStrings&0ffh
  4864  0586  0084               	movwf	fsr0
  4865  0587  1383               	bcf	status, 7	;select IRP bank1
  4866  0588  0800               	movf	indf,w
  4867  0589  1283               	bcf	status, 5	;RP0=0, select bank0
  4868  058A  1303               	bcf	status, 6	;RP1=0, select bank0
  4869  058B  00A7               	movwf	(?_lcd_write_string)
  4870  058C  3080               	movlw	80h
  4871  058D  00A8               	movwf	(?_lcd_write_string+1)
  4872  058E  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4873                           	line	239
  4874                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  4875  0593  304D               	movlw	(04Dh)
  4876  0594  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  4877                           	line	240
  4878                           	
  4879  0599                     l11575:	
  4880                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4881  0599  3006               	movlw	low(06h)
  4882  059A  1283               	bcf	status, 5	;RP0=0, select bank0
  4883  059B  1303               	bcf	status, 6	;RP1=0, select bank0
  4884  059C  00A0               	movwf	(?___awmod)
  4885  059D  3000               	movlw	high(06h)
  4886  059E  00A1               	movwf	((?___awmod))+1
  4887  059F  1683               	bsf	status, 5	;RP0=1, select bank1
  4888  05A0  1303               	bcf	status, 6	;RP1=0, select bank1
  4889  05A1  083C               	movf	(_pos)^080h,w
  4890  05A2  3E01               	addlw	low(01h)
  4891  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4892  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  4893  05A5  00A2               	movwf	0+(?___awmod)+02h
  4894  05A6  1683               	bsf	status, 5	;RP0=1, select bank1
  4895  05A7  1303               	bcf	status, 6	;RP1=0, select bank1
  4896  05A8  083D               	movf	(_pos+1)^080h,w
  4897  05A9  1803               	skipnc
  4898  05AA  3E01               	addlw	1
  4899  05AB  3E00               	addlw	high(01h)
  4900  05AC  1283               	bcf	status, 5	;RP0=0, select bank0
  4901  05AD  1303               	bcf	status, 6	;RP1=0, select bank0
  4902  05AE  00A3               	movwf	1+0+(?___awmod)+02h
  4903  05AF  120A  158A  20D3   	fcall	___awmod
              120A  118A         
  4904  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  4905  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  4906  05B6  0820               	movf	(0+(?___awmod)),w
  4907  05B7  3EDA               	addlw	_shortMenuStrings&0ffh
  4908  05B8  0084               	movwf	fsr0
  4909  05B9  1383               	bcf	status, 7	;select IRP bank1
  4910  05BA  0800               	movf	indf,w
  4911  05BB  00A7               	movwf	(?_lcd_write_string)
  4912  05BC  3080               	movlw	80h
  4913  05BD  00A8               	movwf	(?_lcd_write_string+1)
  4914  05BE  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4915                           	line	241
  4916                           ;HMI.c: 241: break;
  4917  05C3  2F10               	goto	l4593
  4918                           	line	242
  4919                           ;HMI.c: 242: case 1:
  4920                           	
  4921  05C4                     l4588:	
  4922                           	line	243
  4923                           	
  4924  05C4                     l11577:	
  4925                           ;HMI.c: 243: lcd_write_control(0b00000001);
  4926  05C4  3001               	movlw	(01h)
  4927  05C5  160A  118A  22EF   	fcall	_lcd_write_control
              120A  118A         
  4928                           	line	244
  4929                           	
  4930  05CA                     l11579:	
  4931                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",BumpSensors, distTravelled);
  4932  05CA  302B               	movlw	((STR_14-__stringbase))&0ffh
  4933  05CB  1283               	bcf	status, 5	;RP0=0, select bank0
  4934  05CC  1303               	bcf	status, 6	;RP1=0, select bank0
  4935  05CD  00C5               	movwf	(??_UpdateDisplay+0)+0
  4936  05CE  0845               	movf	(??_UpdateDisplay+0)+0,w
  4937  05CF  00B4               	movwf	(?_sprintf)
  4938  05D0  086C               	movf	(_BumpSensors),w	;volatile
  4939  05D1  00C6               	movwf	(??_UpdateDisplay+1)+0
  4940  05D2  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  4941  05D3  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  4942  05D4  00B5               	movwf	0+(?_sprintf)+01h
  4943  05D5  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  4944  05D6  00B6               	movwf	1+(?_sprintf)+01h
  4945  05D7  1683               	bsf	status, 5	;RP0=1, select bank1
  4946  05D8  1303               	bcf	status, 6	;RP1=0, select bank1
  4947  05D9  0835               	movf	(_distTravelled+1)^080h,w
  4948  05DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4949  05DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4950  05DC  01B8               	clrf	1+(?_sprintf)+03h
  4951  05DD  07B8               	addwf	1+(?_sprintf)+03h
  4952  05DE  1683               	bsf	status, 5	;RP0=1, select bank1
  4953  05DF  1303               	bcf	status, 6	;RP1=0, select bank1
  4954  05E0  0834               	movf	(_distTravelled)^080h,w
  4955  05E1  1283               	bcf	status, 5	;RP0=0, select bank0
  4956  05E2  1303               	bcf	status, 6	;RP1=0, select bank0
  4957  05E3  01B7               	clrf	0+(?_sprintf)+03h
  4958  05E4  07B7               	addwf	0+(?_sprintf)+03h
  4959                           
  4960  05E5  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4961  05E6  120A  158A  2700   	fcall	_sprintf
              120A  118A         
  4962                           	line	245
  4963                           	
  4964  05EB                     l11581:	
  4965                           ;HMI.c: 245: lcd_set_cursor(0x00);
  4966  05EB  3000               	movlw	(0)
  4967  05EC  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  4968                           	line	246
  4969                           ;HMI.c: 246: lcd_write_string("Zero Step_Motor");
  4970  05F1  301B               	movlw	low((STR_15-__stringbase))
  4971  05F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4972  05F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4973  05F4  00A7               	movwf	(?_lcd_write_string)
  4974  05F5  3080               	movlw	80h
  4975  05F6  00A8               	movwf	(?_lcd_write_string+1)
  4976  05F7  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4977                           	line	251
  4978                           	
  4979  05FC                     l11583:	
  4980                           ;HMI.c: 251: lcd_set_cursor(0x40);
  4981  05FC  3040               	movlw	(040h)
  4982  05FD  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  4983                           	line	253
  4984                           	
  4985  0602                     l11585:	
  4986                           ;HMI.c: 253: lcd_write_string("<<<");
  4987  0602  3099               	movlw	low((STR_16-__stringbase))
  4988  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  4989  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  4990  0605  00A7               	movwf	(?_lcd_write_string)
  4991  0606  3080               	movlw	80h
  4992  0607  00A8               	movwf	(?_lcd_write_string+1)
  4993  0608  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4994                           	line	256
  4995                           ;HMI.c: 256: lcd_set_cursor(0x44);
  4996  060D  3044               	movlw	(044h)
  4997  060E  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  4998                           	line	257
  4999                           	
  5000  0613                     l11587:	
  5001                           ;HMI.c: 257: lcd_write_string("CONFIRM");
  5002  0613  308D               	movlw	low((STR_17-__stringbase))
  5003  0614  1283               	bcf	status, 5	;RP0=0, select bank0
  5004  0615  1303               	bcf	status, 6	;RP1=0, select bank0
  5005  0616  00A7               	movwf	(?_lcd_write_string)
  5006  0617  3080               	movlw	80h
  5007  0618  00A8               	movwf	(?_lcd_write_string+1)
  5008  0619  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5009                           	line	258
  5010                           	
  5011  061E                     l11589:	
  5012                           ;HMI.c: 258: lcd_set_cursor(0x4D);
  5013  061E  304D               	movlw	(04Dh)
  5014  061F  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  5015                           	line	259
  5016                           ;HMI.c: 259: lcd_write_string(">>>");
  5017  0624  309D               	movlw	low((STR_18-__stringbase))
  5018  0625  1283               	bcf	status, 5	;RP0=0, select bank0
  5019  0626  1303               	bcf	status, 6	;RP1=0, select bank0
  5020  0627  00A7               	movwf	(?_lcd_write_string)
  5021  0628  3080               	movlw	80h
  5022  0629  00A8               	movwf	(?_lcd_write_string+1)
  5023  062A  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5024                           	line	260
  5025                           ;HMI.c: 260: break;
  5026  062F  2F10               	goto	l4593
  5027                           	line	261
  5028                           ;HMI.c: 261: case 2:
  5029                           	
  5030  0630                     l4589:	
  5031                           	line	262
  5032                           	
  5033  0630                     l11591:	
  5034                           ;HMI.c: 262: lcd_write_control(0b00000001);
  5035  0630  3001               	movlw	(01h)
  5036  0631  160A  118A  22EF   	fcall	_lcd_write_control
              120A  118A         
  5037                           	line	264
  5038                           ;HMI.c: 264: lcd_set_cursor(0x00);
  5039  0636  3000               	movlw	(0)
  5040  0637  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  5041                           	line	265
  5042                           	
  5043  063C                     l11593:	
  5044                           ;HMI.c: 265: lcd_write_string(" Charging Mode ");
  5045  063C  300B               	movlw	low((STR_19-__stringbase))
  5046  063D  1283               	bcf	status, 5	;RP0=0, select bank0
  5047  063E  1303               	bcf	status, 6	;RP1=0, select bank0
  5048  063F  00A7               	movwf	(?_lcd_write_string)
  5049  0640  3080               	movlw	80h
  5050  0641  00A8               	movwf	(?_lcd_write_string+1)
  5051  0642  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5052                           	line	269
  5053                           	
  5054  0647                     l11595:	
  5055                           ;HMI.c: 269: lcd_set_cursor(0x44);
  5056  0647  3044               	movlw	(044h)
  5057  0648  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  5058                           	line	270
  5059                           ;HMI.c: 270: lcd_write_string("  EXIT  ");
  5060  064D  304F               	movlw	low((STR_20-__stringbase))
  5061  064E  1283               	bcf	status, 5	;RP0=0, select bank0
  5062  064F  1303               	bcf	status, 6	;RP1=0, select bank0
  5063  0650  00A7               	movwf	(?_lcd_write_string)
  5064  0651  3080               	movlw	80h
  5065  0652  00A8               	movwf	(?_lcd_write_string+1)
  5066  0653  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5067                           	line	272
  5068                           ;HMI.c: 272: break;
  5069  0658  2F10               	goto	l4593
  5070                           	line	273
  5071                           ;HMI.c: 273: case 3:
  5072                           	
  5073  0659                     l4590:	
  5074                           	line	274
  5075                           	
  5076  0659                     l11597:	
  5077                           ;HMI.c: 274: lcd_write_control(0b00000001);
  5078  0659  3001               	movlw	(01h)
  5079  065A  160A  118A  22EF   	fcall	_lcd_write_control
              120A  118A         
  5080                           	line	275
  5081                           	
  5082  065F                     l11599:	
  5083                           ;HMI.c: 275: sprintf(adcOutput,"AS:%dDT:%d",assignedSpeed, distTravelled);
  5084  065F  303A               	movlw	((STR_21-__stringbase))&0ffh
  5085  0660  1283               	bcf	status, 5	;RP0=0, select bank0
  5086  0661  1303               	bcf	status, 6	;RP1=0, select bank0
  5087  0662  00C5               	movwf	(??_UpdateDisplay+0)+0
  5088  0663  0845               	movf	(??_UpdateDisplay+0)+0,w
  5089  0664  00B4               	movwf	(?_sprintf)
  5090  0665  1683               	bsf	status, 5	;RP0=1, select bank1
  5091  0666  1303               	bcf	status, 6	;RP1=0, select bank1
  5092  0667  0861               	movf	(_assignedSpeed+1)^080h,w
  5093  0668  1283               	bcf	status, 5	;RP0=0, select bank0
  5094  0669  1303               	bcf	status, 6	;RP1=0, select bank0
  5095  066A  01B6               	clrf	1+(?_sprintf)+01h
  5096  066B  07B6               	addwf	1+(?_sprintf)+01h
  5097  066C  1683               	bsf	status, 5	;RP0=1, select bank1
  5098  066D  1303               	bcf	status, 6	;RP1=0, select bank1
  5099  066E  0860               	movf	(_assignedSpeed)^080h,w
  5100  066F  1283               	bcf	status, 5	;RP0=0, select bank0
  5101  0670  1303               	bcf	status, 6	;RP1=0, select bank0
  5102  0671  01B5               	clrf	0+(?_sprintf)+01h
  5103  0672  07B5               	addwf	0+(?_sprintf)+01h
  5104                           
  5105  0673  1683               	bsf	status, 5	;RP0=1, select bank1
  5106  0674  1303               	bcf	status, 6	;RP1=0, select bank1
  5107  0675  0835               	movf	(_distTravelled+1)^080h,w
  5108  0676  1283               	bcf	status, 5	;RP0=0, select bank0
  5109  0677  1303               	bcf	status, 6	;RP1=0, select bank0
  5110  0678  01B8               	clrf	1+(?_sprintf)+03h
  5111  0679  07B8               	addwf	1+(?_sprintf)+03h
  5112  067A  1683               	bsf	status, 5	;RP0=1, select bank1
  5113  067B  1303               	bcf	status, 6	;RP1=0, select bank1
  5114  067C  0834               	movf	(_distTravelled)^080h,w
  5115  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  5116  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  5117  067F  01B7               	clrf	0+(?_sprintf)+03h
  5118  0680  07B7               	addwf	0+(?_sprintf)+03h
  5119                           
  5120  0681  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  5121  0682  120A  158A  2700   	fcall	_sprintf
              120A  118A         
  5122                           	line	277
  5123                           	
  5124  0687                     l11601:	
  5125                           ;HMI.c: 277: lcd_set_cursor(0x00);
  5126  0687  3000               	movlw	(0)
  5127  0688  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  5128                           	line	278
  5129                           ;HMI.c: 278: lcd_write_string(adcOutput);
  5130  068D  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  5131  068E  1283               	bcf	status, 5	;RP0=0, select bank0
  5132  068F  1303               	bcf	status, 6	;RP1=0, select bank0
  5133  0690  00A7               	movwf	(?_lcd_write_string)
  5134  0691  3000               	movlw	(0x0/2)
  5135  0692  00A8               	movwf	(?_lcd_write_string+1)
  5136  0693  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5137                           	line	282
  5138                           	
  5139  0698                     l11603:	
  5140                           ;HMI.c: 282: lcd_set_cursor(0x44);
  5141  0698  3044               	movlw	(044h)
  5142  0699  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  5143                           	line	283
  5144                           	
  5145  069E                     l11605:	
  5146                           ;HMI.c: 283: lcd_write_string("  EXIT  ");
  5147  069E  304F               	movlw	low((STR_22-__stringbase))
  5148  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  5149  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  5150  06A1  00A7               	movwf	(?_lcd_write_string)
  5151  06A2  3080               	movlw	80h
  5152  06A3  00A8               	movwf	(?_lcd_write_string+1)
  5153  06A4  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5154                           	line	285
  5155                           ;HMI.c: 285: break;
  5156  06A9  2F10               	goto	l4593
  5157                           	line	287
  5158                           ;HMI.c: 287: case 4:
  5159                           	
  5160  06AA                     l4591:	
  5161                           	line	288
  5162                           	
  5163  06AA                     l11607:	
  5164                           ;HMI.c: 288: lcd_write_control(0b00000001);
  5165  06AA  3001               	movlw	(01h)
  5166  06AB  160A  118A  22EF   	fcall	_lcd_write_control
              120A  118A         
  5167                           	line	289
  5168                           	
  5169  06B0                     l11609:	
  5170                           ;HMI.c: 289: sprintf(adcOutput,"D:%d D:%d",d2travel, distTravelled);
  5171  06B0  3045               	movlw	((STR_23-__stringbase))&0ffh
  5172  06B1  1283               	bcf	status, 5	;RP0=0, select bank0
  5173  06B2  1303               	bcf	status, 6	;RP1=0, select bank0
  5174  06B3  00C5               	movwf	(??_UpdateDisplay+0)+0
  5175  06B4  0845               	movf	(??_UpdateDisplay+0)+0,w
  5176  06B5  00B4               	movwf	(?_sprintf)
  5177  06B6  1683               	bsf	status, 5	;RP0=1, select bank1
  5178  06B7  1303               	bcf	status, 6	;RP1=0, select bank1
  5179  06B8  0833               	movf	(_d2travel+1)^080h,w
  5180  06B9  1283               	bcf	status, 5	;RP0=0, select bank0
  5181  06BA  1303               	bcf	status, 6	;RP1=0, select bank0
  5182  06BB  01B6               	clrf	1+(?_sprintf)+01h
  5183  06BC  07B6               	addwf	1+(?_sprintf)+01h
  5184  06BD  1683               	bsf	status, 5	;RP0=1, select bank1
  5185  06BE  1303               	bcf	status, 6	;RP1=0, select bank1
  5186  06BF  0832               	movf	(_d2travel)^080h,w
  5187  06C0  1283               	bcf	status, 5	;RP0=0, select bank0
  5188  06C1  1303               	bcf	status, 6	;RP1=0, select bank0
  5189  06C2  01B5               	clrf	0+(?_sprintf)+01h
  5190  06C3  07B5               	addwf	0+(?_sprintf)+01h
  5191                           
  5192  06C4  1683               	bsf	status, 5	;RP0=1, select bank1
  5193  06C5  1303               	bcf	status, 6	;RP1=0, select bank1
  5194  06C6  0835               	movf	(_distTravelled+1)^080h,w
  5195  06C7  1283               	bcf	status, 5	;RP0=0, select bank0
  5196  06C8  1303               	bcf	status, 6	;RP1=0, select bank0
  5197  06C9  01B8               	clrf	1+(?_sprintf)+03h
  5198  06CA  07B8               	addwf	1+(?_sprintf)+03h
  5199  06CB  1683               	bsf	status, 5	;RP0=1, select bank1
  5200  06CC  1303               	bcf	status, 6	;RP1=0, select bank1
  5201  06CD  0834               	movf	(_distTravelled)^080h,w
  5202  06CE  1283               	bcf	status, 5	;RP0=0, select bank0
  5203  06CF  1303               	bcf	status, 6	;RP1=0, select bank0
  5204  06D0  01B7               	clrf	0+(?_sprintf)+03h
  5205  06D1  07B7               	addwf	0+(?_sprintf)+03h
  5206                           
  5207  06D2  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  5208  06D3  120A  158A  2700   	fcall	_sprintf
              120A  118A         
  5209                           	line	291
  5210                           	
  5211  06D8                     l11611:	
  5212                           ;HMI.c: 291: lcd_set_cursor(0x00);
  5213  06D8  3000               	movlw	(0)
  5214  06D9  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  5215                           	line	292
  5216                           ;HMI.c: 292: lcd_write_string(adcOutput);
  5217  06DE  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  5218  06DF  1283               	bcf	status, 5	;RP0=0, select bank0
  5219  06E0  1303               	bcf	status, 6	;RP1=0, select bank0
  5220  06E1  00A7               	movwf	(?_lcd_write_string)
  5221  06E2  3000               	movlw	(0x0/2)
  5222  06E3  00A8               	movwf	(?_lcd_write_string+1)
  5223  06E4  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5224                           	line	296
  5225                           	
  5226  06E9                     l11613:	
  5227                           ;HMI.c: 296: lcd_set_cursor(0x44);
  5228  06E9  3044               	movlw	(044h)
  5229  06EA  160A  118A  22AA   	fcall	_lcd_set_cursor
              120A  118A         
  5230                           	line	297
  5231                           	
  5232  06EF                     l11615:	
  5233                           ;HMI.c: 297: lcd_write_string("  EXIT  ");
  5234  06EF  304F               	movlw	low((STR_24-__stringbase))
  5235  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  5236  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  5237  06F2  00A7               	movwf	(?_lcd_write_string)
  5238  06F3  3080               	movlw	80h
  5239  06F4  00A8               	movwf	(?_lcd_write_string+1)
  5240  06F5  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5241                           	line	299
  5242                           ;HMI.c: 299: break;
  5243  06FA  2F10               	goto	l4593
  5244                           	line	300
  5245                           ;HMI.c: 300: default:
  5246                           	
  5247  06FB                     l4592:	
  5248                           	line	301
  5249                           ;HMI.c: 301: break;
  5250  06FB  2F10               	goto	l4593
  5251                           	line	304
  5252                           	
  5253  06FC                     l11617:	
  5254                           ;HMI.c: 304: }
  5255  06FC  2F10               	goto	l4593
  5256                           	line	218
  5257                           	
  5258  06FD                     l4583:	
  5259                           	
  5260  06FD                     l11619:	
  5261  06FD  1683               	bsf	status, 5	;RP0=1, select bank1
  5262  06FE  1303               	bcf	status, 6	;RP1=0, select bank1
  5263  06FF  084B               	movf	(_currentMenu)^080h,w	;volatile
  5264                           	; Switch size 1, requested type "space"
  5265                           ; Number of cases is 5, Range of values is 0 to 4
  5266                           ; switch strategies available:
  5267                           ; Name         Instructions Cycles
  5268                           ; simple_byte           16     9 (average)
  5269                           ; direct_byte           23     8 (fixed)
  5270                           ; jumptable            260     6 (fixed)
  5271                           ; rangetable             9     6 (fixed)
  5272                           ; spacedrange           16     9 (fixed)
  5273                           ; locatedrange           5     3 (fixed)
  5274                           ;	Chosen strategy is simple_byte
  5275                           
  5276                           	opt asmopt_off
  5277  0700  3A00               	xorlw	0^0	; case 0
  5278  0701  1903               	skipnz
  5279  0702  2D09               	goto	l11557
  5280  0703  3A01               	xorlw	1^0	; case 1
  5281  0704  1903               	skipnz
  5282  0705  2DC4               	goto	l11577
  5283  0706  3A03               	xorlw	2^1	; case 2
  5284  0707  1903               	skipnz
  5285  0708  2E30               	goto	l11591
  5286  0709  3A01               	xorlw	3^2	; case 3
  5287  070A  1903               	skipnz
  5288  070B  2E59               	goto	l11597
  5289  070C  3A07               	xorlw	4^3	; case 4
  5290  070D  1903               	skipnz
  5291  070E  2EAA               	goto	l11607
  5292  070F  2F10               	goto	l4593
  5293                           	opt asmopt_on
  5294                           
  5295                           	line	304
  5296                           	
  5297  0710                     l4587:	
  5298                           	line	305
  5299                           	
  5300  0710                     l4593:	
  5301  0710  0008               	return
  5302                           	opt stack 0
  5303                           GLOBAL	__end_of_UpdateDisplay
  5304  0711                     	__end_of_UpdateDisplay:
  5305 ;; =============== function _UpdateDisplay ends ============
  5306                           
  5307                           	signat	_UpdateDisplay,88
  5308                           	global	_init
  5309                           psect	text1075,local,class=CODE,delta=2
  5310                           global __ptext1075
  5311  14D4                     __ptext1075:
  5312                           
  5313 ;; *************** function _init *****************
  5314 ;; Defined at:
  5315 ;;		line 136 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;		None               void
  5322 ;; Registers used:
  5323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5329 ;;      Params:         0       0       0       0       0
  5330 ;;      Locals:         0       0       0       0       0
  5331 ;;      Temps:          0       1       0       0       0
  5332 ;;      Totals:         0       1       0       0       0
  5333 ;;Total ram usage:        1 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    5
  5336 ;; This function calls:
  5337 ;;		_ser_init
  5338 ;;		_init_adc
  5339 ;;		_lcd_init
  5340 ;;		_robo_init
  5341 ;; This function is called by:
  5342 ;;		_main
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           psect	text1075
  5346                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
  5347                           	line	136
  5348                           	global	__size_of_init
  5349  002F                     	__size_of_init	equ	__end_of_init-_init
  5350                           	
  5351  14D4                     _init:	
  5352                           	opt	stack 2
  5353                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5354                           	line	139
  5355                           	
  5356  14D4                     l11529:	
  5357                           ;Main.c: 139: buttonPressed = 0;
  5358  14D4  01FD               	clrf	(_buttonPressed)	;volatile
  5359                           	line	143
  5360                           	
  5361  14D5                     l11531:	
  5362                           ;Main.c: 143: TRISC &= 0b10010000;
  5363  14D5  3090               	movlw	(090h)
  5364  14D6  1283               	bcf	status, 5	;RP0=0, select bank0
  5365  14D7  1303               	bcf	status, 6	;RP1=0, select bank0
  5366  14D8  00A3               	movwf	(??_init+0)+0
  5367  14D9  0823               	movf	(??_init+0)+0,w
  5368  14DA  1683               	bsf	status, 5	;RP0=1, select bank1
  5369  14DB  1303               	bcf	status, 6	;RP1=0, select bank1
  5370  14DC  0587               	andwf	(135)^080h,f	;volatile
  5371                           	line	145
  5372                           	
  5373  14DD                     l11533:	
  5374                           ;Main.c: 145: SSPSTAT = 0b01000000;
  5375  14DD  3040               	movlw	(040h)
  5376  14DE  0094               	movwf	(148)^080h	;volatile
  5377                           	line	146
  5378                           	
  5379  14DF                     l11535:	
  5380                           ;Main.c: 146: SSPCON = 0b10100001;
  5381  14DF  30A1               	movlw	(0A1h)
  5382  14E0  1283               	bcf	status, 5	;RP0=0, select bank0
  5383  14E1  1303               	bcf	status, 6	;RP1=0, select bank0
  5384  14E2  0094               	movwf	(20)	;volatile
  5385                           	line	148
  5386                           	
  5387  14E3                     l11537:	
  5388                           ;Main.c: 148: OPTION_REG = 0b00000100;
  5389  14E3  3004               	movlw	(04h)
  5390  14E4  1683               	bsf	status, 5	;RP0=1, select bank1
  5391  14E5  1303               	bcf	status, 6	;RP1=0, select bank1
  5392  14E6  0081               	movwf	(129)^080h	;volatile
  5393                           	line	149
  5394                           	
  5395  14E7                     l11539:	
  5396                           ;Main.c: 149: ser_init();
  5397  14E7  160A  118A  23A7   	fcall	_ser_init
              160A  118A         
  5398                           	line	150
  5399                           	
  5400  14EC                     l11541:	
  5401                           ;Main.c: 150: init_adc();
  5402  14EC  160A  118A  2303   	fcall	_init_adc
              160A  118A         
  5403                           	line	151
  5404                           	
  5405  14F1                     l11543:	
  5406                           ;Main.c: 151: lcd_init();
  5407  14F1  160A  118A  23F8   	fcall	_lcd_init
              160A  118A         
  5408                           	line	152
  5409                           	
  5410  14F6                     l11545:	
  5411                           ;Main.c: 152: robo_init();
  5412  14F6  160A  118A  2346   	fcall	_robo_init
              160A  118A         
  5413                           	line	153
  5414                           	
  5415  14FB                     l11547:	
  5416                           ;Main.c: 153: TRISB = 0b11111100;
  5417  14FB  30FC               	movlw	(0FCh)
  5418  14FC  1683               	bsf	status, 5	;RP0=1, select bank1
  5419  14FD  1303               	bcf	status, 6	;RP1=0, select bank1
  5420  14FE  0086               	movwf	(134)^080h	;volatile
  5421                           	line	155
  5422                           	
  5423  14FF                     l11549:	
  5424                           ;Main.c: 155: TMR0IE = 1;
  5425  14FF  168B               	bsf	(93/8),(93)&7
  5426                           	line	156
  5427                           	
  5428  1500                     l11551:	
  5429                           ;Main.c: 156: PEIE=1;
  5430  1500  170B               	bsf	(94/8),(94)&7
  5431                           	line	158
  5432                           	
  5433  1501                     l11553:	
  5434                           ;Main.c: 158: (GIE = 1);
  5435  1501  178B               	bsf	(95/8),(95)&7
  5436                           	line	159
  5437                           	
  5438  1502                     l2225:	
  5439  1502  0008               	return
  5440                           	opt stack 0
  5441                           GLOBAL	__end_of_init
  5442  1503                     	__end_of_init:
  5443 ;; =============== function _init ends ============
  5444                           
  5445                           	signat	_init,88
  5446                           	global	_readDistance
  5447                           psect	text1076,local,class=CODE,delta=2
  5448                           global __ptext1076
  5449  1319                     __ptext1076:
  5450                           
  5451 ;; *************** function _readDistance *****************
  5452 ;; Defined at:
  5453 ;;		line 24 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\infrared.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  fullval         2   12[BANK0 ] unsigned int 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  2    8[BANK0 ] unsigned int 
  5460 ;; Registers used:
  5461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5467 ;;      Params:         0       2       0       0       0
  5468 ;;      Locals:         0       2       0       0       0
  5469 ;;      Temps:          0       2       0       0       0
  5470 ;;      Totals:         0       6       0       0       0
  5471 ;;Total ram usage:        6 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    5
  5474 ;; This function calls:
  5475 ;;		_adc_read_channel
  5476 ;; This function is called by:
  5477 ;;		_readAvgDistance
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           psect	text1076
  5481                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\infrared.c"
  5482                           	line	24
  5483                           	global	__size_of_readDistance
  5484  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  5485                           	
  5486  1319                     _readDistance:	
  5487                           	opt	stack 0
  5488                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5489                           	line	27
  5490                           	
  5491  1319                     l11523:	
  5492                           ;infrared.c: 25: unsigned int fullval ;
  5493                           ;infrared.c: 27: fullval = adc_read_channel(0);
  5494  1319  3000               	movlw	(0)
  5495  131A  160A  118A  2568   	fcall	_adc_read_channel
              160A  118A         
  5496  131F  1283               	bcf	status, 5	;RP0=0, select bank0
  5497  1320  1303               	bcf	status, 6	;RP1=0, select bank0
  5498  1321  00AA               	movwf	(??_readDistance+0)+0
  5499  1322  01AB               	clrf	(??_readDistance+0)+0+1
  5500  1323  082A               	movf	0+(??_readDistance+0)+0,w
  5501  1324  00AC               	movwf	(readDistance@fullval)
  5502  1325  082B               	movf	1+(??_readDistance+0)+0,w
  5503  1326  00AD               	movwf	(readDistance@fullval+1)
  5504                           	line	29
  5505                           	
  5506  1327                     l11525:	
  5507                           ;infrared.c: 29: return fullval;
  5508  1327  082D               	movf	(readDistance@fullval+1),w
  5509  1328  01A9               	clrf	(?_readDistance+1)
  5510  1329  07A9               	addwf	(?_readDistance+1)
  5511  132A  082C               	movf	(readDistance@fullval),w
  5512  132B  01A8               	clrf	(?_readDistance)
  5513  132C  07A8               	addwf	(?_readDistance)
  5514                           
  5515  132D  2B2E               	goto	l3026
  5516                           	
  5517  132E                     l11527:	
  5518                           	line	30
  5519                           	
  5520  132E                     l3026:	
  5521  132E  0008               	return
  5522                           	opt stack 0
  5523                           GLOBAL	__end_of_readDistance
  5524  132F                     	__end_of_readDistance:
  5525 ;; =============== function _readDistance ends ============
  5526                           
  5527                           	signat	_readDistance,90
  5528                           	global	_robot_read
  5529                           psect	text1077,local,class=CODE,delta=2
  5530                           global __ptext1077
  5531  175A                     __ptext1077:
  5532                           
  5533 ;; *************** function _robot_read *****************
  5534 ;; Defined at:
  5535 ;;		line 18 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5549 ;;      Params:         0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0
  5551 ;;      Temps:          0       2       0       0       0
  5552 ;;      Totals:         0       2       0       0       0
  5553 ;;Total ram usage:        2 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    5
  5556 ;; This function calls:
  5557 ;;		_ser_putch
  5558 ;;		_ser_getch
  5559 ;; This function is called by:
  5560 ;;		_main
  5561 ;;		_robotMoveSpeed
  5562 ;;		_robotMove
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           psect	text1077
  5566                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  5567                           	line	18
  5568                           	global	__size_of_robot_read
  5569  0051                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5570                           	
  5571  175A                     _robot_read:	
  5572                           	opt	stack 1
  5573                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5574                           	line	19
  5575                           	
  5576  175A                     l11509:	
  5577                           ;robot.c: 19: ser_putch (142);
  5578  175A  308E               	movlw	(08Eh)
  5579  175B  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5580                           	line	20
  5581                           ;robot.c: 20: ser_putch (7);
  5582  1760  3007               	movlw	(07h)
  5583  1761  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5584                           	line	21
  5585                           	
  5586  1766                     l11511:	
  5587                           ;robot.c: 21: _delay((unsigned long)((5)*(20000000/4000.0)));
  5588                           	opt asmopt_off
  5589  1766  3021               movlw	33
  5590  1767  1283               	bcf	status, 5	;RP0=0, select bank0
  5591  1768  1303               	bcf	status, 6	;RP1=0, select bank0
  5592  1769  00A3               movwf	((??_robot_read+0)+0+1),f
  5593  176A  3076               	movlw	118
  5594  176B  00A2               movwf	((??_robot_read+0)+0),f
  5595  176C                     u5797:
  5596  176C  0BA2               	decfsz	((??_robot_read+0)+0),f
  5597  176D  2F6C               	goto	u5797
  5598  176E  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5599  176F  2F6C               	goto	u5797
  5600  1770  0064               	clrwdt
  5601                           opt asmopt_on
  5602                           
  5603                           	line	22
  5604                           	
  5605  1771                     l11513:	
  5606                           ;robot.c: 22: BumpSensors = ser_getch();
  5607  1771  160A  118A  235F   	fcall	_ser_getch
              160A  118A         
  5608  1776  1283               	bcf	status, 5	;RP0=0, select bank0
  5609  1777  1303               	bcf	status, 6	;RP1=0, select bank0
  5610  1778  00A2               	movwf	(??_robot_read+0)+0
  5611  1779  0822               	movf	(??_robot_read+0)+0,w
  5612  177A  00EC               	movwf	(_BumpSensors)	;volatile
  5613                           	line	23
  5614                           	
  5615  177B                     l11515:	
  5616                           ;robot.c: 23: ser_putch (142);
  5617  177B  308E               	movlw	(08Eh)
  5618  177C  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5619                           	line	24
  5620                           	
  5621  1781                     l11517:	
  5622                           ;robot.c: 24: ser_putch (19);
  5623  1781  3013               	movlw	(013h)
  5624  1782  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5625                           	line	25
  5626                           ;robot.c: 25: _delay((unsigned long)((5)*(20000000/4000.0)));
  5627                           	opt asmopt_off
  5628  1787  3021               movlw	33
  5629  1788  1283               	bcf	status, 5	;RP0=0, select bank0
  5630  1789  1303               	bcf	status, 6	;RP1=0, select bank0
  5631  178A  00A3               movwf	((??_robot_read+0)+0+1),f
  5632  178B  3076               	movlw	118
  5633  178C  00A2               movwf	((??_robot_read+0)+0),f
  5634  178D                     u5807:
  5635  178D  0BA2               	decfsz	((??_robot_read+0)+0),f
  5636  178E  2F8D               	goto	u5807
  5637  178F  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5638  1790  2F8D               	goto	u5807
  5639  1791  0064               	clrwdt
  5640                           opt asmopt_on
  5641                           
  5642                           	line	26
  5643                           	
  5644  1792                     l11519:	
  5645                           ;robot.c: 26: DistHighByte = ser_getch();
  5646  1792  160A  118A  235F   	fcall	_ser_getch
              160A  118A         
  5647  1797  1283               	bcf	status, 5	;RP0=0, select bank0
  5648  1798  1303               	bcf	status, 6	;RP1=0, select bank0
  5649  1799  00A2               	movwf	(??_robot_read+0)+0
  5650  179A  0822               	movf	(??_robot_read+0)+0,w
  5651  179B  1683               	bsf	status, 5	;RP0=1, select bank1
  5652  179C  1303               	bcf	status, 6	;RP1=0, select bank1
  5653  179D  00C5               	movwf	(_DistHighByte)^080h	;volatile
  5654                           	line	27
  5655                           	
  5656  179E                     l11521:	
  5657                           ;robot.c: 27: DistLowByte = ser_getch();
  5658  179E  160A  118A  235F   	fcall	_ser_getch
              160A  118A         
  5659  17A3  1283               	bcf	status, 5	;RP0=0, select bank0
  5660  17A4  1303               	bcf	status, 6	;RP1=0, select bank0
  5661  17A5  00A2               	movwf	(??_robot_read+0)+0
  5662  17A6  0822               	movf	(??_robot_read+0)+0,w
  5663  17A7  1683               	bsf	status, 5	;RP0=1, select bank1
  5664  17A8  1303               	bcf	status, 6	;RP1=0, select bank1
  5665  17A9  00C6               	movwf	(_DistLowByte)^080h	;volatile
  5666                           	line	29
  5667                           	
  5668  17AA                     l6058:	
  5669  17AA  0008               	return
  5670                           	opt stack 0
  5671                           GLOBAL	__end_of_robot_read
  5672  17AB                     	__end_of_robot_read:
  5673 ;; =============== function _robot_read ends ============
  5674                           
  5675                           	signat	_robot_read,88
  5676                           	global	_lcd_init
  5677                           psect	text1078,local,class=CODE,delta=2
  5678                           global __ptext1078
  5679  13F8                     __ptext1078:
  5680                           
  5681 ;; *************** function _lcd_init *****************
  5682 ;; Defined at:
  5683 ;;		line 101 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;		None
  5688 ;; Return value:  Size  Location     Type
  5689 ;;		None               void
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0, pclath, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5697 ;;      Params:         0       0       0       0       0
  5698 ;;      Locals:         0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0
  5700 ;;      Totals:         0       0       0       0       0
  5701 ;;Total ram usage:        0 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    4
  5704 ;; This function calls:
  5705 ;;		_lcd_write_control
  5706 ;; This function is called by:
  5707 ;;		_init
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           psect	text1078
  5711                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  5712                           	line	101
  5713                           	global	__size_of_lcd_init
  5714  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5715                           	
  5716  13F8                     _lcd_init:	
  5717                           	opt	stack 2
  5718                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5719                           	line	105
  5720                           	
  5721  13F8                     l11489:	
  5722                           ;lcd.c: 105: ADCON1 = 0b00000010;
  5723  13F8  3002               	movlw	(02h)
  5724  13F9  1683               	bsf	status, 5	;RP0=1, select bank1
  5725  13FA  1303               	bcf	status, 6	;RP1=0, select bank1
  5726  13FB  009F               	movwf	(159)^080h	;volatile
  5727                           	line	108
  5728                           	
  5729  13FC                     l11491:	
  5730                           ;lcd.c: 108: PORTD = 0;
  5731  13FC  1283               	bcf	status, 5	;RP0=0, select bank0
  5732  13FD  1303               	bcf	status, 6	;RP1=0, select bank0
  5733  13FE  0188               	clrf	(8)	;volatile
  5734                           	line	109
  5735                           	
  5736  13FF                     l11493:	
  5737                           ;lcd.c: 109: PORTE = 0;
  5738  13FF  0189               	clrf	(9)	;volatile
  5739                           	line	111
  5740                           	
  5741  1400                     l11495:	
  5742                           ;lcd.c: 111: TRISD = 0b00000000;
  5743  1400  1683               	bsf	status, 5	;RP0=1, select bank1
  5744  1401  1303               	bcf	status, 6	;RP1=0, select bank1
  5745  1402  0188               	clrf	(136)^080h	;volatile
  5746                           	line	112
  5747                           	
  5748  1403                     l11497:	
  5749                           ;lcd.c: 112: TRISE = 0b00000000;
  5750  1403  0189               	clrf	(137)^080h	;volatile
  5751                           	line	115
  5752                           	
  5753  1404                     l11499:	
  5754                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5755  1404  3001               	movlw	(01h)
  5756  1405  160A  118A  22EF   	fcall	_lcd_write_control
              160A  118A         
  5757                           	line	116
  5758                           	
  5759  140A                     l11501:	
  5760                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5761  140A  3038               	movlw	(038h)
  5762  140B  160A  118A  22EF   	fcall	_lcd_write_control
              160A  118A         
  5763                           	line	117
  5764                           	
  5765  1410                     l11503:	
  5766                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5767  1410  300C               	movlw	(0Ch)
  5768  1411  160A  118A  22EF   	fcall	_lcd_write_control
              160A  118A         
  5769                           	line	118
  5770                           	
  5771  1416                     l11505:	
  5772                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5773  1416  3006               	movlw	(06h)
  5774  1417  160A  118A  22EF   	fcall	_lcd_write_control
              160A  118A         
  5775                           	line	119
  5776                           	
  5777  141C                     l11507:	
  5778                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5779  141C  3002               	movlw	(02h)
  5780  141D  160A  118A  22EF   	fcall	_lcd_write_control
              160A  118A         
  5781                           	line	121
  5782                           	
  5783  1422                     l1429:	
  5784  1422  0008               	return
  5785                           	opt stack 0
  5786                           GLOBAL	__end_of_lcd_init
  5787  1423                     	__end_of_lcd_init:
  5788 ;; =============== function _lcd_init ends ============
  5789                           
  5790                           	signat	_lcd_init,88
  5791                           	global	_lcd_write_string
  5792                           psect	text1079,local,class=CODE,delta=2
  5793                           global __ptext1079
  5794  147B                     __ptext1079:
  5795                           
  5796 ;; *************** function _lcd_write_string *****************
  5797 ;; Defined at:
  5798 ;;		line 48 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5801 ;;		 -> STR_24(9), STR_22(9), STR_20(9), STR_19(16), 
  5802 ;;		 -> STR_18(4), STR_17(8), STR_16(4), STR_15(16), 
  5803 ;;		 -> UpdateDisplay@adcOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  5804 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  5805 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  5806 ;;		 -> STR_1(9), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;		None               void
  5811 ;; Registers used:
  5812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5818 ;;      Params:         0       2       0       0       0
  5819 ;;      Locals:         0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0
  5821 ;;      Totals:         0       2       0       0       0
  5822 ;;Total ram usage:        2 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    4
  5825 ;; This function calls:
  5826 ;;		_lcd_write_data
  5827 ;; This function is called by:
  5828 ;;		_UpdateDisplay
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           psect	text1079
  5832                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  5833                           	line	48
  5834                           	global	__size_of_lcd_write_string
  5835  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5836                           	
  5837  147B                     _lcd_write_string:	
  5838                           	opt	stack 1
  5839                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5840                           	line	50
  5841                           	
  5842  147B                     l11481:	
  5843                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5844  147B  2C95               	goto	l11487
  5845                           	
  5846  147C                     l1409:	
  5847                           	
  5848  147C                     l11483:	
  5849  147C  1283               	bcf	status, 5	;RP0=0, select bank0
  5850  147D  1303               	bcf	status, 6	;RP1=0, select bank0
  5851  147E  0828               	movf	(lcd_write_string@s+1),w
  5852  147F  00FF               	movwf	btemp+1
  5853  1480  0827               	movf	(lcd_write_string@s),w
  5854  1481  0084               	movwf	fsr0
  5855  1482  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5856  1487  160A  118A  22B5   	fcall	_lcd_write_data
              160A  118A         
  5857                           	
  5858  148C                     l11485:	
  5859  148C  3001               	movlw	low(01h)
  5860  148D  1283               	bcf	status, 5	;RP0=0, select bank0
  5861  148E  1303               	bcf	status, 6	;RP1=0, select bank0
  5862  148F  07A7               	addwf	(lcd_write_string@s),f
  5863  1490  1803               	skipnc
  5864  1491  0AA8               	incf	(lcd_write_string@s+1),f
  5865  1492  3000               	movlw	high(01h)
  5866  1493  07A8               	addwf	(lcd_write_string@s+1),f
  5867  1494  2C95               	goto	l11487
  5868                           	
  5869  1495                     l1408:	
  5870                           	
  5871  1495                     l11487:	
  5872  1495  1283               	bcf	status, 5	;RP0=0, select bank0
  5873  1496  1303               	bcf	status, 6	;RP1=0, select bank0
  5874  1497  0828               	movf	(lcd_write_string@s+1),w
  5875  1498  00FF               	movwf	btemp+1
  5876  1499  0827               	movf	(lcd_write_string@s),w
  5877  149A  0084               	movwf	fsr0
  5878  149B  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5879  14A0  3800               	iorlw	0
  5880  14A1  1D03               	skipz
  5881  14A2  2CA4               	goto	u5421
  5882  14A3  2CA5               	goto	u5420
  5883  14A4                     u5421:
  5884  14A4  2C7C               	goto	l11483
  5885  14A5                     u5420:
  5886  14A5  2CA6               	goto	l1411
  5887                           	
  5888  14A6                     l1410:	
  5889                           	line	51
  5890                           	
  5891  14A6                     l1411:	
  5892  14A6  0008               	return
  5893                           	opt stack 0
  5894                           GLOBAL	__end_of_lcd_write_string
  5895  14A7                     	__end_of_lcd_write_string:
  5896 ;; =============== function _lcd_write_string ends ============
  5897                           
  5898                           	signat	_lcd_write_string,4216
  5899                           	global	_lcd_set_cursor
  5900                           psect	text1080,local,class=CODE,delta=2
  5901                           global __ptext1080
  5902  12AA                     __ptext1080:
  5903                           
  5904 ;; *************** function _lcd_set_cursor *****************
  5905 ;; Defined at:
  5906 ;;		line 42 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  address         1    wreg     unsigned char 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  address         1    3[BANK0 ] unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;		None               void
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0, pclath, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5920 ;;      Params:         0       0       0       0       0
  5921 ;;      Locals:         0       1       0       0       0
  5922 ;;      Temps:          0       0       0       0       0
  5923 ;;      Totals:         0       1       0       0       0
  5924 ;;Total ram usage:        1 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    4
  5927 ;; This function calls:
  5928 ;;		_lcd_write_control
  5929 ;; This function is called by:
  5930 ;;		_UpdateDisplay
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           psect	text1080
  5934                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  5935                           	line	42
  5936                           	global	__size_of_lcd_set_cursor
  5937  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5938                           	
  5939  12AA                     _lcd_set_cursor:	
  5940                           	opt	stack 1
  5941                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5942                           ;lcd_set_cursor@address stored from wreg
  5943  12AA  1283               	bcf	status, 5	;RP0=0, select bank0
  5944  12AB  1303               	bcf	status, 6	;RP1=0, select bank0
  5945  12AC  00A3               	movwf	(lcd_set_cursor@address)
  5946                           	line	43
  5947                           	
  5948  12AD                     l11477:	
  5949                           ;lcd.c: 43: address |= 0b10000000;
  5950  12AD  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5951                           	line	44
  5952                           	
  5953  12AE                     l11479:	
  5954                           ;lcd.c: 44: lcd_write_control(address);
  5955  12AE  0823               	movf	(lcd_set_cursor@address),w
  5956  12AF  160A  118A  22EF   	fcall	_lcd_write_control
              160A  118A         
  5957                           	line	45
  5958                           	
  5959  12B4                     l1405:	
  5960  12B4  0008               	return
  5961                           	opt stack 0
  5962                           GLOBAL	__end_of_lcd_set_cursor
  5963  12B5                     	__end_of_lcd_set_cursor:
  5964 ;; =============== function _lcd_set_cursor ends ============
  5965                           
  5966                           	signat	_lcd_set_cursor,4216
  5967                           	global	___awtoft
  5968                           psect	text1081,local,class=CODE,delta=2
  5969                           global __ptext1081
  5970  144F                     __ptext1081:
  5971                           
  5972 ;; *************** function ___awtoft *****************
  5973 ;; Defined at:
  5974 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  c               2   22[BANK0 ] int 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  sign            1   27[BANK0 ] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  3   22[BANK0 ] float 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0, pclath, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5988 ;;      Params:         0       3       0       0       0
  5989 ;;      Locals:         0       1       0       0       0
  5990 ;;      Temps:          0       2       0       0       0
  5991 ;;      Totals:         0       6       0       0       0
  5992 ;;Total ram usage:        6 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    4
  5995 ;; This function calls:
  5996 ;;		___ftpack
  5997 ;; This function is called by:
  5998 ;;		_main
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           psect	text1081
  6002                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6003                           	line	33
  6004                           	global	__size_of___awtoft
  6005  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  6006                           	
  6007  144F                     ___awtoft:	
  6008                           	opt	stack 3
  6009                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6010                           	line	36
  6011                           	
  6012  144F                     l11469:	
  6013  144F  1283               	bcf	status, 5	;RP0=0, select bank0
  6014  1450  1303               	bcf	status, 6	;RP1=0, select bank0
  6015  1451  01BB               	clrf	(___awtoft@sign)
  6016                           	line	37
  6017  1452  1FB7               	btfss	(___awtoft@c+1),7
  6018  1453  2C55               	goto	u5411
  6019  1454  2C56               	goto	u5410
  6020  1455                     u5411:
  6021  1455  2C5F               	goto	l11473
  6022  1456                     u5410:
  6023                           	line	38
  6024                           	
  6025  1456                     l11471:	
  6026  1456  09B6               	comf	(___awtoft@c),f
  6027  1457  09B7               	comf	(___awtoft@c+1),f
  6028  1458  0AB6               	incf	(___awtoft@c),f
  6029  1459  1903               	skipnz
  6030  145A  0AB7               	incf	(___awtoft@c+1),f
  6031                           	line	39
  6032  145B  01BB               	clrf	(___awtoft@sign)
  6033  145C  1403               	bsf	status,0
  6034  145D  0DBB               	rlf	(___awtoft@sign),f
  6035  145E  2C5F               	goto	l11473
  6036                           	line	40
  6037                           	
  6038  145F                     l7663:	
  6039                           	line	41
  6040                           	
  6041  145F                     l11473:	
  6042  145F  0836               	movf	(___awtoft@c),w
  6043  1460  00A0               	movwf	(?___ftpack)
  6044  1461  0837               	movf	(___awtoft@c+1),w
  6045  1462  00A1               	movwf	(?___ftpack+1)
  6046  1463  01A2               	clrf	(?___ftpack+2)
  6047  1464  308E               	movlw	(08Eh)
  6048  1465  00B9               	movwf	(??___awtoft+0)+0
  6049  1466  0839               	movf	(??___awtoft+0)+0,w
  6050  1467  00A3               	movwf	0+(?___ftpack)+03h
  6051  1468  083B               	movf	(___awtoft@sign),w
  6052  1469  00BA               	movwf	(??___awtoft+1)+0
  6053  146A  083A               	movf	(??___awtoft+1)+0,w
  6054  146B  00A4               	movwf	0+(?___ftpack)+04h
  6055  146C  120A  158A  21B5   	fcall	___ftpack
              160A  118A         
  6056  1471  1283               	bcf	status, 5	;RP0=0, select bank0
  6057  1472  1303               	bcf	status, 6	;RP1=0, select bank0
  6058  1473  0820               	movf	(0+(?___ftpack)),w
  6059  1474  00B6               	movwf	(?___awtoft)
  6060  1475  0821               	movf	(1+(?___ftpack)),w
  6061  1476  00B7               	movwf	(?___awtoft+1)
  6062  1477  0822               	movf	(2+(?___ftpack)),w
  6063  1478  00B8               	movwf	(?___awtoft+2)
  6064  1479  2C7A               	goto	l7664
  6065                           	
  6066  147A                     l11475:	
  6067                           	line	42
  6068                           	
  6069  147A                     l7664:	
  6070  147A  0008               	return
  6071                           	opt stack 0
  6072                           GLOBAL	__end_of___awtoft
  6073  147B                     	__end_of___awtoft:
  6074 ;; =============== function ___awtoft ends ============
  6075                           
  6076                           	signat	___awtoft,4219
  6077                           	global	___ftmul
  6078                           psect	text1082,local,class=CODE,delta=2
  6079                           global __ptext1082
  6080  0711                     __ptext1082:
  6081                           
  6082 ;; *************** function ___ftmul *****************
  6083 ;; Defined at:
  6084 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  f1              3   28[BANK0 ] float 
  6087 ;;  f2              3   31[BANK0 ] float 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  6090 ;;  sign            1   43[BANK0 ] unsigned char 
  6091 ;;  cntr            1   42[BANK0 ] unsigned char 
  6092 ;;  exp             1   38[BANK0 ] unsigned char 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  3   28[BANK0 ] float 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6102 ;;      Params:         0       6       0       0       0
  6103 ;;      Locals:         0       6       0       0       0
  6104 ;;      Temps:          0       4       0       0       0
  6105 ;;      Totals:         0      16       0       0       0
  6106 ;;Total ram usage:       16 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    4
  6109 ;; This function calls:
  6110 ;;		___ftpack
  6111 ;; This function is called by:
  6112 ;;		_main
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           psect	text1082
  6116                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6117                           	line	52
  6118                           	global	__size_of___ftmul
  6119  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  6120                           	
  6121  0711                     ___ftmul:	
  6122                           	opt	stack 3
  6123                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6124                           	line	56
  6125                           	
  6126  0711                     l11419:	
  6127  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  6128  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  6129  0713  083C               	movf	(___ftmul@f1),w
  6130  0714  00C2               	movwf	((??___ftmul+0)+0)
  6131  0715  083D               	movf	(___ftmul@f1+1),w
  6132  0716  00C3               	movwf	((??___ftmul+0)+0+1)
  6133  0717  083E               	movf	(___ftmul@f1+2),w
  6134  0718  00C4               	movwf	((??___ftmul+0)+0+2)
  6135  0719  1003               	clrc
  6136  071A  0D43               	rlf	(??___ftmul+0)+1,w
  6137  071B  0D44               	rlf	(??___ftmul+0)+2,w
  6138  071C  00C5               	movwf	(??___ftmul+3)+0
  6139  071D  0845               	movf	(??___ftmul+3)+0,w
  6140  071E  00C6               	movwf	(___ftmul@exp)
  6141  071F  08C6               	movf	((___ftmul@exp)),f
  6142  0720  1D03               	skipz
  6143  0721  2F23               	goto	u5271
  6144  0722  2F24               	goto	u5270
  6145  0723                     u5271:
  6146  0723  2F2C               	goto	l11425
  6147  0724                     u5270:
  6148                           	line	57
  6149                           	
  6150  0724                     l11421:	
  6151  0724  3000               	movlw	0x0
  6152  0725  00BC               	movwf	(?___ftmul)
  6153  0726  3000               	movlw	0x0
  6154  0727  00BD               	movwf	(?___ftmul+1)
  6155  0728  3000               	movlw	0x0
  6156  0729  00BE               	movwf	(?___ftmul+2)
  6157  072A  2FFE               	goto	l7626
  6158                           	
  6159  072B                     l11423:	
  6160  072B  2FFE               	goto	l7626
  6161                           	
  6162  072C                     l7625:	
  6163                           	line	58
  6164                           	
  6165  072C                     l11425:	
  6166  072C  083F               	movf	(___ftmul@f2),w
  6167  072D  00C2               	movwf	((??___ftmul+0)+0)
  6168  072E  0840               	movf	(___ftmul@f2+1),w
  6169  072F  00C3               	movwf	((??___ftmul+0)+0+1)
  6170  0730  0841               	movf	(___ftmul@f2+2),w
  6171  0731  00C4               	movwf	((??___ftmul+0)+0+2)
  6172  0732  1003               	clrc
  6173  0733  0D43               	rlf	(??___ftmul+0)+1,w
  6174  0734  0D44               	rlf	(??___ftmul+0)+2,w
  6175  0735  00C5               	movwf	(??___ftmul+3)+0
  6176  0736  0845               	movf	(??___ftmul+3)+0,w
  6177  0737  00CB               	movwf	(___ftmul@sign)
  6178  0738  08CB               	movf	((___ftmul@sign)),f
  6179  0739  1D03               	skipz
  6180  073A  2F3C               	goto	u5281
  6181  073B  2F3D               	goto	u5280
  6182  073C                     u5281:
  6183  073C  2F45               	goto	l11431
  6184  073D                     u5280:
  6185                           	line	59
  6186                           	
  6187  073D                     l11427:	
  6188  073D  3000               	movlw	0x0
  6189  073E  00BC               	movwf	(?___ftmul)
  6190  073F  3000               	movlw	0x0
  6191  0740  00BD               	movwf	(?___ftmul+1)
  6192  0741  3000               	movlw	0x0
  6193  0742  00BE               	movwf	(?___ftmul+2)
  6194  0743  2FFE               	goto	l7626
  6195                           	
  6196  0744                     l11429:	
  6197  0744  2FFE               	goto	l7626
  6198                           	
  6199  0745                     l7627:	
  6200                           	line	60
  6201                           	
  6202  0745                     l11431:	
  6203  0745  084B               	movf	(___ftmul@sign),w
  6204  0746  3E7B               	addlw	07Bh
  6205  0747  00C2               	movwf	(??___ftmul+0)+0
  6206  0748  0842               	movf	(??___ftmul+0)+0,w
  6207  0749  07C6               	addwf	(___ftmul@exp),f
  6208                           	line	61
  6209  074A  083C               	movf	(___ftmul@f1),w
  6210  074B  00C2               	movwf	((??___ftmul+0)+0)
  6211  074C  083D               	movf	(___ftmul@f1+1),w
  6212  074D  00C3               	movwf	((??___ftmul+0)+0+1)
  6213  074E  083E               	movf	(___ftmul@f1+2),w
  6214  074F  00C4               	movwf	((??___ftmul+0)+0+2)
  6215  0750  3010               	movlw	010h
  6216  0751                     u5295:
  6217  0751  1003               	clrc
  6218  0752  0CC4               	rrf	(??___ftmul+0)+2,f
  6219  0753  0CC3               	rrf	(??___ftmul+0)+1,f
  6220  0754  0CC2               	rrf	(??___ftmul+0)+0,f
  6221  0755                     u5290:
  6222  0755  3EFF               	addlw	-1
  6223  0756  1D03               	skipz
  6224  0757  2F51               	goto	u5295
  6225  0758  0842               	movf	0+(??___ftmul+0)+0,w
  6226  0759  00C5               	movwf	(??___ftmul+3)+0
  6227  075A  0845               	movf	(??___ftmul+3)+0,w
  6228  075B  00CB               	movwf	(___ftmul@sign)
  6229                           	line	62
  6230  075C  083F               	movf	(___ftmul@f2),w
  6231  075D  00C2               	movwf	((??___ftmul+0)+0)
  6232  075E  0840               	movf	(___ftmul@f2+1),w
  6233  075F  00C3               	movwf	((??___ftmul+0)+0+1)
  6234  0760  0841               	movf	(___ftmul@f2+2),w
  6235  0761  00C4               	movwf	((??___ftmul+0)+0+2)
  6236  0762  3010               	movlw	010h
  6237  0763                     u5305:
  6238  0763  1003               	clrc
  6239  0764  0CC4               	rrf	(??___ftmul+0)+2,f
  6240  0765  0CC3               	rrf	(??___ftmul+0)+1,f
  6241  0766  0CC2               	rrf	(??___ftmul+0)+0,f
  6242  0767                     u5300:
  6243  0767  3EFF               	addlw	-1
  6244  0768  1D03               	skipz
  6245  0769  2F63               	goto	u5305
  6246  076A  0842               	movf	0+(??___ftmul+0)+0,w
  6247  076B  00C5               	movwf	(??___ftmul+3)+0
  6248  076C  0845               	movf	(??___ftmul+3)+0,w
  6249  076D  06CB               	xorwf	(___ftmul@sign),f
  6250                           	line	63
  6251  076E  3080               	movlw	(080h)
  6252  076F  00C2               	movwf	(??___ftmul+0)+0
  6253  0770  0842               	movf	(??___ftmul+0)+0,w
  6254  0771  05CB               	andwf	(___ftmul@sign),f
  6255                           	line	64
  6256                           	
  6257  0772                     l11433:	
  6258  0772  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
  6259                           	line	66
  6260                           	
  6261  0773                     l11435:	
  6262  0773  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
  6263                           	line	67
  6264                           	
  6265  0774                     l11437:	
  6266  0774  30FF               	movlw	0FFh
  6267  0775  05BF               	andwf	(___ftmul@f2),f
  6268  0776  30FF               	movlw	0FFh
  6269  0777  05C0               	andwf	(___ftmul@f2+1),f
  6270  0778  3000               	movlw	0
  6271  0779  05C1               	andwf	(___ftmul@f2+2),f
  6272                           	line	68
  6273                           	
  6274  077A                     l11439:	
  6275  077A  3000               	movlw	0
  6276  077B  00C7               	movwf	(___ftmul@f3_as_product)
  6277  077C  3000               	movlw	0
  6278  077D  00C8               	movwf	(___ftmul@f3_as_product+1)
  6279  077E  3000               	movlw	0
  6280  077F  00C9               	movwf	(___ftmul@f3_as_product+2)
  6281                           	line	69
  6282                           	
  6283  0780                     l11441:	
  6284  0780  3007               	movlw	(07h)
  6285  0781  00C2               	movwf	(??___ftmul+0)+0
  6286  0782  0842               	movf	(??___ftmul+0)+0,w
  6287  0783  00CA               	movwf	(___ftmul@cntr)
  6288  0784  2F85               	goto	l11443
  6289                           	line	70
  6290                           	
  6291  0785                     l7628:	
  6292                           	line	71
  6293                           	
  6294  0785                     l11443:	
  6295  0785  1C3C               	btfss	(___ftmul@f1),(0)&7
  6296  0786  2F88               	goto	u5311
  6297  0787  2F89               	goto	u5310
  6298  0788                     u5311:
  6299  0788  2F9A               	goto	l11447
  6300  0789                     u5310:
  6301                           	line	72
  6302                           	
  6303  0789                     l11445:	
  6304  0789  083F               	movf	(___ftmul@f2),w
  6305  078A  07C7               	addwf	(___ftmul@f3_as_product),f
  6306  078B  0840               	movf	(___ftmul@f2+1),w
  6307  078C  1103               	clrz
  6308  078D  1803               	skipnc
  6309  078E  0A40               	incf	(___ftmul@f2+1),w
  6310  078F  1903               	skipnz
  6311  0790  2F92               	goto	u5321
  6312  0791  07C8               	addwf	(___ftmul@f3_as_product+1),f
  6313  0792                     u5321:
  6314  0792  0841               	movf	(___ftmul@f2+2),w
  6315  0793  1103               	clrz
  6316  0794  1803               	skipnc
  6317  0795  0A41               	incf	(___ftmul@f2+2),w
  6318  0796  1903               	skipnz
  6319  0797  2F99               	goto	u5322
  6320  0798  07C9               	addwf	(___ftmul@f3_as_product+2),f
  6321  0799                     u5322:
  6322                           
  6323  0799  2F9A               	goto	l11447
  6324                           	
  6325  079A                     l7629:	
  6326                           	line	73
  6327                           	
  6328  079A                     l11447:	
  6329  079A  3001               	movlw	01h
  6330  079B                     u5335:
  6331  079B  1003               	clrc
  6332  079C  0CBE               	rrf	(___ftmul@f1+2),f
  6333  079D  0CBD               	rrf	(___ftmul@f1+1),f
  6334  079E  0CBC               	rrf	(___ftmul@f1),f
  6335  079F  3EFF               	addlw	-1
  6336  07A0  1D03               	skipz
  6337  07A1  2F9B               	goto	u5335
  6338                           
  6339                           	line	74
  6340                           	
  6341  07A2                     l11449:	
  6342  07A2  3001               	movlw	01h
  6343  07A3                     u5345:
  6344  07A3  1003               	clrc
  6345  07A4  0DBF               	rlf	(___ftmul@f2),f
  6346  07A5  0DC0               	rlf	(___ftmul@f2+1),f
  6347  07A6  0DC1               	rlf	(___ftmul@f2+2),f
  6348  07A7  3EFF               	addlw	-1
  6349  07A8  1D03               	skipz
  6350  07A9  2FA3               	goto	u5345
  6351                           	line	75
  6352                           	
  6353  07AA                     l11451:	
  6354  07AA  3001               	movlw	low(01h)
  6355  07AB  02CA               	subwf	(___ftmul@cntr),f
  6356  07AC  1D03               	btfss	status,2
  6357  07AD  2FAF               	goto	u5351
  6358  07AE  2FB0               	goto	u5350
  6359  07AF                     u5351:
  6360  07AF  2F85               	goto	l11443
  6361  07B0                     u5350:
  6362  07B0  2FB1               	goto	l11453
  6363                           	
  6364  07B1                     l7630:	
  6365                           	line	76
  6366                           	
  6367  07B1                     l11453:	
  6368  07B1  3009               	movlw	(09h)
  6369  07B2  00C2               	movwf	(??___ftmul+0)+0
  6370  07B3  0842               	movf	(??___ftmul+0)+0,w
  6371  07B4  00CA               	movwf	(___ftmul@cntr)
  6372  07B5  2FB6               	goto	l11455
  6373                           	line	77
  6374                           	
  6375  07B6                     l7631:	
  6376                           	line	78
  6377                           	
  6378  07B6                     l11455:	
  6379  07B6  1C3C               	btfss	(___ftmul@f1),(0)&7
  6380  07B7  2FB9               	goto	u5361
  6381  07B8  2FBA               	goto	u5360
  6382  07B9                     u5361:
  6383  07B9  2FCB               	goto	l11459
  6384  07BA                     u5360:
  6385                           	line	79
  6386                           	
  6387  07BA                     l11457:	
  6388  07BA  083F               	movf	(___ftmul@f2),w
  6389  07BB  07C7               	addwf	(___ftmul@f3_as_product),f
  6390  07BC  0840               	movf	(___ftmul@f2+1),w
  6391  07BD  1103               	clrz
  6392  07BE  1803               	skipnc
  6393  07BF  0A40               	incf	(___ftmul@f2+1),w
  6394  07C0  1903               	skipnz
  6395  07C1  2FC3               	goto	u5371
  6396  07C2  07C8               	addwf	(___ftmul@f3_as_product+1),f
  6397  07C3                     u5371:
  6398  07C3  0841               	movf	(___ftmul@f2+2),w
  6399  07C4  1103               	clrz
  6400  07C5  1803               	skipnc
  6401  07C6  0A41               	incf	(___ftmul@f2+2),w
  6402  07C7  1903               	skipnz
  6403  07C8  2FCA               	goto	u5372
  6404  07C9  07C9               	addwf	(___ftmul@f3_as_product+2),f
  6405  07CA                     u5372:
  6406                           
  6407  07CA  2FCB               	goto	l11459
  6408                           	
  6409  07CB                     l7632:	
  6410                           	line	80
  6411                           	
  6412  07CB                     l11459:	
  6413  07CB  3001               	movlw	01h
  6414  07CC                     u5385:
  6415  07CC  1003               	clrc
  6416  07CD  0CBE               	rrf	(___ftmul@f1+2),f
  6417  07CE  0CBD               	rrf	(___ftmul@f1+1),f
  6418  07CF  0CBC               	rrf	(___ftmul@f1),f
  6419  07D0  3EFF               	addlw	-1
  6420  07D1  1D03               	skipz
  6421  07D2  2FCC               	goto	u5385
  6422                           
  6423                           	line	81
  6424                           	
  6425  07D3                     l11461:	
  6426  07D3  3001               	movlw	01h
  6427  07D4                     u5395:
  6428  07D4  1003               	clrc
  6429  07D5  0CC9               	rrf	(___ftmul@f3_as_product+2),f
  6430  07D6  0CC8               	rrf	(___ftmul@f3_as_product+1),f
  6431  07D7  0CC7               	rrf	(___ftmul@f3_as_product),f
  6432  07D8  3EFF               	addlw	-1
  6433  07D9  1D03               	skipz
  6434  07DA  2FD4               	goto	u5395
  6435                           
  6436                           	line	82
  6437                           	
  6438  07DB                     l11463:	
  6439  07DB  3001               	movlw	low(01h)
  6440  07DC  02CA               	subwf	(___ftmul@cntr),f
  6441  07DD  1D03               	btfss	status,2
  6442  07DE  2FE0               	goto	u5401
  6443  07DF  2FE1               	goto	u5400
  6444  07E0                     u5401:
  6445  07E0  2FB6               	goto	l11455
  6446  07E1                     u5400:
  6447  07E1  2FE2               	goto	l11465
  6448                           	
  6449  07E2                     l7633:	
  6450                           	line	83
  6451                           	
  6452  07E2                     l11465:	
  6453  07E2  0847               	movf	(___ftmul@f3_as_product),w
  6454  07E3  00A0               	movwf	(?___ftpack)
  6455  07E4  0848               	movf	(___ftmul@f3_as_product+1),w
  6456  07E5  00A1               	movwf	(?___ftpack+1)
  6457  07E6  0849               	movf	(___ftmul@f3_as_product+2),w
  6458  07E7  00A2               	movwf	(?___ftpack+2)
  6459  07E8  0846               	movf	(___ftmul@exp),w
  6460  07E9  00C2               	movwf	(??___ftmul+0)+0
  6461  07EA  0842               	movf	(??___ftmul+0)+0,w
  6462  07EB  00A3               	movwf	0+(?___ftpack)+03h
  6463  07EC  084B               	movf	(___ftmul@sign),w
  6464  07ED  00C3               	movwf	(??___ftmul+1)+0
  6465  07EE  0843               	movf	(??___ftmul+1)+0,w
  6466  07EF  00A4               	movwf	0+(?___ftpack)+04h
  6467  07F0  120A  158A  21B5   	fcall	___ftpack
              120A  118A         
  6468  07F5  1283               	bcf	status, 5	;RP0=0, select bank0
  6469  07F6  1303               	bcf	status, 6	;RP1=0, select bank0
  6470  07F7  0820               	movf	(0+(?___ftpack)),w
  6471  07F8  00BC               	movwf	(?___ftmul)
  6472  07F9  0821               	movf	(1+(?___ftpack)),w
  6473  07FA  00BD               	movwf	(?___ftmul+1)
  6474  07FB  0822               	movf	(2+(?___ftpack)),w
  6475  07FC  00BE               	movwf	(?___ftmul+2)
  6476  07FD  2FFE               	goto	l7626
  6477                           	
  6478  07FE                     l11467:	
  6479                           	line	84
  6480                           	
  6481  07FE                     l7626:	
  6482  07FE  0008               	return
  6483                           	opt stack 0
  6484                           GLOBAL	__end_of___ftmul
  6485  07FF                     	__end_of___ftmul:
  6486 ;; =============== function ___ftmul ends ============
  6487                           
  6488                           	signat	___ftmul,8315
  6489                           	global	_abs
  6490                           psect	text1083,local,class=CODE,delta=2
  6491                           global __ptext1083
  6492  1533                     __ptext1083:
  6493                           
  6494 ;; *************** function _abs *****************
  6495 ;; Defined at:
  6496 ;;		line 175 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  v               2    6[BANK0 ] int 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  2    6[BANK0 ] int 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6510 ;;      Params:         0       2       0       0       0
  6511 ;;      Locals:         0       0       0       0       0
  6512 ;;      Temps:          0       2       0       0       0
  6513 ;;      Totals:         0       4       0       0       0
  6514 ;;Total ram usage:        4 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    4
  6517 ;; This function calls:
  6518 ;;		___wmul
  6519 ;; This function is called by:
  6520 ;;		_robotMoveSpeed
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           psect	text1083
  6524                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  6525                           	line	175
  6526                           	global	__size_of_abs
  6527  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  6528                           	
  6529  1533                     _abs:	
  6530                           	opt	stack 1
  6531                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6532                           	line	176
  6533                           	
  6534  1533                     l11415:	
  6535                           ;robot.c: 176: return v * ( (v<0) * (-1) + (v>0));
  6536  1533  3000               	movlw	0
  6537  1534  1283               	bcf	status, 5	;RP0=0, select bank0
  6538  1535  1303               	bcf	status, 6	;RP1=0, select bank0
  6539  1536  1BA7               	btfsc	(abs@v+1),7
  6540  1537  3001               	movlw	1
  6541  1538  00A8               	movwf	(??_abs+0)+0
  6542  1539  01A9               	clrf	(??_abs+0)+0+1
  6543  153A  09A8               	comf	(??_abs+0)+0,f
  6544  153B  09A9               	comf	(??_abs+0)+1,f
  6545  153C  0AA8               	incf	(??_abs+0)+0,f
  6546  153D  1903               	skipnz
  6547  153E  0AA9               	incf	(??_abs+0)+1,f
  6548  153F  0827               	movf	(abs@v+1),w
  6549  1540  3A80               	xorlw	80h
  6550  1541  00FF               	movwf	btemp+1
  6551  1542  3080               	movlw	(high(01h))^80h
  6552  1543  027F               	subwf	btemp+1,w
  6553  1544  1D03               	skipz
  6554  1545  2D48               	goto	u5265
  6555  1546  3001               	movlw	low(01h)
  6556  1547  0226               	subwf	(abs@v),w
  6557  1548                     u5265:
  6558                           
  6559  1548  3000               	movlw	0
  6560  1549  1803               	skipnc
  6561  154A  3001               	movlw	1
  6562  154B  1283               	bcf	status, 5	;RP0=0, select bank0
  6563  154C  1303               	bcf	status, 6	;RP1=0, select bank0
  6564  154D  0728               	addwf	0+(??_abs+0)+0,w
  6565  154E  00A0               	movwf	(?___wmul)
  6566  154F  0829               	movf	1+(??_abs+0)+0,w
  6567  1550  1803               	skipnc
  6568  1551  0A29               	incf	1+(??_abs+0)+0,w
  6569  1552  00A1               	movwf	((?___wmul))+1
  6570  1553  0827               	movf	(abs@v+1),w
  6571  1554  01A3               	clrf	1+(?___wmul)+02h
  6572  1555  07A3               	addwf	1+(?___wmul)+02h
  6573  1556  0826               	movf	(abs@v),w
  6574  1557  01A2               	clrf	0+(?___wmul)+02h
  6575  1558  07A2               	addwf	0+(?___wmul)+02h
  6576                           
  6577  1559  160A  118A  2423   	fcall	___wmul
              160A  118A         
  6578  155E  1283               	bcf	status, 5	;RP0=0, select bank0
  6579  155F  1303               	bcf	status, 6	;RP1=0, select bank0
  6580  1560  0821               	movf	(1+(?___wmul)),w
  6581  1561  01A7               	clrf	(?_abs+1)
  6582  1562  07A7               	addwf	(?_abs+1)
  6583  1563  0820               	movf	(0+(?___wmul)),w
  6584  1564  01A6               	clrf	(?_abs)
  6585  1565  07A6               	addwf	(?_abs)
  6586                           
  6587  1566  2D67               	goto	l6082
  6588                           	
  6589  1567                     l11417:	
  6590                           	line	178
  6591                           	
  6592  1567                     l6082:	
  6593  1567  0008               	return
  6594                           	opt stack 0
  6595                           GLOBAL	__end_of_abs
  6596  1568                     	__end_of_abs:
  6597 ;; =============== function _abs ends ============
  6598                           
  6599                           	signat	_abs,4218
  6600                           	global	_ser_getch
  6601                           psect	text1084,local,class=CODE,delta=2
  6602                           global __ptext1084
  6603  135F                     __ptext1084:
  6604                           
  6605 ;; *************** function _ser_getch *****************
  6606 ;; Defined at:
  6607 ;;		line 55 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;		None
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  c               1    1[BANK0 ] unsigned char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      unsigned char 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6621 ;;      Params:         0       0       0       0       0
  6622 ;;      Locals:         0       1       0       0       0
  6623 ;;      Temps:          0       1       0       0       0
  6624 ;;      Totals:         0       2       0       0       0
  6625 ;;Total ram usage:        2 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    4
  6628 ;; This function calls:
  6629 ;;		_ser_isrx
  6630 ;; This function is called by:
  6631 ;;		_robot_read
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           psect	text1084
  6635                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
  6636                           	line	55
  6637                           	global	__size_of_ser_getch
  6638  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6639                           	
  6640  135F                     _ser_getch:	
  6641                           	opt	stack 1
  6642                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6643                           	line	58
  6644                           	
  6645  135F                     l11399:	
  6646                           ;ser.c: 56: unsigned char c;
  6647                           ;ser.c: 58: while (ser_isrx()==0)
  6648  135F  2B61               	goto	l11401
  6649                           	
  6650  1360                     l6786:	
  6651                           	line	59
  6652                           ;ser.c: 59: continue;
  6653  1360  2B61               	goto	l11401
  6654                           	
  6655  1361                     l6785:	
  6656                           	line	58
  6657                           	
  6658  1361                     l11401:	
  6659  1361  160A  118A  232F   	fcall	_ser_isrx
              160A  118A         
  6660  1366  1C03               	btfss	status,0
  6661  1367  2B69               	goto	u5251
  6662  1368  2B6A               	goto	u5250
  6663  1369                     u5251:
  6664  1369  2B61               	goto	l11401
  6665  136A                     u5250:
  6666                           	
  6667  136A                     l6787:	
  6668                           	line	61
  6669                           ;ser.c: 61: GIE=0;
  6670  136A  138B               	bcf	(95/8),(95)&7
  6671                           	line	62
  6672                           	
  6673  136B                     l11403:	
  6674                           ;ser.c: 62: c=rxfifo[rxoptr];
  6675  136B  1283               	bcf	status, 5	;RP0=0, select bank0
  6676  136C  1303               	bcf	status, 6	;RP1=0, select bank0
  6677  136D  086E               	movf	(_rxoptr),w
  6678  136E  3EA0               	addlw	_rxfifo&0ffh
  6679  136F  0084               	movwf	fsr0
  6680  1370  1383               	bcf	status, 7	;select IRP bank1
  6681  1371  0800               	movf	indf,w
  6682  1372  00A0               	movwf	(??_ser_getch+0)+0
  6683  1373  0820               	movf	(??_ser_getch+0)+0,w
  6684  1374  00A1               	movwf	(ser_getch@c)
  6685                           	line	63
  6686                           	
  6687  1375                     l11405:	
  6688                           ;ser.c: 63: ++rxoptr;
  6689  1375  3001               	movlw	(01h)
  6690  1376  00A0               	movwf	(??_ser_getch+0)+0
  6691  1377  0820               	movf	(??_ser_getch+0)+0,w
  6692  1378  07EE               	addwf	(_rxoptr),f	;volatile
  6693                           	line	64
  6694                           	
  6695  1379                     l11407:	
  6696                           ;ser.c: 64: rxoptr &= (16-1);
  6697  1379  300F               	movlw	(0Fh)
  6698  137A  00A0               	movwf	(??_ser_getch+0)+0
  6699  137B  0820               	movf	(??_ser_getch+0)+0,w
  6700  137C  05EE               	andwf	(_rxoptr),f	;volatile
  6701                           	line	65
  6702                           	
  6703  137D                     l11409:	
  6704                           ;ser.c: 65: GIE=1;
  6705  137D  178B               	bsf	(95/8),(95)&7
  6706                           	line	66
  6707                           	
  6708  137E                     l11411:	
  6709                           ;ser.c: 66: return c;
  6710  137E  0821               	movf	(ser_getch@c),w
  6711  137F  2B80               	goto	l6788
  6712                           	
  6713  1380                     l11413:	
  6714                           	line	67
  6715                           	
  6716  1380                     l6788:	
  6717  1380  0008               	return
  6718                           	opt stack 0
  6719                           GLOBAL	__end_of_ser_getch
  6720  1381                     	__end_of_ser_getch:
  6721 ;; =============== function _ser_getch ends ============
  6722                           
  6723                           	signat	_ser_getch,89
  6724                           	global	_sprintf
  6725                           psect	text1085,local,class=CODE,delta=2
  6726                           global __ptext1085
  6727  0F00                     __ptext1085:
  6728                           
  6729 ;; *************** function _sprintf *****************
  6730 ;; Defined at:
  6731 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  sp              1    wreg     PTR unsigned char 
  6734 ;;		 -> UpdateDisplay@adcOutput(16), 
  6735 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  6736 ;;		 -> STR_23(10), STR_21(11), STR_14(15), STR_13(15), 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  6739 ;;		 -> UpdateDisplay@adcOutput(16), 
  6740 ;;  _val            4   31[BANK0 ] struct .
  6741 ;;  c               1   36[BANK0 ] char 
  6742 ;;  prec            1   30[BANK0 ] char 
  6743 ;;  flag            1   29[BANK0 ] unsigned char 
  6744 ;;  ap              1   28[BANK0 ] PTR void [1]
  6745 ;;		 -> ?_sprintf(2), 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  2   20[BANK0 ] int 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6755 ;;      Params:         0       5       0       0       0
  6756 ;;      Locals:         0       9       0       0       0
  6757 ;;      Temps:          0       3       0       0       0
  6758 ;;      Totals:         0      17       0       0       0
  6759 ;;Total ram usage:       17 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    4
  6762 ;; This function calls:
  6763 ;;		___lwdiv
  6764 ;;		___lwmod
  6765 ;; This function is called by:
  6766 ;;		_UpdateDisplay
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           psect	text1085
  6770                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6771                           	line	488
  6772                           	global	__size_of_sprintf
  6773  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6774                           	
  6775  0F00                     _sprintf:	
  6776                           	opt	stack 1
  6777                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6778                           ;sprintf@sp stored from wreg
  6779                           	line	537
  6780  0F00  1283               	bcf	status, 5	;RP0=0, select bank0
  6781  0F01  1303               	bcf	status, 6	;RP1=0, select bank0
  6782  0F02  00C3               	movwf	(sprintf@sp)
  6783                           	
  6784  0F03                     l11341:	
  6785  0F03  3035               	movlw	(?_sprintf+01h)&0ffh
  6786  0F04  00B9               	movwf	(??_sprintf+0)+0
  6787  0F05  0839               	movf	(??_sprintf+0)+0,w
  6788  0F06  00BC               	movwf	(sprintf@ap)
  6789                           	line	540
  6790  0F07  2FE6               	goto	l11393
  6791                           	
  6792  0F08                     l6826:	
  6793                           	line	542
  6794                           	
  6795  0F08                     l11343:	
  6796  0F08  0844               	movf	(sprintf@c),w
  6797  0F09  3A25               	xorlw	025h
  6798  0F0A  1903               	skipnz
  6799  0F0B  2F0D               	goto	u5171
  6800  0F0C  2F0E               	goto	u5170
  6801  0F0D                     u5171:
  6802  0F0D  2F1A               	goto	l6827
  6803  0F0E                     u5170:
  6804                           	line	545
  6805                           	
  6806  0F0E                     l11345:	
  6807  0F0E  0844               	movf	(sprintf@c),w
  6808  0F0F  00B9               	movwf	(??_sprintf+0)+0
  6809  0F10  0843               	movf	(sprintf@sp),w
  6810  0F11  0084               	movwf	fsr0
  6811  0F12  0839               	movf	(??_sprintf+0)+0,w
  6812  0F13  1383               	bcf	status, 7	;select IRP bank0
  6813  0F14  0080               	movwf	indf
  6814                           	
  6815  0F15                     l11347:	
  6816  0F15  3001               	movlw	(01h)
  6817  0F16  00B9               	movwf	(??_sprintf+0)+0
  6818  0F17  0839               	movf	(??_sprintf+0)+0,w
  6819  0F18  07C3               	addwf	(sprintf@sp),f
  6820                           	line	546
  6821  0F19  2FE6               	goto	l11393
  6822                           	line	547
  6823                           	
  6824  0F1A                     l6827:	
  6825                           	line	552
  6826  0F1A  01BD               	clrf	(sprintf@flag)
  6827                           	line	638
  6828  0F1B  2F21               	goto	l11351
  6829                           	line	640
  6830                           	
  6831  0F1C                     l6829:	
  6832                           	line	641
  6833  0F1C  2FFA               	goto	l11395
  6834                           	line	700
  6835                           	
  6836  0F1D                     l6831:	
  6837  0F1D  2F36               	goto	l11353
  6838                           	line	701
  6839                           	
  6840  0F1E                     l6832:	
  6841                           	line	702
  6842  0F1E  2F36               	goto	l11353
  6843                           	line	805
  6844                           	
  6845  0F1F                     l6834:	
  6846                           	line	816
  6847  0F1F  2FE6               	goto	l11393
  6848                           	line	825
  6849                           	
  6850  0F20                     l11349:	
  6851  0F20  2F36               	goto	l11353
  6852                           	line	638
  6853                           	
  6854  0F21                     l6828:	
  6855                           	
  6856  0F21                     l11351:	
  6857  0F21  3001               	movlw	01h
  6858  0F22  07B4               	addwf	(sprintf@f),f
  6859  0F23  30FF               	movlw	-01h
  6860  0F24  0734               	addwf	(sprintf@f),w
  6861  0F25  0084               	movwf	fsr0
  6862  0F26  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6863  0F2B  00C4               	movwf	(sprintf@c)
  6864                           	; Switch size 1, requested type "space"
  6865                           ; Number of cases is 3, Range of values is 0 to 105
  6866                           ; switch strategies available:
  6867                           ; Name         Instructions Cycles
  6868                           ; simple_byte           10     6 (average)
  6869                           ; jumptable            260     6 (fixed)
  6870                           ; rangetable           110     6 (fixed)
  6871                           ; spacedrange          218     9 (fixed)
  6872                           ; locatedrange         106     3 (fixed)
  6873                           ;	Chosen strategy is simple_byte
  6874                           
  6875                           	opt asmopt_off
  6876  0F2C  3A00               	xorlw	0^0	; case 0
  6877  0F2D  1903               	skipnz
  6878  0F2E  2FFA               	goto	l11395
  6879  0F2F  3A64               	xorlw	100^0	; case 100
  6880  0F30  1903               	skipnz
  6881  0F31  2F36               	goto	l11353
  6882  0F32  3A0D               	xorlw	105^100	; case 105
  6883  0F33  1903               	skipnz
  6884  0F34  2F36               	goto	l11353
  6885  0F35  2FE6               	goto	l11393
  6886                           	opt asmopt_on
  6887                           
  6888                           	line	825
  6889                           	
  6890  0F36                     l6833:	
  6891                           	line	1254
  6892                           	
  6893  0F36                     l11353:	
  6894  0F36  083C               	movf	(sprintf@ap),w
  6895  0F37  0084               	movwf	fsr0
  6896  0F38  1383               	bcf	status, 7	;select IRP bank0
  6897  0F39  0800               	movf	indf,w
  6898  0F3A  00BF               	movwf	(sprintf@_val)
  6899  0F3B  0A84               	incf	fsr0,f
  6900  0F3C  0800               	movf	indf,w
  6901  0F3D  00C0               	movwf	(sprintf@_val+1)
  6902                           	
  6903  0F3E                     l11355:	
  6904  0F3E  3002               	movlw	(02h)
  6905  0F3F  00B9               	movwf	(??_sprintf+0)+0
  6906  0F40  0839               	movf	(??_sprintf+0)+0,w
  6907  0F41  07BC               	addwf	(sprintf@ap),f
  6908                           	line	1256
  6909                           	
  6910  0F42                     l11357:	
  6911  0F42  1FC0               	btfss	(sprintf@_val+1),7
  6912  0F43  2F45               	goto	u5181
  6913  0F44  2F46               	goto	u5180
  6914  0F45                     u5181:
  6915  0F45  2F50               	goto	l11363
  6916  0F46                     u5180:
  6917                           	line	1257
  6918                           	
  6919  0F46                     l11359:	
  6920  0F46  3003               	movlw	(03h)
  6921  0F47  00B9               	movwf	(??_sprintf+0)+0
  6922  0F48  0839               	movf	(??_sprintf+0)+0,w
  6923  0F49  04BD               	iorwf	(sprintf@flag),f
  6924                           	line	1258
  6925                           	
  6926  0F4A                     l11361:	
  6927  0F4A  09BF               	comf	(sprintf@_val),f
  6928  0F4B  09C0               	comf	(sprintf@_val+1),f
  6929  0F4C  0ABF               	incf	(sprintf@_val),f
  6930  0F4D  1903               	skipnz
  6931  0F4E  0AC0               	incf	(sprintf@_val+1),f
  6932  0F4F  2F50               	goto	l11363
  6933                           	line	1259
  6934                           	
  6935  0F50                     l6835:	
  6936                           	line	1300
  6937                           	
  6938  0F50                     l11363:	
  6939  0F50  01C4               	clrf	(sprintf@c)
  6940  0F51  1403               	bsf	status,0
  6941  0F52  0DC4               	rlf	(sprintf@c),f
  6942                           	
  6943  0F53                     l11365:	
  6944  0F53  0844               	movf	(sprintf@c),w
  6945  0F54  3A05               	xorlw	05h
  6946  0F55  1D03               	skipz
  6947  0F56  2F58               	goto	u5191
  6948  0F57  2F59               	goto	u5190
  6949  0F58                     u5191:
  6950  0F58  2F5B               	goto	l11369
  6951  0F59                     u5190:
  6952  0F59  2F83               	goto	l11377
  6953                           	
  6954  0F5A                     l11367:	
  6955  0F5A  2F83               	goto	l11377
  6956                           	line	1301
  6957                           	
  6958  0F5B                     l6836:	
  6959                           	
  6960  0F5B                     l11369:	
  6961  0F5B  0844               	movf	(sprintf@c),w
  6962  0F5C  00B9               	movwf	(??_sprintf+0)+0
  6963  0F5D  0739               	addwf	(??_sprintf+0)+0,w
  6964  0F5E  3E01               	addlw	low((_dpowers-__stringbase))
  6965  0F5F  0084               	movwf	fsr0
  6966  0F60  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6967  0F65  00BA               	movwf	(??_sprintf+1)+0
  6968  0F66  120A  158A  200A   	fcall	stringdir
              120A  158A         
  6969  0F6B  00BB               	movwf	(??_sprintf+1)+0+1
  6970  0F6C  083B               	movf	1+(??_sprintf+1)+0,w
  6971  0F6D  0240               	subwf	(sprintf@_val+1),w
  6972  0F6E  1D03               	skipz
  6973  0F6F  2F72               	goto	u5205
  6974  0F70  083A               	movf	0+(??_sprintf+1)+0,w
  6975  0F71  023F               	subwf	(sprintf@_val),w
  6976  0F72                     u5205:
  6977  0F72  1803               	skipnc
  6978  0F73  2F75               	goto	u5201
  6979  0F74  2F76               	goto	u5200
  6980  0F75                     u5201:
  6981  0F75  2F78               	goto	l11373
  6982  0F76                     u5200:
  6983  0F76  2F83               	goto	l11377
  6984                           	line	1302
  6985                           	
  6986  0F77                     l11371:	
  6987  0F77  2F83               	goto	l11377
  6988                           	
  6989  0F78                     l6838:	
  6990                           	line	1300
  6991                           	
  6992  0F78                     l11373:	
  6993  0F78  3001               	movlw	(01h)
  6994  0F79  00B9               	movwf	(??_sprintf+0)+0
  6995  0F7A  0839               	movf	(??_sprintf+0)+0,w
  6996  0F7B  07C4               	addwf	(sprintf@c),f
  6997                           	
  6998  0F7C                     l11375:	
  6999  0F7C  0844               	movf	(sprintf@c),w
  7000  0F7D  3A05               	xorlw	05h
  7001  0F7E  1D03               	skipz
  7002  0F7F  2F81               	goto	u5211
  7003  0F80  2F82               	goto	u5210
  7004  0F81                     u5211:
  7005  0F81  2F5B               	goto	l11369
  7006  0F82                     u5210:
  7007  0F82  2F83               	goto	l11377
  7008                           	
  7009  0F83                     l6837:	
  7010                           	line	1433
  7011                           	
  7012  0F83                     l11377:	
  7013  0F83  083D               	movf	(sprintf@flag),w
  7014  0F84  3903               	andlw	03h
  7015  0F85  1903               	btfsc	status,2
  7016  0F86  2F88               	goto	u5221
  7017  0F87  2F89               	goto	u5220
  7018  0F88                     u5221:
  7019  0F88  2F95               	goto	l11383
  7020  0F89                     u5220:
  7021                           	line	1434
  7022                           	
  7023  0F89                     l11379:	
  7024  0F89  302D               	movlw	(02Dh)
  7025  0F8A  00B9               	movwf	(??_sprintf+0)+0
  7026  0F8B  0843               	movf	(sprintf@sp),w
  7027  0F8C  0084               	movwf	fsr0
  7028  0F8D  0839               	movf	(??_sprintf+0)+0,w
  7029  0F8E  1383               	bcf	status, 7	;select IRP bank0
  7030  0F8F  0080               	movwf	indf
  7031                           	
  7032  0F90                     l11381:	
  7033  0F90  3001               	movlw	(01h)
  7034  0F91  00B9               	movwf	(??_sprintf+0)+0
  7035  0F92  0839               	movf	(??_sprintf+0)+0,w
  7036  0F93  07C3               	addwf	(sprintf@sp),f
  7037  0F94  2F95               	goto	l11383
  7038                           	
  7039  0F95                     l6839:	
  7040                           	line	1467
  7041                           	
  7042  0F95                     l11383:	
  7043  0F95  0844               	movf	(sprintf@c),w
  7044  0F96  00B9               	movwf	(??_sprintf+0)+0
  7045  0F97  0839               	movf	(??_sprintf+0)+0,w
  7046  0F98  00BE               	movwf	(sprintf@prec)
  7047                           	line	1469
  7048  0F99  2FDA               	goto	l11391
  7049                           	
  7050  0F9A                     l6841:	
  7051                           	line	1484
  7052                           	
  7053  0F9A                     l11385:	
  7054  0F9A  300A               	movlw	low(0Ah)
  7055  0F9B  00AE               	movwf	(?___lwmod)
  7056  0F9C  3000               	movlw	high(0Ah)
  7057  0F9D  00AF               	movwf	((?___lwmod))+1
  7058  0F9E  083E               	movf	(sprintf@prec),w
  7059  0F9F  00B9               	movwf	(??_sprintf+0)+0
  7060  0FA0  0739               	addwf	(??_sprintf+0)+0,w
  7061  0FA1  3E01               	addlw	low((_dpowers-__stringbase))
  7062  0FA2  0084               	movwf	fsr0
  7063  0FA3  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7064  0FA8  00A6               	movwf	(?___lwdiv)
  7065  0FA9  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7066  0FAE  00A7               	movwf	(?___lwdiv+1)
  7067  0FAF  0840               	movf	(sprintf@_val+1),w
  7068  0FB0  01A9               	clrf	1+(?___lwdiv)+02h
  7069  0FB1  07A9               	addwf	1+(?___lwdiv)+02h
  7070  0FB2  083F               	movf	(sprintf@_val),w
  7071  0FB3  01A8               	clrf	0+(?___lwdiv)+02h
  7072  0FB4  07A8               	addwf	0+(?___lwdiv)+02h
  7073                           
  7074  0FB5  160A  118A  26BA   	fcall	___lwdiv
              120A  158A         
  7075  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  7076  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  7077  0FBC  0827               	movf	(1+(?___lwdiv)),w
  7078  0FBD  01B1               	clrf	1+(?___lwmod)+02h
  7079  0FBE  07B1               	addwf	1+(?___lwmod)+02h
  7080  0FBF  0826               	movf	(0+(?___lwdiv)),w
  7081  0FC0  01B0               	clrf	0+(?___lwmod)+02h
  7082  0FC1  07B0               	addwf	0+(?___lwmod)+02h
  7083                           
  7084  0FC2  160A  118A  25E7   	fcall	___lwmod
              120A  158A         
  7085  0FC7  1283               	bcf	status, 5	;RP0=0, select bank0
  7086  0FC8  1303               	bcf	status, 6	;RP1=0, select bank0
  7087  0FC9  082E               	movf	(0+(?___lwmod)),w
  7088  0FCA  3E30               	addlw	030h
  7089  0FCB  00BA               	movwf	(??_sprintf+1)+0
  7090  0FCC  083A               	movf	(??_sprintf+1)+0,w
  7091  0FCD  00C4               	movwf	(sprintf@c)
  7092                           	line	1516
  7093                           	
  7094  0FCE                     l11387:	
  7095  0FCE  0844               	movf	(sprintf@c),w
  7096  0FCF  00B9               	movwf	(??_sprintf+0)+0
  7097  0FD0  0843               	movf	(sprintf@sp),w
  7098  0FD1  0084               	movwf	fsr0
  7099  0FD2  0839               	movf	(??_sprintf+0)+0,w
  7100  0FD3  1383               	bcf	status, 7	;select IRP bank0
  7101  0FD4  0080               	movwf	indf
  7102                           	
  7103  0FD5                     l11389:	
  7104  0FD5  3001               	movlw	(01h)
  7105  0FD6  00B9               	movwf	(??_sprintf+0)+0
  7106  0FD7  0839               	movf	(??_sprintf+0)+0,w
  7107  0FD8  07C3               	addwf	(sprintf@sp),f
  7108  0FD9  2FDA               	goto	l11391
  7109                           	line	1517
  7110                           	
  7111  0FDA                     l6840:	
  7112                           	line	1469
  7113                           	
  7114  0FDA                     l11391:	
  7115  0FDA  30FF               	movlw	(-1)
  7116  0FDB  00B9               	movwf	(??_sprintf+0)+0
  7117  0FDC  0839               	movf	(??_sprintf+0)+0,w
  7118  0FDD  07BE               	addwf	(sprintf@prec),f
  7119  0FDE  083E               	movf	((sprintf@prec)),w
  7120  0FDF  3AFF               	xorlw	-1
  7121  0FE0  1D03               	skipz
  7122  0FE1  2FE3               	goto	u5231
  7123  0FE2  2FE4               	goto	u5230
  7124  0FE3                     u5231:
  7125  0FE3  2F9A               	goto	l11385
  7126  0FE4                     u5230:
  7127  0FE4  2FE6               	goto	l11393
  7128                           	
  7129  0FE5                     l6842:	
  7130  0FE5  2FE6               	goto	l11393
  7131                           	line	1525
  7132                           	
  7133  0FE6                     l6825:	
  7134                           	line	540
  7135                           	
  7136  0FE6                     l11393:	
  7137  0FE6  3001               	movlw	01h
  7138  0FE7  07B4               	addwf	(sprintf@f),f
  7139  0FE8  30FF               	movlw	-01h
  7140  0FE9  0734               	addwf	(sprintf@f),w
  7141  0FEA  0084               	movwf	fsr0
  7142  0FEB  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7143  0FF0  00B9               	movwf	(??_sprintf+0)+0
  7144  0FF1  0839               	movf	(??_sprintf+0)+0,w
  7145  0FF2  00C4               	movwf	(sprintf@c)
  7146  0FF3  08C4               	movf	((sprintf@c)),f
  7147  0FF4  1D03               	skipz
  7148  0FF5  2FF7               	goto	u5241
  7149  0FF6  2FF8               	goto	u5240
  7150  0FF7                     u5241:
  7151  0FF7  2F08               	goto	l11343
  7152  0FF8                     u5240:
  7153  0FF8  2FFA               	goto	l11395
  7154                           	
  7155  0FF9                     l6843:	
  7156  0FF9  2FFA               	goto	l11395
  7157                           	line	1527
  7158                           	
  7159  0FFA                     l6830:	
  7160                           	line	1530
  7161                           	
  7162  0FFA                     l11395:	
  7163  0FFA  0843               	movf	(sprintf@sp),w
  7164  0FFB  0084               	movwf	fsr0
  7165  0FFC  1383               	bcf	status, 7	;select IRP bank0
  7166  0FFD  0180               	clrf	indf
  7167  0FFE  2FFF               	goto	l6844
  7168                           	line	1532
  7169                           	
  7170  0FFF                     l11397:	
  7171                           	line	1533
  7172                           ;	Return value of _sprintf is never used
  7173                           	
  7174  0FFF                     l6844:	
  7175  0FFF  0008               	return
  7176                           	opt stack 0
  7177                           GLOBAL	__end_of_sprintf
  7178  1000                     	__end_of_sprintf:
  7179 ;; =============== function _sprintf ends ============
  7180                           
  7181                           	signat	_sprintf,4698
  7182                           	global	_ADCconvert
  7183                           psect	text1086,local,class=CODE,delta=2
  7184                           global __ptext1086
  7185  02CD                     __ptext1086:
  7186                           
  7187 ;; *************** function _ADCconvert *****************
  7188 ;; Defined at:
  7189 ;;		line 33 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\infrared.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;		None
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;		None               void
  7196 ;; Registers used:
  7197 ;;		wreg, status,2, status,0, pclath, cstack
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7203 ;;      Params:         0       0       0       0       0
  7204 ;;      Locals:         0       0       0       0       0
  7205 ;;      Temps:          0       2       0       0       0
  7206 ;;      Totals:         0       2       0       0       0
  7207 ;;Total ram usage:        2 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    4
  7210 ;; This function calls:
  7211 ;;		___wmul
  7212 ;;		___lwdiv
  7213 ;; This function is called by:
  7214 ;;		_readAvgDistance
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           psect	text1086
  7218                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\infrared.c"
  7219                           	line	33
  7220                           	global	__size_of_ADCconvert
  7221  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  7222                           	
  7223  02CD                     _ADCconvert:	
  7224                           	opt	stack 1
  7225                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  7226                           	line	39
  7227                           	
  7228  02CD                     l11299:	
  7229                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  7230  02CD  3000               	movlw	high(0D5h)
  7231  02CE  1283               	bcf	status, 5	;RP0=0, select bank0
  7232  02CF  1303               	bcf	status, 6	;RP1=0, select bank0
  7233  02D0  026B               	subwf	(_adcVal+1),w	;volatile
  7234  02D1  30D5               	movlw	low(0D5h)
  7235  02D2  1903               	skipnz
  7236  02D3  026A               	subwf	(_adcVal),w	;volatile
  7237  02D4  1C03               	skipc
  7238  02D5  2AD7               	goto	u5031
  7239  02D6  2AD8               	goto	u5030
  7240  02D7                     u5031:
  7241  02D7  2B1B               	goto	l11305
  7242  02D8                     u5030:
  7243                           	
  7244  02D8                     l11301:	
  7245  02D8  3000               	movlw	high(0EAh)
  7246  02D9  026B               	subwf	(_adcVal+1),w	;volatile
  7247  02DA  30EA               	movlw	low(0EAh)
  7248  02DB  1903               	skipnz
  7249  02DC  026A               	subwf	(_adcVal),w	;volatile
  7250  02DD  1803               	skipnc
  7251  02DE  2AE0               	goto	u5041
  7252  02DF  2AE1               	goto	u5040
  7253  02E0                     u5041:
  7254  02E0  2B1B               	goto	l11305
  7255  02E1                     u5040:
  7256                           	line	41
  7257                           	
  7258  02E1                     l11303:	
  7259                           ;infrared.c: 40: {
  7260                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  7261  02E1  3015               	movlw	low(015h)
  7262  02E2  00A6               	movwf	(?___lwdiv)
  7263  02E3  3000               	movlw	high(015h)
  7264  02E4  00A7               	movwf	((?___lwdiv))+1
  7265  02E5  096A               	comf	(_adcVal),w	;volatile
  7266  02E6  00AE               	movwf	(??_ADCconvert+0)+0
  7267  02E7  096B               	comf	(_adcVal+1),w	;volatile
  7268  02E8  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7269  02E9  0AAE               	incf	(??_ADCconvert+0)+0,f
  7270  02EA  1903               	skipnz
  7271  02EB  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7272  02EC  082E               	movf	0+(??_ADCconvert+0)+0,w
  7273  02ED  3EEA               	addlw	low(0EAh)
  7274  02EE  00A0               	movwf	(?___wmul)
  7275  02EF  082F               	movf	1+(??_ADCconvert+0)+0,w
  7276  02F0  1803               	skipnc
  7277  02F1  3E01               	addlw	1
  7278  02F2  3E00               	addlw	high(0EAh)
  7279  02F3  00A1               	movwf	1+(?___wmul)
  7280  02F4  3005               	movlw	low(05h)
  7281  02F5  00A2               	movwf	0+(?___wmul)+02h
  7282  02F6  3000               	movlw	high(05h)
  7283  02F7  00A3               	movwf	(0+(?___wmul)+02h)+1
  7284  02F8  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7285  02FD  1283               	bcf	status, 5	;RP0=0, select bank0
  7286  02FE  1303               	bcf	status, 6	;RP1=0, select bank0
  7287  02FF  0821               	movf	(1+(?___wmul)),w
  7288  0300  01A9               	clrf	1+(?___lwdiv)+02h
  7289  0301  07A9               	addwf	1+(?___lwdiv)+02h
  7290  0302  0820               	movf	(0+(?___wmul)),w
  7291  0303  01A8               	clrf	0+(?___lwdiv)+02h
  7292  0304  07A8               	addwf	0+(?___lwdiv)+02h
  7293                           
  7294  0305  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7295  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  7296  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  7297  030C  0826               	movf	(0+(?___lwdiv)),w
  7298  030D  3E0F               	addlw	low(0Fh)
  7299  030E  1683               	bsf	status, 5	;RP0=1, select bank1
  7300  030F  1303               	bcf	status, 6	;RP1=0, select bank1
  7301  0310  00BA               	movwf	(_distance)^080h	;volatile
  7302  0311  1283               	bcf	status, 5	;RP0=0, select bank0
  7303  0312  1303               	bcf	status, 6	;RP1=0, select bank0
  7304  0313  0827               	movf	(1+(?___lwdiv)),w
  7305  0314  1803               	skipnc
  7306  0315  3E01               	addlw	1
  7307  0316  3E00               	addlw	high(0Fh)
  7308  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  7309  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  7310  0319  00BB               	movwf	1+(_distance)^080h	;volatile
  7311                           	line	42
  7312                           ;infrared.c: 42: }
  7313  031A  2CEF               	goto	l3042
  7314                           	line	43
  7315                           	
  7316  031B                     l3029:	
  7317                           	
  7318  031B                     l11305:	
  7319                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  7320  031B  3000               	movlw	high(0AAh)
  7321  031C  1283               	bcf	status, 5	;RP0=0, select bank0
  7322  031D  026B               	subwf	(_adcVal+1),w	;volatile
  7323  031E  30AA               	movlw	low(0AAh)
  7324  031F  1903               	skipnz
  7325  0320  026A               	subwf	(_adcVal),w	;volatile
  7326  0321  1C03               	skipc
  7327  0322  2B24               	goto	u5051
  7328  0323  2B25               	goto	u5050
  7329  0324                     u5051:
  7330  0324  2B68               	goto	l11311
  7331  0325                     u5050:
  7332                           	
  7333  0325                     l11307:	
  7334  0325  3000               	movlw	high(0D5h)
  7335  0326  026B               	subwf	(_adcVal+1),w	;volatile
  7336  0327  30D5               	movlw	low(0D5h)
  7337  0328  1903               	skipnz
  7338  0329  026A               	subwf	(_adcVal),w	;volatile
  7339  032A  1803               	skipnc
  7340  032B  2B2D               	goto	u5061
  7341  032C  2B2E               	goto	u5060
  7342  032D                     u5061:
  7343  032D  2B68               	goto	l11311
  7344  032E                     u5060:
  7345                           	line	45
  7346                           	
  7347  032E                     l11309:	
  7348                           ;infrared.c: 44: {
  7349                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  7350  032E  302B               	movlw	low(02Bh)
  7351  032F  00A6               	movwf	(?___lwdiv)
  7352  0330  3000               	movlw	high(02Bh)
  7353  0331  00A7               	movwf	((?___lwdiv))+1
  7354  0332  096A               	comf	(_adcVal),w	;volatile
  7355  0333  00AE               	movwf	(??_ADCconvert+0)+0
  7356  0334  096B               	comf	(_adcVal+1),w	;volatile
  7357  0335  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7358  0336  0AAE               	incf	(??_ADCconvert+0)+0,f
  7359  0337  1903               	skipnz
  7360  0338  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7361  0339  082E               	movf	0+(??_ADCconvert+0)+0,w
  7362  033A  3ED5               	addlw	low(0D5h)
  7363  033B  00A0               	movwf	(?___wmul)
  7364  033C  082F               	movf	1+(??_ADCconvert+0)+0,w
  7365  033D  1803               	skipnc
  7366  033E  3E01               	addlw	1
  7367  033F  3E00               	addlw	high(0D5h)
  7368  0340  00A1               	movwf	1+(?___wmul)
  7369  0341  300A               	movlw	low(0Ah)
  7370  0342  00A2               	movwf	0+(?___wmul)+02h
  7371  0343  3000               	movlw	high(0Ah)
  7372  0344  00A3               	movwf	(0+(?___wmul)+02h)+1
  7373  0345  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7374  034A  1283               	bcf	status, 5	;RP0=0, select bank0
  7375  034B  1303               	bcf	status, 6	;RP1=0, select bank0
  7376  034C  0821               	movf	(1+(?___wmul)),w
  7377  034D  01A9               	clrf	1+(?___lwdiv)+02h
  7378  034E  07A9               	addwf	1+(?___lwdiv)+02h
  7379  034F  0820               	movf	(0+(?___wmul)),w
  7380  0350  01A8               	clrf	0+(?___lwdiv)+02h
  7381  0351  07A8               	addwf	0+(?___lwdiv)+02h
  7382                           
  7383  0352  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7384  0357  1283               	bcf	status, 5	;RP0=0, select bank0
  7385  0358  1303               	bcf	status, 6	;RP1=0, select bank0
  7386  0359  0826               	movf	(0+(?___lwdiv)),w
  7387  035A  3E14               	addlw	low(014h)
  7388  035B  1683               	bsf	status, 5	;RP0=1, select bank1
  7389  035C  1303               	bcf	status, 6	;RP1=0, select bank1
  7390  035D  00BA               	movwf	(_distance)^080h	;volatile
  7391  035E  1283               	bcf	status, 5	;RP0=0, select bank0
  7392  035F  1303               	bcf	status, 6	;RP1=0, select bank0
  7393  0360  0827               	movf	(1+(?___lwdiv)),w
  7394  0361  1803               	skipnc
  7395  0362  3E01               	addlw	1
  7396  0363  3E00               	addlw	high(014h)
  7397  0364  1683               	bsf	status, 5	;RP0=1, select bank1
  7398  0365  1303               	bcf	status, 6	;RP1=0, select bank1
  7399  0366  00BB               	movwf	1+(_distance)^080h	;volatile
  7400                           	line	46
  7401                           ;infrared.c: 46: }
  7402  0367  2CEF               	goto	l3042
  7403                           	line	47
  7404                           	
  7405  0368                     l3031:	
  7406                           	
  7407  0368                     l11311:	
  7408                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  7409  0368  3000               	movlw	high(080h)
  7410  0369  1283               	bcf	status, 5	;RP0=0, select bank0
  7411  036A  026B               	subwf	(_adcVal+1),w	;volatile
  7412  036B  3080               	movlw	low(080h)
  7413  036C  1903               	skipnz
  7414  036D  026A               	subwf	(_adcVal),w	;volatile
  7415  036E  1C03               	skipc
  7416  036F  2B71               	goto	u5071
  7417  0370  2B72               	goto	u5070
  7418  0371                     u5071:
  7419  0371  2BB5               	goto	l11317
  7420  0372                     u5070:
  7421                           	
  7422  0372                     l11313:	
  7423  0372  3000               	movlw	high(0AAh)
  7424  0373  026B               	subwf	(_adcVal+1),w	;volatile
  7425  0374  30AA               	movlw	low(0AAh)
  7426  0375  1903               	skipnz
  7427  0376  026A               	subwf	(_adcVal),w	;volatile
  7428  0377  1803               	skipnc
  7429  0378  2B7A               	goto	u5081
  7430  0379  2B7B               	goto	u5080
  7431  037A                     u5081:
  7432  037A  2BB5               	goto	l11317
  7433  037B                     u5080:
  7434                           	line	49
  7435                           	
  7436  037B                     l11315:	
  7437                           ;infrared.c: 48: {
  7438                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  7439  037B  302A               	movlw	low(02Ah)
  7440  037C  00A6               	movwf	(?___lwdiv)
  7441  037D  3000               	movlw	high(02Ah)
  7442  037E  00A7               	movwf	((?___lwdiv))+1
  7443  037F  096A               	comf	(_adcVal),w	;volatile
  7444  0380  00AE               	movwf	(??_ADCconvert+0)+0
  7445  0381  096B               	comf	(_adcVal+1),w	;volatile
  7446  0382  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7447  0383  0AAE               	incf	(??_ADCconvert+0)+0,f
  7448  0384  1903               	skipnz
  7449  0385  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7450  0386  082E               	movf	0+(??_ADCconvert+0)+0,w
  7451  0387  3EAA               	addlw	low(0AAh)
  7452  0388  00A0               	movwf	(?___wmul)
  7453  0389  082F               	movf	1+(??_ADCconvert+0)+0,w
  7454  038A  1803               	skipnc
  7455  038B  3E01               	addlw	1
  7456  038C  3E00               	addlw	high(0AAh)
  7457  038D  00A1               	movwf	1+(?___wmul)
  7458  038E  300A               	movlw	low(0Ah)
  7459  038F  00A2               	movwf	0+(?___wmul)+02h
  7460  0390  3000               	movlw	high(0Ah)
  7461  0391  00A3               	movwf	(0+(?___wmul)+02h)+1
  7462  0392  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7463  0397  1283               	bcf	status, 5	;RP0=0, select bank0
  7464  0398  1303               	bcf	status, 6	;RP1=0, select bank0
  7465  0399  0821               	movf	(1+(?___wmul)),w
  7466  039A  01A9               	clrf	1+(?___lwdiv)+02h
  7467  039B  07A9               	addwf	1+(?___lwdiv)+02h
  7468  039C  0820               	movf	(0+(?___wmul)),w
  7469  039D  01A8               	clrf	0+(?___lwdiv)+02h
  7470  039E  07A8               	addwf	0+(?___lwdiv)+02h
  7471                           
  7472  039F  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7473  03A4  1283               	bcf	status, 5	;RP0=0, select bank0
  7474  03A5  1303               	bcf	status, 6	;RP1=0, select bank0
  7475  03A6  0826               	movf	(0+(?___lwdiv)),w
  7476  03A7  3E1E               	addlw	low(01Eh)
  7477  03A8  1683               	bsf	status, 5	;RP0=1, select bank1
  7478  03A9  1303               	bcf	status, 6	;RP1=0, select bank1
  7479  03AA  00BA               	movwf	(_distance)^080h	;volatile
  7480  03AB  1283               	bcf	status, 5	;RP0=0, select bank0
  7481  03AC  1303               	bcf	status, 6	;RP1=0, select bank0
  7482  03AD  0827               	movf	(1+(?___lwdiv)),w
  7483  03AE  1803               	skipnc
  7484  03AF  3E01               	addlw	1
  7485  03B0  3E00               	addlw	high(01Eh)
  7486  03B1  1683               	bsf	status, 5	;RP0=1, select bank1
  7487  03B2  1303               	bcf	status, 6	;RP1=0, select bank1
  7488  03B3  00BB               	movwf	1+(_distance)^080h	;volatile
  7489                           	line	50
  7490                           ;infrared.c: 50: }
  7491  03B4  2CEF               	goto	l3042
  7492                           	line	51
  7493                           	
  7494  03B5                     l3033:	
  7495                           	
  7496  03B5                     l11317:	
  7497                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  7498  03B5  3000               	movlw	high(06Bh)
  7499  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  7500  03B7  026B               	subwf	(_adcVal+1),w	;volatile
  7501  03B8  306B               	movlw	low(06Bh)
  7502  03B9  1903               	skipnz
  7503  03BA  026A               	subwf	(_adcVal),w	;volatile
  7504  03BB  1C03               	skipc
  7505  03BC  2BBE               	goto	u5091
  7506  03BD  2BBF               	goto	u5090
  7507  03BE                     u5091:
  7508  03BE  2C02               	goto	l11323
  7509  03BF                     u5090:
  7510                           	
  7511  03BF                     l11319:	
  7512  03BF  3000               	movlw	high(080h)
  7513  03C0  026B               	subwf	(_adcVal+1),w	;volatile
  7514  03C1  3080               	movlw	low(080h)
  7515  03C2  1903               	skipnz
  7516  03C3  026A               	subwf	(_adcVal),w	;volatile
  7517  03C4  1803               	skipnc
  7518  03C5  2BC7               	goto	u5101
  7519  03C6  2BC8               	goto	u5100
  7520  03C7                     u5101:
  7521  03C7  2C02               	goto	l11323
  7522  03C8                     u5100:
  7523                           	line	53
  7524                           	
  7525  03C8                     l11321:	
  7526                           ;infrared.c: 52: {
  7527                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  7528  03C8  3015               	movlw	low(015h)
  7529  03C9  00A6               	movwf	(?___lwdiv)
  7530  03CA  3000               	movlw	high(015h)
  7531  03CB  00A7               	movwf	((?___lwdiv))+1
  7532  03CC  096A               	comf	(_adcVal),w	;volatile
  7533  03CD  00AE               	movwf	(??_ADCconvert+0)+0
  7534  03CE  096B               	comf	(_adcVal+1),w	;volatile
  7535  03CF  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7536  03D0  0AAE               	incf	(??_ADCconvert+0)+0,f
  7537  03D1  1903               	skipnz
  7538  03D2  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7539  03D3  082E               	movf	0+(??_ADCconvert+0)+0,w
  7540  03D4  3E80               	addlw	low(080h)
  7541  03D5  00A0               	movwf	(?___wmul)
  7542  03D6  082F               	movf	1+(??_ADCconvert+0)+0,w
  7543  03D7  1803               	skipnc
  7544  03D8  3E01               	addlw	1
  7545  03D9  3E00               	addlw	high(080h)
  7546  03DA  00A1               	movwf	1+(?___wmul)
  7547  03DB  300A               	movlw	low(0Ah)
  7548  03DC  00A2               	movwf	0+(?___wmul)+02h
  7549  03DD  3000               	movlw	high(0Ah)
  7550  03DE  00A3               	movwf	(0+(?___wmul)+02h)+1
  7551  03DF  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7552  03E4  1283               	bcf	status, 5	;RP0=0, select bank0
  7553  03E5  1303               	bcf	status, 6	;RP1=0, select bank0
  7554  03E6  0821               	movf	(1+(?___wmul)),w
  7555  03E7  01A9               	clrf	1+(?___lwdiv)+02h
  7556  03E8  07A9               	addwf	1+(?___lwdiv)+02h
  7557  03E9  0820               	movf	(0+(?___wmul)),w
  7558  03EA  01A8               	clrf	0+(?___lwdiv)+02h
  7559  03EB  07A8               	addwf	0+(?___lwdiv)+02h
  7560                           
  7561  03EC  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7562  03F1  1283               	bcf	status, 5	;RP0=0, select bank0
  7563  03F2  1303               	bcf	status, 6	;RP1=0, select bank0
  7564  03F3  0826               	movf	(0+(?___lwdiv)),w
  7565  03F4  3E28               	addlw	low(028h)
  7566  03F5  1683               	bsf	status, 5	;RP0=1, select bank1
  7567  03F6  1303               	bcf	status, 6	;RP1=0, select bank1
  7568  03F7  00BA               	movwf	(_distance)^080h	;volatile
  7569  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  7570  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  7571  03FA  0827               	movf	(1+(?___lwdiv)),w
  7572  03FB  1803               	skipnc
  7573  03FC  3E01               	addlw	1
  7574  03FD  3E00               	addlw	high(028h)
  7575  03FE  1683               	bsf	status, 5	;RP0=1, select bank1
  7576  03FF  1303               	bcf	status, 6	;RP1=0, select bank1
  7577  0400  00BB               	movwf	1+(_distance)^080h	;volatile
  7578                           	line	54
  7579                           ;infrared.c: 54: }
  7580  0401  2CEF               	goto	l3042
  7581                           	line	55
  7582                           	
  7583  0402                     l3035:	
  7584                           	
  7585  0402                     l11323:	
  7586                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  7587  0402  3000               	movlw	high(04Dh)
  7588  0403  1283               	bcf	status, 5	;RP0=0, select bank0
  7589  0404  026B               	subwf	(_adcVal+1),w	;volatile
  7590  0405  304D               	movlw	low(04Dh)
  7591  0406  1903               	skipnz
  7592  0407  026A               	subwf	(_adcVal),w	;volatile
  7593  0408  1C03               	skipc
  7594  0409  2C0B               	goto	u5111
  7595  040A  2C0C               	goto	u5110
  7596  040B                     u5111:
  7597  040B  2C4F               	goto	l11329
  7598  040C                     u5110:
  7599                           	
  7600  040C                     l11325:	
  7601  040C  3000               	movlw	high(06Bh)
  7602  040D  026B               	subwf	(_adcVal+1),w	;volatile
  7603  040E  306B               	movlw	low(06Bh)
  7604  040F  1903               	skipnz
  7605  0410  026A               	subwf	(_adcVal),w	;volatile
  7606  0411  1803               	skipnc
  7607  0412  2C14               	goto	u5121
  7608  0413  2C15               	goto	u5120
  7609  0414                     u5121:
  7610  0414  2C4F               	goto	l11329
  7611  0415                     u5120:
  7612                           	line	57
  7613                           	
  7614  0415                     l11327:	
  7615                           ;infrared.c: 56: {
  7616                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  7617  0415  301E               	movlw	low(01Eh)
  7618  0416  00A6               	movwf	(?___lwdiv)
  7619  0417  3000               	movlw	high(01Eh)
  7620  0418  00A7               	movwf	((?___lwdiv))+1
  7621  0419  096A               	comf	(_adcVal),w	;volatile
  7622  041A  00AE               	movwf	(??_ADCconvert+0)+0
  7623  041B  096B               	comf	(_adcVal+1),w	;volatile
  7624  041C  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7625  041D  0AAE               	incf	(??_ADCconvert+0)+0,f
  7626  041E  1903               	skipnz
  7627  041F  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7628  0420  082E               	movf	0+(??_ADCconvert+0)+0,w
  7629  0421  3E6B               	addlw	low(06Bh)
  7630  0422  00A0               	movwf	(?___wmul)
  7631  0423  082F               	movf	1+(??_ADCconvert+0)+0,w
  7632  0424  1803               	skipnc
  7633  0425  3E01               	addlw	1
  7634  0426  3E00               	addlw	high(06Bh)
  7635  0427  00A1               	movwf	1+(?___wmul)
  7636  0428  300A               	movlw	low(0Ah)
  7637  0429  00A2               	movwf	0+(?___wmul)+02h
  7638  042A  3000               	movlw	high(0Ah)
  7639  042B  00A3               	movwf	(0+(?___wmul)+02h)+1
  7640  042C  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7641  0431  1283               	bcf	status, 5	;RP0=0, select bank0
  7642  0432  1303               	bcf	status, 6	;RP1=0, select bank0
  7643  0433  0821               	movf	(1+(?___wmul)),w
  7644  0434  01A9               	clrf	1+(?___lwdiv)+02h
  7645  0435  07A9               	addwf	1+(?___lwdiv)+02h
  7646  0436  0820               	movf	(0+(?___wmul)),w
  7647  0437  01A8               	clrf	0+(?___lwdiv)+02h
  7648  0438  07A8               	addwf	0+(?___lwdiv)+02h
  7649                           
  7650  0439  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7651  043E  1283               	bcf	status, 5	;RP0=0, select bank0
  7652  043F  1303               	bcf	status, 6	;RP1=0, select bank0
  7653  0440  0826               	movf	(0+(?___lwdiv)),w
  7654  0441  3E32               	addlw	low(032h)
  7655  0442  1683               	bsf	status, 5	;RP0=1, select bank1
  7656  0443  1303               	bcf	status, 6	;RP1=0, select bank1
  7657  0444  00BA               	movwf	(_distance)^080h	;volatile
  7658  0445  1283               	bcf	status, 5	;RP0=0, select bank0
  7659  0446  1303               	bcf	status, 6	;RP1=0, select bank0
  7660  0447  0827               	movf	(1+(?___lwdiv)),w
  7661  0448  1803               	skipnc
  7662  0449  3E01               	addlw	1
  7663  044A  3E00               	addlw	high(032h)
  7664  044B  1683               	bsf	status, 5	;RP0=1, select bank1
  7665  044C  1303               	bcf	status, 6	;RP1=0, select bank1
  7666  044D  00BB               	movwf	1+(_distance)^080h	;volatile
  7667                           	line	58
  7668                           ;infrared.c: 58: }
  7669  044E  2CEF               	goto	l3042
  7670                           	line	59
  7671                           	
  7672  044F                     l3037:	
  7673                           	
  7674  044F                     l11329:	
  7675                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  7676  044F  3000               	movlw	high(038h)
  7677  0450  1283               	bcf	status, 5	;RP0=0, select bank0
  7678  0451  026B               	subwf	(_adcVal+1),w	;volatile
  7679  0452  3038               	movlw	low(038h)
  7680  0453  1903               	skipnz
  7681  0454  026A               	subwf	(_adcVal),w	;volatile
  7682  0455  1C03               	skipc
  7683  0456  2C58               	goto	u5131
  7684  0457  2C59               	goto	u5130
  7685  0458                     u5131:
  7686  0458  2C9C               	goto	l11335
  7687  0459                     u5130:
  7688                           	
  7689  0459                     l11331:	
  7690  0459  3000               	movlw	high(04Dh)
  7691  045A  026B               	subwf	(_adcVal+1),w	;volatile
  7692  045B  304D               	movlw	low(04Dh)
  7693  045C  1903               	skipnz
  7694  045D  026A               	subwf	(_adcVal),w	;volatile
  7695  045E  1803               	skipnc
  7696  045F  2C61               	goto	u5141
  7697  0460  2C62               	goto	u5140
  7698  0461                     u5141:
  7699  0461  2C9C               	goto	l11335
  7700  0462                     u5140:
  7701                           	line	61
  7702                           	
  7703  0462                     l11333:	
  7704                           ;infrared.c: 60: {
  7705                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  7706  0462  3015               	movlw	low(015h)
  7707  0463  00A6               	movwf	(?___lwdiv)
  7708  0464  3000               	movlw	high(015h)
  7709  0465  00A7               	movwf	((?___lwdiv))+1
  7710  0466  096A               	comf	(_adcVal),w	;volatile
  7711  0467  00AE               	movwf	(??_ADCconvert+0)+0
  7712  0468  096B               	comf	(_adcVal+1),w	;volatile
  7713  0469  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7714  046A  0AAE               	incf	(??_ADCconvert+0)+0,f
  7715  046B  1903               	skipnz
  7716  046C  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7717  046D  082E               	movf	0+(??_ADCconvert+0)+0,w
  7718  046E  3E4D               	addlw	low(04Dh)
  7719  046F  00A0               	movwf	(?___wmul)
  7720  0470  082F               	movf	1+(??_ADCconvert+0)+0,w
  7721  0471  1803               	skipnc
  7722  0472  3E01               	addlw	1
  7723  0473  3E00               	addlw	high(04Dh)
  7724  0474  00A1               	movwf	1+(?___wmul)
  7725  0475  300A               	movlw	low(0Ah)
  7726  0476  00A2               	movwf	0+(?___wmul)+02h
  7727  0477  3000               	movlw	high(0Ah)
  7728  0478  00A3               	movwf	(0+(?___wmul)+02h)+1
  7729  0479  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7730  047E  1283               	bcf	status, 5	;RP0=0, select bank0
  7731  047F  1303               	bcf	status, 6	;RP1=0, select bank0
  7732  0480  0821               	movf	(1+(?___wmul)),w
  7733  0481  01A9               	clrf	1+(?___lwdiv)+02h
  7734  0482  07A9               	addwf	1+(?___lwdiv)+02h
  7735  0483  0820               	movf	(0+(?___wmul)),w
  7736  0484  01A8               	clrf	0+(?___lwdiv)+02h
  7737  0485  07A8               	addwf	0+(?___lwdiv)+02h
  7738                           
  7739  0486  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7740  048B  1283               	bcf	status, 5	;RP0=0, select bank0
  7741  048C  1303               	bcf	status, 6	;RP1=0, select bank0
  7742  048D  0826               	movf	(0+(?___lwdiv)),w
  7743  048E  3E3C               	addlw	low(03Ch)
  7744  048F  1683               	bsf	status, 5	;RP0=1, select bank1
  7745  0490  1303               	bcf	status, 6	;RP1=0, select bank1
  7746  0491  00BA               	movwf	(_distance)^080h	;volatile
  7747  0492  1283               	bcf	status, 5	;RP0=0, select bank0
  7748  0493  1303               	bcf	status, 6	;RP1=0, select bank0
  7749  0494  0827               	movf	(1+(?___lwdiv)),w
  7750  0495  1803               	skipnc
  7751  0496  3E01               	addlw	1
  7752  0497  3E00               	addlw	high(03Ch)
  7753  0498  1683               	bsf	status, 5	;RP0=1, select bank1
  7754  0499  1303               	bcf	status, 6	;RP1=0, select bank1
  7755  049A  00BB               	movwf	1+(_distance)^080h	;volatile
  7756                           	line	62
  7757                           ;infrared.c: 62: }
  7758  049B  2CEF               	goto	l3042
  7759                           	line	63
  7760                           	
  7761  049C                     l3039:	
  7762                           	
  7763  049C                     l11335:	
  7764                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  7765  049C  3000               	movlw	high(02Bh)
  7766  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  7767  049E  026B               	subwf	(_adcVal+1),w	;volatile
  7768  049F  302B               	movlw	low(02Bh)
  7769  04A0  1903               	skipnz
  7770  04A1  026A               	subwf	(_adcVal),w	;volatile
  7771  04A2  1C03               	skipc
  7772  04A3  2CA5               	goto	u5151
  7773  04A4  2CA6               	goto	u5150
  7774  04A5                     u5151:
  7775  04A5  2CEF               	goto	l3042
  7776  04A6                     u5150:
  7777                           	
  7778  04A6                     l11337:	
  7779  04A6  3000               	movlw	high(038h)
  7780  04A7  026B               	subwf	(_adcVal+1),w	;volatile
  7781  04A8  3038               	movlw	low(038h)
  7782  04A9  1903               	skipnz
  7783  04AA  026A               	subwf	(_adcVal),w	;volatile
  7784  04AB  1803               	skipnc
  7785  04AC  2CAE               	goto	u5161
  7786  04AD  2CAF               	goto	u5160
  7787  04AE                     u5161:
  7788  04AE  2CEF               	goto	l3042
  7789  04AF                     u5160:
  7790                           	line	65
  7791                           	
  7792  04AF                     l11339:	
  7793                           ;infrared.c: 64: {
  7794                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  7795  04AF  300D               	movlw	low(0Dh)
  7796  04B0  00A6               	movwf	(?___lwdiv)
  7797  04B1  3000               	movlw	high(0Dh)
  7798  04B2  00A7               	movwf	((?___lwdiv))+1
  7799  04B3  096A               	comf	(_adcVal),w	;volatile
  7800  04B4  00AE               	movwf	(??_ADCconvert+0)+0
  7801  04B5  096B               	comf	(_adcVal+1),w	;volatile
  7802  04B6  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7803  04B7  0AAE               	incf	(??_ADCconvert+0)+0,f
  7804  04B8  1903               	skipnz
  7805  04B9  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7806  04BA  082E               	movf	0+(??_ADCconvert+0)+0,w
  7807  04BB  3E38               	addlw	low(038h)
  7808  04BC  00A0               	movwf	(?___wmul)
  7809  04BD  082F               	movf	1+(??_ADCconvert+0)+0,w
  7810  04BE  1803               	skipnc
  7811  04BF  3E01               	addlw	1
  7812  04C0  3E00               	addlw	high(038h)
  7813  04C1  00A1               	movwf	1+(?___wmul)
  7814  04C2  300A               	movlw	low(0Ah)
  7815  04C3  00A2               	movwf	0+(?___wmul)+02h
  7816  04C4  3000               	movlw	high(0Ah)
  7817  04C5  00A3               	movwf	(0+(?___wmul)+02h)+1
  7818  04C6  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7819  04CB  1283               	bcf	status, 5	;RP0=0, select bank0
  7820  04CC  1303               	bcf	status, 6	;RP1=0, select bank0
  7821  04CD  0821               	movf	(1+(?___wmul)),w
  7822  04CE  01A9               	clrf	1+(?___lwdiv)+02h
  7823  04CF  07A9               	addwf	1+(?___lwdiv)+02h
  7824  04D0  0820               	movf	(0+(?___wmul)),w
  7825  04D1  01A8               	clrf	0+(?___lwdiv)+02h
  7826  04D2  07A8               	addwf	0+(?___lwdiv)+02h
  7827                           
  7828  04D3  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7829  04D8  1283               	bcf	status, 5	;RP0=0, select bank0
  7830  04D9  1303               	bcf	status, 6	;RP1=0, select bank0
  7831  04DA  0826               	movf	(0+(?___lwdiv)),w
  7832  04DB  3E46               	addlw	low(046h)
  7833  04DC  1683               	bsf	status, 5	;RP0=1, select bank1
  7834  04DD  1303               	bcf	status, 6	;RP1=0, select bank1
  7835  04DE  00BA               	movwf	(_distance)^080h	;volatile
  7836  04DF  1283               	bcf	status, 5	;RP0=0, select bank0
  7837  04E0  1303               	bcf	status, 6	;RP1=0, select bank0
  7838  04E1  0827               	movf	(1+(?___lwdiv)),w
  7839  04E2  1803               	skipnc
  7840  04E3  3E01               	addlw	1
  7841  04E4  3E00               	addlw	high(046h)
  7842  04E5  1683               	bsf	status, 5	;RP0=1, select bank1
  7843  04E6  1303               	bcf	status, 6	;RP1=0, select bank1
  7844  04E7  00BB               	movwf	1+(_distance)^080h	;volatile
  7845  04E8  2CEF               	goto	l3042
  7846                           	line	66
  7847                           	
  7848  04E9                     l3041:	
  7849  04E9  2CEF               	goto	l3042
  7850                           	line	67
  7851                           	
  7852  04EA                     l3040:	
  7853  04EA  2CEF               	goto	l3042
  7854                           	
  7855  04EB                     l3038:	
  7856  04EB  2CEF               	goto	l3042
  7857                           	
  7858  04EC                     l3036:	
  7859  04EC  2CEF               	goto	l3042
  7860                           	
  7861  04ED                     l3034:	
  7862  04ED  2CEF               	goto	l3042
  7863                           	
  7864  04EE                     l3032:	
  7865  04EE  2CEF               	goto	l3042
  7866                           	
  7867  04EF                     l3030:	
  7868                           	
  7869  04EF                     l3042:	
  7870  04EF  0008               	return
  7871                           	opt stack 0
  7872                           GLOBAL	__end_of_ADCconvert
  7873  04F0                     	__end_of_ADCconvert:
  7874 ;; =============== function _ADCconvert ends ============
  7875                           
  7876                           	signat	_ADCconvert,88
  7877                           	global	_rotate
  7878                           psect	text1087,local,class=CODE,delta=2
  7879                           global __ptext1087
  7880  170A                     __ptext1087:
  7881                           
  7882 ;; *************** function _rotate *****************
  7883 ;; Defined at:
  7884 ;;		line 48 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\steppermotor.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7887 ;;  direction       1    5[BANK0 ] unsigned char 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  i               2    8[BANK0 ] unsigned int 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;		None               void
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, pclath, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         0       3       0       0       0
  7900 ;;      Locals:         0       2       0       0       0
  7901 ;;      Temps:          0       2       0       0       0
  7902 ;;      Totals:         0       7       0       0       0
  7903 ;;Total ram usage:        7 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    4
  7906 ;; This function calls:
  7907 ;;		_spi_transfer
  7908 ;; This function is called by:
  7909 ;;		_scan360
  7910 ;;		_main
  7911 ;;		_calibrateIR
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           psect	text1087
  7915                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\steppermotor.c"
  7916                           	line	48
  7917                           	global	__size_of_rotate
  7918  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7919                           	
  7920  170A                     _rotate:	
  7921                           	opt	stack 3
  7922                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7923                           	line	50
  7924                           	
  7925  170A                     l11271:	
  7926                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  7927  170A  1283               	bcf	status, 5	;RP0=0, select bank0
  7928  170B  1303               	bcf	status, 6	;RP1=0, select bank0
  7929  170C  1407               	bsf	(56/8),(56)&7
  7930  170D  1487               	bsf	(57/8),(57)&7
  7931                           	line	51
  7932                           	
  7933  170E                     l11273:	
  7934                           ;steppermotor.c: 51: if (direction == 0)
  7935  170E  08A5               	movf	(rotate@direction),f
  7936  170F  1D03               	skipz
  7937  1710  2F12               	goto	u5011
  7938  1711  2F13               	goto	u5010
  7939  1712                     u5011:
  7940  1712  2F1A               	goto	l11277
  7941  1713                     u5010:
  7942                           	line	52
  7943                           	
  7944  1713                     l11275:	
  7945                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  7946  1713  300F               	movlw	(0Fh)
  7947  1714  160A  118A  22DB   	fcall	_spi_transfer
              160A  118A         
  7948  1719  2F21               	goto	l11279
  7949                           	line	53
  7950                           	
  7951  171A                     l3743:	
  7952                           	line	54
  7953                           	
  7954  171A                     l11277:	
  7955                           ;steppermotor.c: 53: else
  7956                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  7957  171A  300D               	movlw	(0Dh)
  7958  171B  160A  118A  22DB   	fcall	_spi_transfer
              160A  118A         
  7959  1720  2F21               	goto	l11279
  7960                           	
  7961  1721                     l3744:	
  7962                           	line	55
  7963                           	
  7964  1721                     l11279:	
  7965                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  7966  1721  1283               	bcf	status, 5	;RP0=0, select bank0
  7967  1722  1303               	bcf	status, 6	;RP1=0, select bank0
  7968  1723  1007               	bcf	(56/8),(56)&7
  7969                           	
  7970  1724                     l11281:	
  7971  1724  1087               	bcf	(57/8),(57)&7
  7972                           	line	56
  7973                           	
  7974  1725                     l11283:	
  7975                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  7976  1725  01A8               	clrf	(rotate@i)
  7977  1726  01A9               	clrf	(rotate@i+1)
  7978  1727  2F3E               	goto	l3745
  7979                           	line	57
  7980                           	
  7981  1728                     l3746:	
  7982                           	line	58
  7983                           ;steppermotor.c: 57: {
  7984                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  7985  1728  1507               	bsf	(58/8),(58)&7
  7986  1729  0000               	nop
  7987  172A  1283               	bcf	status, 5	;RP0=0, select bank0
  7988  172B  1303               	bcf	status, 6	;RP1=0, select bank0
  7989  172C  1107               	bcf	(58/8),(58)&7
  7990                           	line	59
  7991                           	
  7992  172D                     l11285:	
  7993                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  7994                           	opt asmopt_off
  7995  172D  3062               movlw	98
  7996  172E  00A7               movwf	((??_rotate+0)+0+1),f
  7997  172F  3065               	movlw	101
  7998  1730  00A6               movwf	((??_rotate+0)+0),f
  7999  1731                     u5817:
  8000  1731  0BA6               	decfsz	((??_rotate+0)+0),f
  8001  1732  2F31               	goto	u5817
  8002  1733  0BA7               	decfsz	((??_rotate+0)+0+1),f
  8003  1734  2F31               	goto	u5817
  8004  1735  2F36               	nop2
  8005                           opt asmopt_on
  8006                           
  8007                           	line	56
  8008  1736  3001               	movlw	low(01h)
  8009  1737  1283               	bcf	status, 5	;RP0=0, select bank0
  8010  1738  1303               	bcf	status, 6	;RP1=0, select bank0
  8011  1739  07A8               	addwf	(rotate@i),f
  8012  173A  1803               	skipnc
  8013  173B  0AA9               	incf	(rotate@i+1),f
  8014  173C  3000               	movlw	high(01h)
  8015  173D  07A9               	addwf	(rotate@i+1),f
  8016                           	
  8017  173E                     l3745:	
  8018  173E  0824               	movf	(rotate@numsteps+1),w
  8019  173F  0229               	subwf	(rotate@i+1),w
  8020  1740  1D03               	skipz
  8021  1741  2F44               	goto	u5025
  8022  1742  0823               	movf	(rotate@numsteps),w
  8023  1743  0228               	subwf	(rotate@i),w
  8024  1744                     u5025:
  8025  1744  1C03               	skipc
  8026  1745  2F47               	goto	u5021
  8027  1746  2F48               	goto	u5020
  8028  1747                     u5021:
  8029  1747  2F28               	goto	l3746
  8030  1748                     u5020:
  8031                           	
  8032  1748                     l3747:	
  8033                           	line	61
  8034                           ;steppermotor.c: 60: }
  8035                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  8036  1748  1407               	bsf	(56/8),(56)&7
  8037  1749  1487               	bsf	(57/8),(57)&7
  8038                           	line	62
  8039                           	
  8040  174A                     l11287:	
  8041                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  8042  174A  3000               	movlw	(0)
  8043  174B  160A  118A  22DB   	fcall	_spi_transfer
              160A  118A         
  8044                           	line	63
  8045                           	
  8046  1750                     l11289:	
  8047                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  8048  1750  1283               	bcf	status, 5	;RP0=0, select bank0
  8049  1751  1303               	bcf	status, 6	;RP1=0, select bank0
  8050  1752  1007               	bcf	(56/8),(56)&7
  8051                           	
  8052  1753                     l11291:	
  8053  1753  1087               	bcf	(57/8),(57)&7
  8054                           	line	64
  8055                           	
  8056  1754                     l11293:	
  8057                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  8058  1754  1507               	bsf	(58/8),(58)&7
  8059                           	
  8060  1755                     l11295:	
  8061  1755  0000               	nop
  8062                           	
  8063  1756                     l11297:	
  8064  1756  1283               	bcf	status, 5	;RP0=0, select bank0
  8065  1757  1303               	bcf	status, 6	;RP1=0, select bank0
  8066  1758  1107               	bcf	(58/8),(58)&7
  8067                           	line	65
  8068                           	
  8069  1759                     l3748:	
  8070  1759  0008               	return
  8071                           	opt stack 0
  8072                           GLOBAL	__end_of_rotate
  8073  175A                     	__end_of_rotate:
  8074 ;; =============== function _rotate ends ============
  8075                           
  8076                           	signat	_rotate,8312
  8077                           	global	_robotTurn
  8078                           psect	text1088,local,class=CODE,delta=2
  8079                           global __ptext1088
  8080  0A32                     __ptext1088:
  8081                           
  8082 ;; *************** function _robotTurn *****************
  8083 ;; Defined at:
  8084 ;;		line 128 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  distance        2    2[BANK0 ] int 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;		None               void
  8091 ;; Registers used:
  8092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8098 ;;      Params:         0       2       0       0       0
  8099 ;;      Locals:         0       0       0       0       0
  8100 ;;      Temps:          0       1       0       0       0
  8101 ;;      Totals:         0       3       0       0       0
  8102 ;;Total ram usage:        3 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    4
  8105 ;; This function calls:
  8106 ;;		_ser_putch
  8107 ;; This function is called by:
  8108 ;;		_straightLineTest
  8109 ;;		_main
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           psect	text1088
  8113                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  8114                           	line	128
  8115                           	global	__size_of_robotTurn
  8116  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  8117                           	
  8118  0A32                     _robotTurn:	
  8119                           	opt	stack 3
  8120                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8121                           	line	131
  8122                           	
  8123  0A32                     l11261:	
  8124                           ;robot.c: 131: turnlowByte = (unsigned char) (distance) ;
  8125  0A32  1283               	bcf	status, 5	;RP0=0, select bank0
  8126  0A33  1303               	bcf	status, 6	;RP1=0, select bank0
  8127  0A34  0822               	movf	(robotTurn@distance),w
  8128  0A35  00A4               	movwf	(??_robotTurn+0)+0
  8129  0A36  0824               	movf	(??_robotTurn+0)+0,w
  8130  0A37  1683               	bsf	status, 5	;RP0=1, select bank1
  8131  0A38  1303               	bcf	status, 6	;RP1=0, select bank1
  8132  0A39  00D2               	movwf	(_turnlowByte)^080h
  8133                           	line	132
  8134                           	
  8135  0A3A                     l11263:	
  8136                           ;robot.c: 132: turnhighByte = (unsigned char) (distance >> 8);
  8137  0A3A  1283               	bcf	status, 5	;RP0=0, select bank0
  8138  0A3B  1303               	bcf	status, 6	;RP1=0, select bank0
  8139  0A3C  0823               	movf	(robotTurn@distance+1),w
  8140  0A3D  00A4               	movwf	(??_robotTurn+0)+0
  8141  0A3E  0824               	movf	(??_robotTurn+0)+0,w
  8142  0A3F  1683               	bsf	status, 5	;RP0=1, select bank1
  8143  0A40  1303               	bcf	status, 6	;RP1=0, select bank1
  8144  0A41  00D1               	movwf	(_turnhighByte)^080h
  8145                           	line	133
  8146                           	
  8147  0A42                     l11265:	
  8148                           ;robot.c: 133: if (distance >= 0)
  8149  0A42  1283               	bcf	status, 5	;RP0=0, select bank0
  8150  0A43  1303               	bcf	status, 6	;RP1=0, select bank0
  8151  0A44  1BA3               	btfsc	(robotTurn@distance+1),7
  8152  0A45  2A47               	goto	u5001
  8153  0A46  2A48               	goto	u5000
  8154  0A47                     u5001:
  8155  0A47  2A67               	goto	l11269
  8156  0A48                     u5000:
  8157                           	line	135
  8158                           	
  8159  0A48                     l11267:	
  8160                           ;robot.c: 134: {
  8161                           ;robot.c: 135: ser_putch(137);
  8162  0A48  3089               	movlw	(089h)
  8163  0A49  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8164                           	line	137
  8165                           ;robot.c: 137: ser_putch(0);
  8166  0A4E  3000               	movlw	(0)
  8167  0A4F  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8168                           	line	139
  8169                           ;robot.c: 139: ser_putch(50);
  8170  0A54  3032               	movlw	(032h)
  8171  0A55  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8172                           	line	141
  8173                           ;robot.c: 141: ser_putch(0);
  8174  0A5A  3000               	movlw	(0)
  8175  0A5B  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8176                           	line	143
  8177                           ;robot.c: 143: ser_putch(1);
  8178  0A60  3001               	movlw	(01h)
  8179  0A61  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8180                           	line	144
  8181                           ;robot.c: 144: }
  8182  0A66  2A85               	goto	l6078
  8183                           	line	145
  8184                           	
  8185  0A67                     l6077:	
  8186                           	line	147
  8187                           	
  8188  0A67                     l11269:	
  8189                           ;robot.c: 145: else
  8190                           ;robot.c: 146: {
  8191                           ;robot.c: 147: ser_putch(137);
  8192  0A67  3089               	movlw	(089h)
  8193  0A68  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8194                           	line	149
  8195                           ;robot.c: 149: ser_putch(0);
  8196  0A6D  3000               	movlw	(0)
  8197  0A6E  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8198                           	line	151
  8199                           ;robot.c: 151: ser_putch(50);
  8200  0A73  3032               	movlw	(032h)
  8201  0A74  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8202                           	line	153
  8203                           ;robot.c: 153: ser_putch(255);
  8204  0A79  30FF               	movlw	(0FFh)
  8205  0A7A  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8206                           	line	155
  8207                           ;robot.c: 155: ser_putch(255);
  8208  0A7F  30FF               	movlw	(0FFh)
  8209  0A80  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8210                           	line	156
  8211                           	
  8212  0A85                     l6078:	
  8213                           	line	157
  8214                           ;robot.c: 156: }
  8215                           ;robot.c: 157: ser_putch(157);
  8216  0A85  309D               	movlw	(09Dh)
  8217  0A86  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8218                           	line	159
  8219                           ;robot.c: 159: ser_putch(turnhighByte);
  8220  0A8B  1683               	bsf	status, 5	;RP0=1, select bank1
  8221  0A8C  1303               	bcf	status, 6	;RP1=0, select bank1
  8222  0A8D  0851               	movf	(_turnhighByte)^080h,w
  8223  0A8E  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8224                           	line	161
  8225                           ;robot.c: 161: ser_putch(turnlowByte);
  8226  0A93  1683               	bsf	status, 5	;RP0=1, select bank1
  8227  0A94  1303               	bcf	status, 6	;RP1=0, select bank1
  8228  0A95  0852               	movf	(_turnlowByte)^080h,w
  8229  0A96  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8230                           	line	163
  8231                           ;robot.c: 163: ser_putch(137);
  8232  0A9B  3089               	movlw	(089h)
  8233  0A9C  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8234                           	line	165
  8235                           ;robot.c: 165: ser_putch(0);
  8236  0AA1  3000               	movlw	(0)
  8237  0AA2  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8238                           	line	167
  8239                           ;robot.c: 167: ser_putch(0);
  8240  0AA7  3000               	movlw	(0)
  8241  0AA8  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8242                           	line	169
  8243                           ;robot.c: 169: ser_putch(0);
  8244  0AAD  3000               	movlw	(0)
  8245  0AAE  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8246                           	line	171
  8247                           ;robot.c: 171: ser_putch(0);
  8248  0AB3  3000               	movlw	(0)
  8249  0AB4  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8250                           	line	172
  8251                           	
  8252  0AB9                     l6079:	
  8253  0AB9  0008               	return
  8254                           	opt stack 0
  8255                           GLOBAL	__end_of_robotTurn
  8256  0ABA                     	__end_of_robotTurn:
  8257 ;; =============== function _robotTurn ends ============
  8258                           
  8259                           	signat	_robotTurn,4216
  8260                           	global	_robo_init
  8261                           psect	text1089,local,class=CODE,delta=2
  8262                           global __ptext1089
  8263  1346                     __ptext1089:
  8264                           
  8265 ;; *************** function _robo_init *****************
  8266 ;; Defined at:
  8267 ;;		line 10 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;		None               void
  8274 ;; Registers used:
  8275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8281 ;;      Params:         0       0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0
  8284 ;;      Totals:         0       0       0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:    4
  8288 ;; This function calls:
  8289 ;;		_ser_putch
  8290 ;; This function is called by:
  8291 ;;		_init
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           psect	text1089
  8295                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\robot.c"
  8296                           	line	10
  8297                           	global	__size_of_robo_init
  8298  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  8299                           	
  8300  1346                     _robo_init:	
  8301                           	opt	stack 2
  8302                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8303                           	line	11
  8304                           	
  8305  1346                     l11259:	
  8306                           ;robot.c: 11: ser_putch(128);
  8307  1346  3080               	movlw	(080h)
  8308  1347  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  8309                           	line	12
  8310                           ;robot.c: 12: ser_putch(132);
  8311  134C  3084               	movlw	(084h)
  8312  134D  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  8313                           	line	13
  8314                           ;robot.c: 13: ser_putch(150);
  8315  1352  3096               	movlw	(096h)
  8316  1353  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  8317                           	line	14
  8318                           ;robot.c: 14: ser_putch(0);
  8319  1358  3000               	movlw	(0)
  8320  1359  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  8321                           	line	15
  8322                           	
  8323  135E                     l6055:	
  8324  135E  0008               	return
  8325                           	opt stack 0
  8326                           GLOBAL	__end_of_robo_init
  8327  135F                     	__end_of_robo_init:
  8328 ;; =============== function _robo_init ends ============
  8329                           
  8330                           	signat	_robo_init,88
  8331                           	global	_lcd_write_data
  8332                           psect	text1090,local,class=CODE,delta=2
  8333                           global __ptext1090
  8334  12B5                     __ptext1090:
  8335                           
  8336 ;; *************** function _lcd_write_data *****************
  8337 ;; Defined at:
  8338 ;;		line 30 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  databyte        1    wreg     unsigned char 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  databyte        1    2[BANK0 ] unsigned char 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;		None               void
  8345 ;; Registers used:
  8346 ;;		wreg
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8352 ;;      Params:         0       0       0       0       0
  8353 ;;      Locals:         0       1       0       0       0
  8354 ;;      Temps:          0       2       0       0       0
  8355 ;;      Totals:         0       3       0       0       0
  8356 ;;Total ram usage:        3 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    3
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		_lcd_write_string
  8363 ;;		_lcd_write_2_digit_bcd
  8364 ;;		_lcd_write_3_digit_bcd
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           psect	text1090
  8368                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  8369                           	line	30
  8370                           	global	__size_of_lcd_write_data
  8371  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  8372                           	
  8373  12B5                     _lcd_write_data:	
  8374                           	opt	stack 1
  8375                           ; Regs used in _lcd_write_data: [wreg]
  8376                           ;lcd_write_data@databyte stored from wreg
  8377  12B5  1283               	bcf	status, 5	;RP0=0, select bank0
  8378  12B6  1303               	bcf	status, 6	;RP1=0, select bank0
  8379  12B7  00A2               	movwf	(lcd_write_data@databyte)
  8380                           	line	31
  8381                           	
  8382  12B8                     l11251:	
  8383                           ;lcd.c: 31: RE2 = 0;
  8384  12B8  1109               	bcf	(74/8),(74)&7
  8385                           	line	32
  8386                           ;lcd.c: 32: RE1 = 0;
  8387  12B9  1089               	bcf	(73/8),(73)&7
  8388                           	line	33
  8389                           ;lcd.c: 33: RE0 = 1;
  8390  12BA  1409               	bsf	(72/8),(72)&7
  8391                           	line	34
  8392                           	
  8393  12BB                     l11253:	
  8394                           ;lcd.c: 34: PORTD = databyte;
  8395  12BB  0822               	movf	(lcd_write_data@databyte),w
  8396  12BC  0088               	movwf	(8)	;volatile
  8397                           	line	35
  8398                           	
  8399  12BD                     l11255:	
  8400                           ;lcd.c: 35: RE2 = 1;
  8401  12BD  1509               	bsf	(74/8),(74)&7
  8402                           	line	36
  8403                           	
  8404  12BE                     l11257:	
  8405                           ;lcd.c: 36: RE2 = 0;
  8406  12BE  1109               	bcf	(74/8),(74)&7
  8407                           	line	37
  8408                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  8409                           	opt asmopt_off
  8410  12BF  3007               movlw	7
  8411  12C0  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  8412  12C1  307D               	movlw	125
  8413  12C2  00A0               movwf	((??_lcd_write_data+0)+0),f
  8414  12C3                     u5827:
  8415  12C3  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  8416  12C4  2AC3               	goto	u5827
  8417  12C5  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  8418  12C6  2AC3               	goto	u5827
  8419                           opt asmopt_on
  8420                           
  8421                           	line	38
  8422                           	
  8423  12C7                     l1402:	
  8424  12C7  0008               	return
  8425                           	opt stack 0
  8426                           GLOBAL	__end_of_lcd_write_data
  8427  12C8                     	__end_of_lcd_write_data:
  8428 ;; =============== function _lcd_write_data ends ============
  8429                           
  8430                           	signat	_lcd_write_data,4216
  8431                           	global	_lcd_write_control
  8432                           psect	text1091,local,class=CODE,delta=2
  8433                           global __ptext1091
  8434  12EF                     __ptext1091:
  8435                           
  8436 ;; *************** function _lcd_write_control *****************
  8437 ;; Defined at:
  8438 ;;		line 18 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;  databyte        1    wreg     unsigned char 
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  databyte        1    2[BANK0 ] unsigned char 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;		None               void
  8445 ;; Registers used:
  8446 ;;		wreg
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8452 ;;      Params:         0       0       0       0       0
  8453 ;;      Locals:         0       1       0       0       0
  8454 ;;      Temps:          0       2       0       0       0
  8455 ;;      Totals:         0       3       0       0       0
  8456 ;;Total ram usage:        3 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    3
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		_lcd_set_cursor
  8463 ;;		_lcd_init
  8464 ;;		_UpdateDisplay
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           psect	text1091
  8468                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\lcd.c"
  8469                           	line	18
  8470                           	global	__size_of_lcd_write_control
  8471  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  8472                           	
  8473  12EF                     _lcd_write_control:	
  8474                           	opt	stack 1
  8475                           ; Regs used in _lcd_write_control: [wreg]
  8476                           ;lcd_write_control@databyte stored from wreg
  8477  12EF  1283               	bcf	status, 5	;RP0=0, select bank0
  8478  12F0  1303               	bcf	status, 6	;RP1=0, select bank0
  8479  12F1  00A2               	movwf	(lcd_write_control@databyte)
  8480                           	line	19
  8481                           	
  8482  12F2                     l11243:	
  8483                           ;lcd.c: 19: RE2 = 0;
  8484  12F2  1109               	bcf	(74/8),(74)&7
  8485                           	line	20
  8486                           ;lcd.c: 20: RE1 = 0;
  8487  12F3  1089               	bcf	(73/8),(73)&7
  8488                           	line	21
  8489                           ;lcd.c: 21: RE0 = 0;
  8490  12F4  1009               	bcf	(72/8),(72)&7
  8491                           	line	22
  8492                           	
  8493  12F5                     l11245:	
  8494                           ;lcd.c: 22: PORTD = databyte;
  8495  12F5  0822               	movf	(lcd_write_control@databyte),w
  8496  12F6  0088               	movwf	(8)	;volatile
  8497                           	line	23
  8498                           	
  8499  12F7                     l11247:	
  8500                           ;lcd.c: 23: RE2 = 1;
  8501  12F7  1509               	bsf	(74/8),(74)&7
  8502                           	line	24
  8503                           	
  8504  12F8                     l11249:	
  8505                           ;lcd.c: 24: RE2 = 0;
  8506  12F8  1109               	bcf	(74/8),(74)&7
  8507                           	line	25
  8508                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  8509                           	opt asmopt_off
  8510  12F9  300D               movlw	13
  8511  12FA  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  8512  12FB  30FB               	movlw	251
  8513  12FC  00A0               movwf	((??_lcd_write_control+0)+0),f
  8514  12FD                     u5837:
  8515  12FD  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  8516  12FE  2AFD               	goto	u5837
  8517  12FF  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  8518  1300  2AFD               	goto	u5837
  8519  1301  2B02               	nop2
  8520                           opt asmopt_on
  8521                           
  8522                           	line	26
  8523                           	
  8524  1302                     l1399:	
  8525  1302  0008               	return
  8526                           	opt stack 0
  8527                           GLOBAL	__end_of_lcd_write_control
  8528  1303                     	__end_of_lcd_write_control:
  8529 ;; =============== function _lcd_write_control ends ============
  8530                           
  8531                           	signat	_lcd_write_control,4216
  8532                           	global	_init_adc
  8533                           psect	text1092,local,class=CODE,delta=2
  8534                           global __ptext1092
  8535  1303                     __ptext1092:
  8536                           
  8537 ;; *************** function _init_adc *****************
  8538 ;; Defined at:
  8539 ;;		line 46 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;		None
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;		None               void
  8546 ;; Registers used:
  8547 ;;		wreg, status,2
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8553 ;;      Params:         0       0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0
  8555 ;;      Temps:          0       1       0       0       0
  8556 ;;      Totals:         0       1       0       0       0
  8557 ;;Total ram usage:        1 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:    3
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_init
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           psect	text1092
  8567                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
  8568                           	line	46
  8569                           	global	__size_of_init_adc
  8570  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8571                           	
  8572  1303                     _init_adc:	
  8573                           	opt	stack 3
  8574                           ; Regs used in _init_adc: [wreg+status,2]
  8575                           	line	48
  8576                           	
  8577  1303                     l11233:	
  8578                           ;adc.c: 48: PORTA = 0;
  8579  1303  1283               	bcf	status, 5	;RP0=0, select bank0
  8580  1304  1303               	bcf	status, 6	;RP1=0, select bank0
  8581  1305  0185               	clrf	(5)	;volatile
  8582                           	line	49
  8583                           	
  8584  1306                     l11235:	
  8585                           ;adc.c: 49: TRISA = 0b00111111;
  8586  1306  303F               	movlw	(03Fh)
  8587  1307  1683               	bsf	status, 5	;RP0=1, select bank1
  8588  1308  1303               	bcf	status, 6	;RP1=0, select bank1
  8589  1309  0085               	movwf	(133)^080h	;volatile
  8590                           	line	52
  8591                           	
  8592  130A                     l11237:	
  8593                           ;adc.c: 52: ADCON0 = 0b10100001;
  8594  130A  30A1               	movlw	(0A1h)
  8595  130B  1283               	bcf	status, 5	;RP0=0, select bank0
  8596  130C  1303               	bcf	status, 6	;RP1=0, select bank0
  8597  130D  009F               	movwf	(31)	;volatile
  8598                           	line	53
  8599                           	
  8600  130E                     l11239:	
  8601                           ;adc.c: 53: ADCON1 = 0b0000010;
  8602  130E  3002               	movlw	(02h)
  8603  130F  1683               	bsf	status, 5	;RP0=1, select bank1
  8604  1310  1303               	bcf	status, 6	;RP1=0, select bank1
  8605  1311  009F               	movwf	(159)^080h	;volatile
  8606                           	line	55
  8607                           	
  8608  1312                     l11241:	
  8609                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8610                           	opt asmopt_off
  8611  1312  3053               movlw	83
  8612  1313  1283               	bcf	status, 5	;RP0=0, select bank0
  8613  1314  1303               	bcf	status, 6	;RP1=0, select bank0
  8614  1315  00A0               movwf	(??_init_adc+0)+0,f
  8615  1316                     u5847:
  8616  1316  0BA0               decfsz	(??_init_adc+0)+0,f
  8617  1317  2B16               	goto	u5847
  8618                           opt asmopt_on
  8619                           
  8620                           	line	57
  8621                           	
  8622  1318                     l700:	
  8623  1318  0008               	return
  8624                           	opt stack 0
  8625                           GLOBAL	__end_of_init_adc
  8626  1319                     	__end_of_init_adc:
  8627 ;; =============== function _init_adc ends ============
  8628                           
  8629                           	signat	_init_adc,88
  8630                           	global	_adc_read_channel
  8631                           psect	text1093,local,class=CODE,delta=2
  8632                           global __ptext1093
  8633  1568                     __ptext1093:
  8634                           
  8635 ;; *************** function _adc_read_channel *****************
  8636 ;; Defined at:
  8637 ;;		line 5 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  channel         1    wreg     unsigned char 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  channel         1    7[BANK0 ] unsigned char 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      unsigned char 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8651 ;;      Params:         0       0       0       0       0
  8652 ;;      Locals:         0       1       0       0       0
  8653 ;;      Temps:          0       1       0       0       0
  8654 ;;      Totals:         0       2       0       0       0
  8655 ;;Total ram usage:        2 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    4
  8658 ;; This function calls:
  8659 ;;		_adc_read
  8660 ;; This function is called by:
  8661 ;;		_readDistance
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           psect	text1093
  8665                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
  8666                           	line	5
  8667                           	global	__size_of_adc_read_channel
  8668  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8669                           	
  8670  1568                     _adc_read_channel:	
  8671                           	opt	stack 0
  8672                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8673                           ;adc_read_channel@channel stored from wreg
  8674  1568  1283               	bcf	status, 5	;RP0=0, select bank0
  8675  1569  1303               	bcf	status, 6	;RP1=0, select bank0
  8676  156A  00A7               	movwf	(adc_read_channel@channel)
  8677                           	line	6
  8678                           	
  8679  156B                     l11217:	
  8680                           ;adc.c: 6: switch(channel)
  8681  156B  2D84               	goto	l11225
  8682                           	line	8
  8683                           ;adc.c: 7: {
  8684                           ;adc.c: 8: case 0:
  8685                           	
  8686  156C                     l690:	
  8687                           	line	9
  8688                           ;adc.c: 9: CHS0 = 0;
  8689  156C  119F               	bcf	(251/8),(251)&7
  8690                           	line	10
  8691                           ;adc.c: 10: CHS1 = 0;
  8692  156D  121F               	bcf	(252/8),(252)&7
  8693                           	line	11
  8694                           ;adc.c: 11: CHS2 = 0;
  8695  156E  129F               	bcf	(253/8),(253)&7
  8696                           	line	12
  8697                           ;adc.c: 12: break;
  8698  156F  2D95               	goto	l11227
  8699                           	line	13
  8700                           ;adc.c: 13: case 1:
  8701                           	
  8702  1570                     l692:	
  8703                           	line	14
  8704                           ;adc.c: 14: CHS0 = 1;
  8705  1570  159F               	bsf	(251/8),(251)&7
  8706                           	line	15
  8707                           ;adc.c: 15: CHS1 = 0;
  8708  1571  121F               	bcf	(252/8),(252)&7
  8709                           	line	16
  8710                           ;adc.c: 16: CHS2 = 0;
  8711  1572  129F               	bcf	(253/8),(253)&7
  8712                           	line	17
  8713                           ;adc.c: 17: break;
  8714  1573  2D95               	goto	l11227
  8715                           	line	18
  8716                           ;adc.c: 18: case 2:
  8717                           	
  8718  1574                     l693:	
  8719                           	line	19
  8720                           ;adc.c: 19: CHS0 = 0;
  8721  1574  119F               	bcf	(251/8),(251)&7
  8722                           	line	20
  8723                           ;adc.c: 20: CHS1 = 1;
  8724  1575  161F               	bsf	(252/8),(252)&7
  8725                           	line	21
  8726                           ;adc.c: 21: CHS2 = 0;
  8727  1576  129F               	bcf	(253/8),(253)&7
  8728                           	line	22
  8729                           ;adc.c: 22: break;
  8730  1577  2D95               	goto	l11227
  8731                           	line	23
  8732                           ;adc.c: 23: case 3:
  8733                           	
  8734  1578                     l694:	
  8735                           	line	24
  8736                           ;adc.c: 24: CHS0 = 1;
  8737  1578  159F               	bsf	(251/8),(251)&7
  8738                           	line	25
  8739                           ;adc.c: 25: CHS1 = 1;
  8740  1579  161F               	bsf	(252/8),(252)&7
  8741                           	line	26
  8742                           ;adc.c: 26: CHS2 = 0;
  8743  157A  129F               	bcf	(253/8),(253)&7
  8744                           	line	27
  8745                           ;adc.c: 27: break;
  8746  157B  2D95               	goto	l11227
  8747                           	line	28
  8748                           ;adc.c: 28: case 4:
  8749                           	
  8750  157C                     l695:	
  8751                           	line	29
  8752                           ;adc.c: 29: CHS0 = 0;
  8753  157C  119F               	bcf	(251/8),(251)&7
  8754                           	line	30
  8755                           ;adc.c: 30: CHS1 = 0;
  8756  157D  121F               	bcf	(252/8),(252)&7
  8757                           	line	31
  8758                           ;adc.c: 31: CHS2 = 1;
  8759  157E  169F               	bsf	(253/8),(253)&7
  8760                           	line	32
  8761                           ;adc.c: 32: break;
  8762  157F  2D95               	goto	l11227
  8763                           	line	35
  8764                           ;adc.c: 35: default:
  8765                           	
  8766  1580                     l696:	
  8767                           	line	36
  8768                           	
  8769  1580                     l11219:	
  8770                           ;adc.c: 36: return 0;
  8771  1580  3000               	movlw	(0)
  8772  1581  2DA2               	goto	l697
  8773                           	
  8774  1582                     l11221:	
  8775  1582  2DA2               	goto	l697
  8776                           	line	37
  8777                           	
  8778  1583                     l11223:	
  8779                           ;adc.c: 37: }
  8780  1583  2D95               	goto	l11227
  8781                           	line	6
  8782                           	
  8783  1584                     l689:	
  8784                           	
  8785  1584                     l11225:	
  8786  1584  0827               	movf	(adc_read_channel@channel),w
  8787                           	; Switch size 1, requested type "space"
  8788                           ; Number of cases is 5, Range of values is 0 to 4
  8789                           ; switch strategies available:
  8790                           ; Name         Instructions Cycles
  8791                           ; simple_byte           16     9 (average)
  8792                           ; direct_byte           23     8 (fixed)
  8793                           ; jumptable            260     6 (fixed)
  8794                           ; rangetable             9     6 (fixed)
  8795                           ; spacedrange           16     9 (fixed)
  8796                           ; locatedrange           5     3 (fixed)
  8797                           ;	Chosen strategy is simple_byte
  8798                           
  8799                           	opt asmopt_off
  8800  1585  3A00               	xorlw	0^0	; case 0
  8801  1586  1903               	skipnz
  8802  1587  2D6C               	goto	l690
  8803  1588  3A01               	xorlw	1^0	; case 1
  8804  1589  1903               	skipnz
  8805  158A  2D70               	goto	l692
  8806  158B  3A03               	xorlw	2^1	; case 2
  8807  158C  1903               	skipnz
  8808  158D  2D74               	goto	l693
  8809  158E  3A01               	xorlw	3^2	; case 3
  8810  158F  1903               	skipnz
  8811  1590  2D78               	goto	l694
  8812  1591  3A07               	xorlw	4^3	; case 4
  8813  1592  1903               	skipnz
  8814  1593  2D7C               	goto	l695
  8815  1594  2D80               	goto	l11219
  8816                           	opt asmopt_on
  8817                           
  8818                           	line	37
  8819                           	
  8820  1595                     l691:	
  8821                           	line	39
  8822                           	
  8823  1595                     l11227:	
  8824                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8825                           	opt asmopt_off
  8826  1595  3053               movlw	83
  8827  1596  00A6               movwf	(??_adc_read_channel+0)+0,f
  8828  1597                     u5857:
  8829  1597  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  8830  1598  2D97               	goto	u5857
  8831                           opt asmopt_on
  8832                           
  8833                           	line	41
  8834                           	
  8835  1599                     l11229:	
  8836                           ;adc.c: 41: return adc_read();
  8837  1599  160A  118A  23CF   	fcall	_adc_read
              160A  118A         
  8838  159E  1283               	bcf	status, 5	;RP0=0, select bank0
  8839  159F  1303               	bcf	status, 6	;RP1=0, select bank0
  8840  15A0  0820               	movf	(0+(?_adc_read)),w
  8841  15A1  2DA2               	goto	l697
  8842                           	
  8843  15A2                     l11231:	
  8844                           	line	43
  8845                           	
  8846  15A2                     l697:	
  8847  15A2  0008               	return
  8848                           	opt stack 0
  8849                           GLOBAL	__end_of_adc_read_channel
  8850  15A3                     	__end_of_adc_read_channel:
  8851 ;; =============== function _adc_read_channel ends ============
  8852                           
  8853                           	signat	_adc_read_channel,4217
  8854                           	global	___awmod
  8855                           psect	text1094,local,class=CODE,delta=2
  8856                           global __ptext1094
  8857  08D3                     __ptext1094:
  8858                           
  8859 ;; *************** function ___awmod *****************
  8860 ;; Defined at:
  8861 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  divisor         2    0[BANK0 ] int 
  8864 ;;  dividend        2    2[BANK0 ] int 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;  sign            1    6[BANK0 ] unsigned char 
  8867 ;;  counter         1    5[BANK0 ] unsigned char 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  2    0[BANK0 ] int 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8877 ;;      Params:         0       4       0       0       0
  8878 ;;      Locals:         0       2       0       0       0
  8879 ;;      Temps:          0       1       0       0       0
  8880 ;;      Totals:         0       7       0       0       0
  8881 ;;Total ram usage:        7 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; Hardware stack levels required when called:    3
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_UpdateDisplay
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           psect	text1094
  8891                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8892                           	line	5
  8893                           	global	__size_of___awmod
  8894  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  8895                           	
  8896  08D3                     ___awmod:	
  8897                           	opt	stack 2
  8898                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8899                           	line	8
  8900                           	
  8901  08D3                     l11115:	
  8902  08D3  1283               	bcf	status, 5	;RP0=0, select bank0
  8903  08D4  1303               	bcf	status, 6	;RP1=0, select bank0
  8904  08D5  01A6               	clrf	(___awmod@sign)
  8905                           	line	9
  8906  08D6  1FA3               	btfss	(___awmod@dividend+1),7
  8907  08D7  28D9               	goto	u4791
  8908  08D8  28DA               	goto	u4790
  8909  08D9                     u4791:
  8910  08D9  28E3               	goto	l11119
  8911  08DA                     u4790:
  8912                           	line	10
  8913                           	
  8914  08DA                     l11117:	
  8915  08DA  09A2               	comf	(___awmod@dividend),f
  8916  08DB  09A3               	comf	(___awmod@dividend+1),f
  8917  08DC  0AA2               	incf	(___awmod@dividend),f
  8918  08DD  1903               	skipnz
  8919  08DE  0AA3               	incf	(___awmod@dividend+1),f
  8920                           	line	11
  8921  08DF  01A6               	clrf	(___awmod@sign)
  8922  08E0  1403               	bsf	status,0
  8923  08E1  0DA6               	rlf	(___awmod@sign),f
  8924  08E2  28E3               	goto	l11119
  8925                           	line	12
  8926                           	
  8927  08E3                     l7735:	
  8928                           	line	13
  8929                           	
  8930  08E3                     l11119:	
  8931  08E3  1FA1               	btfss	(___awmod@divisor+1),7
  8932  08E4  28E6               	goto	u4801
  8933  08E5  28E7               	goto	u4800
  8934  08E6                     u4801:
  8935  08E6  28ED               	goto	l11123
  8936  08E7                     u4800:
  8937                           	line	14
  8938                           	
  8939  08E7                     l11121:	
  8940  08E7  09A0               	comf	(___awmod@divisor),f
  8941  08E8  09A1               	comf	(___awmod@divisor+1),f
  8942  08E9  0AA0               	incf	(___awmod@divisor),f
  8943  08EA  1903               	skipnz
  8944  08EB  0AA1               	incf	(___awmod@divisor+1),f
  8945  08EC  28ED               	goto	l11123
  8946                           	
  8947  08ED                     l7736:	
  8948                           	line	15
  8949                           	
  8950  08ED                     l11123:	
  8951  08ED  0821               	movf	(___awmod@divisor+1),w
  8952  08EE  0420               	iorwf	(___awmod@divisor),w
  8953  08EF  1903               	skipnz
  8954  08F0  28F2               	goto	u4811
  8955  08F1  28F3               	goto	u4810
  8956  08F2                     u4811:
  8957  08F2  2929               	goto	l11141
  8958  08F3                     u4810:
  8959                           	line	16
  8960                           	
  8961  08F3                     l11125:	
  8962  08F3  01A5               	clrf	(___awmod@counter)
  8963  08F4  1403               	bsf	status,0
  8964  08F5  0DA5               	rlf	(___awmod@counter),f
  8965                           	line	17
  8966  08F6  2903               	goto	l11131
  8967                           	
  8968  08F7                     l7739:	
  8969                           	line	18
  8970                           	
  8971  08F7                     l11127:	
  8972  08F7  3001               	movlw	01h
  8973                           	
  8974  08F8                     u4825:
  8975  08F8  1003               	clrc
  8976  08F9  0DA0               	rlf	(___awmod@divisor),f
  8977  08FA  0DA1               	rlf	(___awmod@divisor+1),f
  8978  08FB  3EFF               	addlw	-1
  8979  08FC  1D03               	skipz
  8980  08FD  28F8               	goto	u4825
  8981                           	line	19
  8982                           	
  8983  08FE                     l11129:	
  8984  08FE  3001               	movlw	(01h)
  8985  08FF  00A4               	movwf	(??___awmod+0)+0
  8986  0900  0824               	movf	(??___awmod+0)+0,w
  8987  0901  07A5               	addwf	(___awmod@counter),f
  8988  0902  2903               	goto	l11131
  8989                           	line	20
  8990                           	
  8991  0903                     l7738:	
  8992                           	line	17
  8993                           	
  8994  0903                     l11131:	
  8995  0903  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8996  0904  2906               	goto	u4831
  8997  0905  2907               	goto	u4830
  8998  0906                     u4831:
  8999  0906  28F7               	goto	l11127
  9000  0907                     u4830:
  9001  0907  2909               	goto	l11133
  9002                           	
  9003  0908                     l7740:	
  9004  0908  2909               	goto	l11133
  9005                           	line	21
  9006                           	
  9007  0909                     l7741:	
  9008                           	line	22
  9009                           	
  9010  0909                     l11133:	
  9011  0909  0821               	movf	(___awmod@divisor+1),w
  9012  090A  0223               	subwf	(___awmod@dividend+1),w
  9013  090B  1D03               	skipz
  9014  090C  290F               	goto	u4845
  9015  090D  0820               	movf	(___awmod@divisor),w
  9016  090E  0222               	subwf	(___awmod@dividend),w
  9017  090F                     u4845:
  9018  090F  1C03               	skipc
  9019  0910  2912               	goto	u4841
  9020  0911  2913               	goto	u4840
  9021  0912                     u4841:
  9022  0912  291A               	goto	l11137
  9023  0913                     u4840:
  9024                           	line	23
  9025                           	
  9026  0913                     l11135:	
  9027  0913  0820               	movf	(___awmod@divisor),w
  9028  0914  02A2               	subwf	(___awmod@dividend),f
  9029  0915  0821               	movf	(___awmod@divisor+1),w
  9030  0916  1C03               	skipc
  9031  0917  03A3               	decf	(___awmod@dividend+1),f
  9032  0918  02A3               	subwf	(___awmod@dividend+1),f
  9033  0919  291A               	goto	l11137
  9034                           	
  9035  091A                     l7742:	
  9036                           	line	24
  9037                           	
  9038  091A                     l11137:	
  9039  091A  3001               	movlw	01h
  9040                           	
  9041  091B                     u4855:
  9042  091B  1003               	clrc
  9043  091C  0CA1               	rrf	(___awmod@divisor+1),f
  9044  091D  0CA0               	rrf	(___awmod@divisor),f
  9045  091E  3EFF               	addlw	-1
  9046  091F  1D03               	skipz
  9047  0920  291B               	goto	u4855
  9048                           	line	25
  9049                           	
  9050  0921                     l11139:	
  9051  0921  3001               	movlw	low(01h)
  9052  0922  02A5               	subwf	(___awmod@counter),f
  9053  0923  1D03               	btfss	status,2
  9054  0924  2926               	goto	u4861
  9055  0925  2927               	goto	u4860
  9056  0926                     u4861:
  9057  0926  2909               	goto	l11133
  9058  0927                     u4860:
  9059  0927  2929               	goto	l11141
  9060                           	
  9061  0928                     l7743:	
  9062  0928  2929               	goto	l11141
  9063                           	line	26
  9064                           	
  9065  0929                     l7737:	
  9066                           	line	27
  9067                           	
  9068  0929                     l11141:	
  9069  0929  0826               	movf	(___awmod@sign),w
  9070  092A  1D03               	skipz
  9071  092B  292D               	goto	u4870
  9072  092C  2933               	goto	l11145
  9073  092D                     u4870:
  9074                           	line	28
  9075                           	
  9076  092D                     l11143:	
  9077  092D  09A2               	comf	(___awmod@dividend),f
  9078  092E  09A3               	comf	(___awmod@dividend+1),f
  9079  092F  0AA2               	incf	(___awmod@dividend),f
  9080  0930  1903               	skipnz
  9081  0931  0AA3               	incf	(___awmod@dividend+1),f
  9082  0932  2933               	goto	l11145
  9083                           	
  9084  0933                     l7744:	
  9085                           	line	29
  9086                           	
  9087  0933                     l11145:	
  9088  0933  0823               	movf	(___awmod@dividend+1),w
  9089  0934  01A1               	clrf	(?___awmod+1)
  9090  0935  07A1               	addwf	(?___awmod+1)
  9091  0936  0822               	movf	(___awmod@dividend),w
  9092  0937  01A0               	clrf	(?___awmod)
  9093  0938  07A0               	addwf	(?___awmod)
  9094                           
  9095  0939  293A               	goto	l7745
  9096                           	
  9097  093A                     l11147:	
  9098                           	line	30
  9099                           	
  9100  093A                     l7745:	
  9101  093A  0008               	return
  9102                           	opt stack 0
  9103                           GLOBAL	__end_of___awmod
  9104  093B                     	__end_of___awmod:
  9105 ;; =============== function ___awmod ends ============
  9106                           
  9107                           	signat	___awmod,8314
  9108                           	global	___fttol
  9109                           psect	text1095,local,class=CODE,delta=2
  9110                           global __ptext1095
  9111  0B52                     __ptext1095:
  9112                           
  9113 ;; *************** function ___fttol *****************
  9114 ;; Defined at:
  9115 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  f1              3    8[BANK0 ] float 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  lval            4   17[BANK0 ] unsigned long 
  9120 ;;  exp1            1   21[BANK0 ] unsigned char 
  9121 ;;  sign1           1   16[BANK0 ] unsigned char 
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  4    8[BANK0 ] long 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9131 ;;      Params:         0       4       0       0       0
  9132 ;;      Locals:         0       6       0       0       0
  9133 ;;      Temps:          0       4       0       0       0
  9134 ;;      Totals:         0      14       0       0       0
  9135 ;;Total ram usage:       14 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    3
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_main
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           psect	text1095
  9145                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9146                           	line	45
  9147                           	global	__size_of___fttol
  9148  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  9149                           	
  9150  0B52                     ___fttol:	
  9151                           	opt	stack 4
  9152                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9153                           	line	49
  9154                           	
  9155  0B52                     l11059:	
  9156  0B52  1283               	bcf	status, 5	;RP0=0, select bank0
  9157  0B53  1303               	bcf	status, 6	;RP1=0, select bank0
  9158  0B54  0828               	movf	(___fttol@f1),w
  9159  0B55  00AC               	movwf	((??___fttol+0)+0)
  9160  0B56  0829               	movf	(___fttol@f1+1),w
  9161  0B57  00AD               	movwf	((??___fttol+0)+0+1)
  9162  0B58  082A               	movf	(___fttol@f1+2),w
  9163  0B59  00AE               	movwf	((??___fttol+0)+0+2)
  9164  0B5A  1003               	clrc
  9165  0B5B  0D2D               	rlf	(??___fttol+0)+1,w
  9166  0B5C  0D2E               	rlf	(??___fttol+0)+2,w
  9167  0B5D  00AF               	movwf	(??___fttol+3)+0
  9168  0B5E  082F               	movf	(??___fttol+3)+0,w
  9169  0B5F  00B5               	movwf	(___fttol@exp1)
  9170  0B60  08B5               	movf	((___fttol@exp1)),f
  9171  0B61  1D03               	skipz
  9172  0B62  2B64               	goto	u4681
  9173  0B63  2B65               	goto	u4680
  9174  0B64                     u4681:
  9175  0B64  2B6F               	goto	l11065
  9176  0B65                     u4680:
  9177                           	line	50
  9178                           	
  9179  0B65                     l11061:	
  9180  0B65  3000               	movlw	0
  9181  0B66  00AB               	movwf	(?___fttol+3)
  9182  0B67  3000               	movlw	0
  9183  0B68  00AA               	movwf	(?___fttol+2)
  9184  0B69  3000               	movlw	0
  9185  0B6A  00A9               	movwf	(?___fttol+1)
  9186  0B6B  3000               	movlw	0
  9187  0B6C  00A8               	movwf	(?___fttol)
  9188                           
  9189  0B6D  2BF7               	goto	l7637
  9190                           	
  9191  0B6E                     l11063:	
  9192  0B6E  2BF7               	goto	l7637
  9193                           	
  9194  0B6F                     l7636:	
  9195                           	line	51
  9196                           	
  9197  0B6F                     l11065:	
  9198  0B6F  0828               	movf	(___fttol@f1),w
  9199  0B70  00AC               	movwf	((??___fttol+0)+0)
  9200  0B71  0829               	movf	(___fttol@f1+1),w
  9201  0B72  00AD               	movwf	((??___fttol+0)+0+1)
  9202  0B73  082A               	movf	(___fttol@f1+2),w
  9203  0B74  00AE               	movwf	((??___fttol+0)+0+2)
  9204  0B75  3017               	movlw	017h
  9205  0B76                     u4695:
  9206  0B76  1003               	clrc
  9207  0B77  0CAE               	rrf	(??___fttol+0)+2,f
  9208  0B78  0CAD               	rrf	(??___fttol+0)+1,f
  9209  0B79  0CAC               	rrf	(??___fttol+0)+0,f
  9210  0B7A                     u4690:
  9211  0B7A  3EFF               	addlw	-1
  9212  0B7B  1D03               	skipz
  9213  0B7C  2B76               	goto	u4695
  9214  0B7D  082C               	movf	0+(??___fttol+0)+0,w
  9215  0B7E  00AF               	movwf	(??___fttol+3)+0
  9216  0B7F  082F               	movf	(??___fttol+3)+0,w
  9217  0B80  00B0               	movwf	(___fttol@sign1)
  9218                           	line	52
  9219                           	
  9220  0B81                     l11067:	
  9221  0B81  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  9222                           	line	53
  9223                           	
  9224  0B82                     l11069:	
  9225  0B82  30FF               	movlw	0FFh
  9226  0B83  05A8               	andwf	(___fttol@f1),f
  9227  0B84  30FF               	movlw	0FFh
  9228  0B85  05A9               	andwf	(___fttol@f1+1),f
  9229  0B86  3000               	movlw	0
  9230  0B87  05AA               	andwf	(___fttol@f1+2),f
  9231                           	line	54
  9232                           	
  9233  0B88                     l11071:	
  9234  0B88  0828               	movf	(___fttol@f1),w
  9235  0B89  00B1               	movwf	(___fttol@lval)
  9236  0B8A  0829               	movf	(___fttol@f1+1),w
  9237  0B8B  00B2               	movwf	((___fttol@lval))+1
  9238  0B8C  082A               	movf	(___fttol@f1+2),w
  9239  0B8D  00B3               	movwf	((___fttol@lval))+2
  9240  0B8E  01B4               	clrf	((___fttol@lval))+3
  9241                           	line	55
  9242                           	
  9243  0B8F                     l11073:	
  9244  0B8F  308E               	movlw	low(08Eh)
  9245  0B90  02B5               	subwf	(___fttol@exp1),f
  9246                           	line	56
  9247                           	
  9248  0B91                     l11075:	
  9249  0B91  1FB5               	btfss	(___fttol@exp1),7
  9250  0B92  2B94               	goto	u4701
  9251  0B93  2B95               	goto	u4700
  9252  0B94                     u4701:
  9253  0B94  2BBA               	goto	l11085
  9254  0B95                     u4700:
  9255                           	line	57
  9256                           	
  9257  0B95                     l11077:	
  9258  0B95  0835               	movf	(___fttol@exp1),w
  9259  0B96  3A80               	xorlw	80h
  9260  0B97  3E8F               	addlw	-((-15)^80h)
  9261  0B98  1803               	skipnc
  9262  0B99  2B9B               	goto	u4711
  9263  0B9A  2B9C               	goto	u4710
  9264  0B9B                     u4711:
  9265  0B9B  2BA7               	goto	l11083
  9266  0B9C                     u4710:
  9267                           	line	58
  9268                           	
  9269  0B9C                     l11079:	
  9270  0B9C  3000               	movlw	0
  9271  0B9D  00AB               	movwf	(?___fttol+3)
  9272  0B9E  3000               	movlw	0
  9273  0B9F  00AA               	movwf	(?___fttol+2)
  9274  0BA0  3000               	movlw	0
  9275  0BA1  00A9               	movwf	(?___fttol+1)
  9276  0BA2  3000               	movlw	0
  9277  0BA3  00A8               	movwf	(?___fttol)
  9278                           
  9279  0BA4  2BF7               	goto	l7637
  9280                           	
  9281  0BA5                     l11081:	
  9282  0BA5  2BF7               	goto	l7637
  9283                           	
  9284  0BA6                     l7639:	
  9285  0BA6  2BA7               	goto	l11083
  9286                           	line	59
  9287                           	
  9288  0BA7                     l7640:	
  9289                           	line	60
  9290                           	
  9291  0BA7                     l11083:	
  9292  0BA7  3001               	movlw	01h
  9293  0BA8                     u4725:
  9294  0BA8  1003               	clrc
  9295  0BA9  0CB4               	rrf	(___fttol@lval+3),f
  9296  0BAA  0CB3               	rrf	(___fttol@lval+2),f
  9297  0BAB  0CB2               	rrf	(___fttol@lval+1),f
  9298  0BAC  0CB1               	rrf	(___fttol@lval),f
  9299  0BAD  3EFF               	addlw	-1
  9300  0BAE  1D03               	skipz
  9301  0BAF  2BA8               	goto	u4725
  9302                           
  9303                           	line	61
  9304  0BB0  3001               	movlw	(01h)
  9305  0BB1  00AC               	movwf	(??___fttol+0)+0
  9306  0BB2  082C               	movf	(??___fttol+0)+0,w
  9307  0BB3  07B5               	addwf	(___fttol@exp1),f
  9308  0BB4  1D03               	btfss	status,2
  9309  0BB5  2BB7               	goto	u4731
  9310  0BB6  2BB8               	goto	u4730
  9311  0BB7                     u4731:
  9312  0BB7  2BA7               	goto	l11083
  9313  0BB8                     u4730:
  9314  0BB8  2BDE               	goto	l11095
  9315                           	
  9316  0BB9                     l7641:	
  9317                           	line	62
  9318  0BB9  2BDE               	goto	l11095
  9319                           	
  9320  0BBA                     l7638:	
  9321                           	line	63
  9322                           	
  9323  0BBA                     l11085:	
  9324  0BBA  3018               	movlw	(018h)
  9325  0BBB  0235               	subwf	(___fttol@exp1),w
  9326  0BBC  1C03               	skipc
  9327  0BBD  2BBF               	goto	u4741
  9328  0BBE  2BC0               	goto	u4740
  9329  0BBF                     u4741:
  9330  0BBF  2BD7               	goto	l11093
  9331  0BC0                     u4740:
  9332                           	line	64
  9333                           	
  9334  0BC0                     l11087:	
  9335  0BC0  3000               	movlw	0
  9336  0BC1  00AB               	movwf	(?___fttol+3)
  9337  0BC2  3000               	movlw	0
  9338  0BC3  00AA               	movwf	(?___fttol+2)
  9339  0BC4  3000               	movlw	0
  9340  0BC5  00A9               	movwf	(?___fttol+1)
  9341  0BC6  3000               	movlw	0
  9342  0BC7  00A8               	movwf	(?___fttol)
  9343                           
  9344  0BC8  2BF7               	goto	l7637
  9345                           	
  9346  0BC9                     l11089:	
  9347  0BC9  2BF7               	goto	l7637
  9348                           	
  9349  0BCA                     l7643:	
  9350                           	line	65
  9351  0BCA  2BD7               	goto	l11093
  9352                           	
  9353  0BCB                     l7645:	
  9354                           	line	66
  9355                           	
  9356  0BCB                     l11091:	
  9357  0BCB  3001               	movlw	01h
  9358  0BCC  00AC               	movwf	(??___fttol+0)+0
  9359  0BCD                     u4755:
  9360  0BCD  1003               	clrc
  9361  0BCE  0DB1               	rlf	(___fttol@lval),f
  9362  0BCF  0DB2               	rlf	(___fttol@lval+1),f
  9363  0BD0  0DB3               	rlf	(___fttol@lval+2),f
  9364  0BD1  0DB4               	rlf	(___fttol@lval+3),f
  9365  0BD2  0BAC               	decfsz	(??___fttol+0)+0
  9366  0BD3  2BCD               	goto	u4755
  9367                           	line	67
  9368  0BD4  3001               	movlw	low(01h)
  9369  0BD5  02B5               	subwf	(___fttol@exp1),f
  9370  0BD6  2BD7               	goto	l11093
  9371                           	line	68
  9372                           	
  9373  0BD7                     l7644:	
  9374                           	line	65
  9375                           	
  9376  0BD7                     l11093:	
  9377  0BD7  08B5               	movf	(___fttol@exp1),f
  9378  0BD8  1D03               	skipz
  9379  0BD9  2BDB               	goto	u4761
  9380  0BDA  2BDC               	goto	u4760
  9381  0BDB                     u4761:
  9382  0BDB  2BCB               	goto	l11091
  9383  0BDC                     u4760:
  9384  0BDC  2BDE               	goto	l11095
  9385                           	
  9386  0BDD                     l7646:	
  9387  0BDD  2BDE               	goto	l11095
  9388                           	line	69
  9389                           	
  9390  0BDE                     l7642:	
  9391                           	line	70
  9392                           	
  9393  0BDE                     l11095:	
  9394  0BDE  0830               	movf	(___fttol@sign1),w
  9395  0BDF  1D03               	skipz
  9396  0BE0  2BE2               	goto	u4770
  9397  0BE1  2BEE               	goto	l11099
  9398  0BE2                     u4770:
  9399                           	line	71
  9400                           	
  9401  0BE2                     l11097:	
  9402  0BE2  09B1               	comf	(___fttol@lval),f
  9403  0BE3  09B2               	comf	(___fttol@lval+1),f
  9404  0BE4  09B3               	comf	(___fttol@lval+2),f
  9405  0BE5  09B4               	comf	(___fttol@lval+3),f
  9406  0BE6  0AB1               	incf	(___fttol@lval),f
  9407  0BE7  1903               	skipnz
  9408  0BE8  0AB2               	incf	(___fttol@lval+1),f
  9409  0BE9  1903               	skipnz
  9410  0BEA  0AB3               	incf	(___fttol@lval+2),f
  9411  0BEB  1903               	skipnz
  9412  0BEC  0AB4               	incf	(___fttol@lval+3),f
  9413  0BED  2BEE               	goto	l11099
  9414                           	
  9415  0BEE                     l7647:	
  9416                           	line	72
  9417                           	
  9418  0BEE                     l11099:	
  9419  0BEE  0834               	movf	(___fttol@lval+3),w
  9420  0BEF  00AB               	movwf	(?___fttol+3)
  9421  0BF0  0833               	movf	(___fttol@lval+2),w
  9422  0BF1  00AA               	movwf	(?___fttol+2)
  9423  0BF2  0832               	movf	(___fttol@lval+1),w
  9424  0BF3  00A9               	movwf	(?___fttol+1)
  9425  0BF4  0831               	movf	(___fttol@lval),w
  9426  0BF5  00A8               	movwf	(?___fttol)
  9427                           
  9428  0BF6  2BF7               	goto	l7637
  9429                           	
  9430  0BF7                     l11101:	
  9431                           	line	73
  9432                           	
  9433  0BF7                     l7637:	
  9434  0BF7  0008               	return
  9435                           	opt stack 0
  9436                           GLOBAL	__end_of___fttol
  9437  0BF8                     	__end_of___fttol:
  9438 ;; =============== function ___fttol ends ============
  9439                           
  9440                           	signat	___fttol,4220
  9441                           	global	___ftpack
  9442                           psect	text1096,local,class=CODE,delta=2
  9443                           global __ptext1096
  9444  09B5                     __ptext1096:
  9445                           
  9446 ;; *************** function ___ftpack *****************
  9447 ;; Defined at:
  9448 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  arg             3    0[BANK0 ] unsigned um
  9451 ;;  exp             1    3[BANK0 ] unsigned char 
  9452 ;;  sign            1    4[BANK0 ] unsigned char 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  3    0[BANK0 ] float 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2, status,0
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9464 ;;      Params:         0       5       0       0       0
  9465 ;;      Locals:         0       0       0       0       0
  9466 ;;      Temps:          0       3       0       0       0
  9467 ;;      Totals:         0       8       0       0       0
  9468 ;;Total ram usage:        8 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:    3
  9471 ;; This function calls:
  9472 ;;		Nothing
  9473 ;; This function is called by:
  9474 ;;		___ftmul
  9475 ;;		___awtoft
  9476 ;;		___ftadd
  9477 ;;		___ftdiv
  9478 ;;		___lbtoft
  9479 ;;		___abtoft
  9480 ;;		___lwtoft
  9481 ;;		___altoft
  9482 ;;		___lltoft
  9483 ;;		___attoft
  9484 ;;		___lttoft
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           psect	text1096
  9488                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  9489                           	line	63
  9490                           	global	__size_of___ftpack
  9491  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  9492                           	
  9493  09B5                     ___ftpack:	
  9494                           	opt	stack 3
  9495                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9496                           	line	64
  9497                           	
  9498  09B5                     l10985:	
  9499  09B5  1283               	bcf	status, 5	;RP0=0, select bank0
  9500  09B6  1303               	bcf	status, 6	;RP1=0, select bank0
  9501  09B7  0823               	movf	(___ftpack@exp),w
  9502  09B8  1D03               	skipz
  9503  09B9  29BB               	goto	u4490
  9504  09BA  29C3               	goto	l10989
  9505  09BB                     u4490:
  9506                           	
  9507  09BB                     l10987:	
  9508  09BB  0822               	movf	(___ftpack@arg+2),w
  9509  09BC  0421               	iorwf	(___ftpack@arg+1),w
  9510  09BD  0420               	iorwf	(___ftpack@arg),w
  9511  09BE  1D03               	skipz
  9512  09BF  29C1               	goto	u4501
  9513  09C0  29C2               	goto	u4500
  9514  09C1                     u4501:
  9515  09C1  29D9               	goto	l10995
  9516  09C2                     u4500:
  9517  09C2  29C3               	goto	l10989
  9518                           	
  9519  09C3                     l7861:	
  9520                           	line	65
  9521                           	
  9522  09C3                     l10989:	
  9523  09C3  3000               	movlw	0x0
  9524  09C4  00A0               	movwf	(?___ftpack)
  9525  09C5  3000               	movlw	0x0
  9526  09C6  00A1               	movwf	(?___ftpack+1)
  9527  09C7  3000               	movlw	0x0
  9528  09C8  00A2               	movwf	(?___ftpack+2)
  9529  09C9  2A31               	goto	l7862
  9530                           	
  9531  09CA                     l10991:	
  9532  09CA  2A31               	goto	l7862
  9533                           	
  9534  09CB                     l7859:	
  9535                           	line	66
  9536  09CB  29D9               	goto	l10995
  9537                           	
  9538  09CC                     l7864:	
  9539                           	line	67
  9540                           	
  9541  09CC                     l10993:	
  9542  09CC  3001               	movlw	(01h)
  9543  09CD  00A5               	movwf	(??___ftpack+0)+0
  9544  09CE  0825               	movf	(??___ftpack+0)+0,w
  9545  09CF  07A3               	addwf	(___ftpack@exp),f
  9546                           	line	68
  9547  09D0  3001               	movlw	01h
  9548  09D1                     u4515:
  9549  09D1  1003               	clrc
  9550  09D2  0CA2               	rrf	(___ftpack@arg+2),f
  9551  09D3  0CA1               	rrf	(___ftpack@arg+1),f
  9552  09D4  0CA0               	rrf	(___ftpack@arg),f
  9553  09D5  3EFF               	addlw	-1
  9554  09D6  1D03               	skipz
  9555  09D7  29D1               	goto	u4515
  9556                           
  9557  09D8  29D9               	goto	l10995
  9558                           	line	69
  9559                           	
  9560  09D9                     l7863:	
  9561                           	line	66
  9562                           	
  9563  09D9                     l10995:	
  9564  09D9  30FE               	movlw	low highword(0FE0000h)
  9565  09DA  0522               	andwf	(___ftpack@arg+2),w
  9566  09DB  1D03               	btfss	status,2
  9567  09DC  29DE               	goto	u4521
  9568  09DD  29DF               	goto	u4520
  9569  09DE                     u4521:
  9570  09DE  29CC               	goto	l10993
  9571  09DF                     u4520:
  9572  09DF  29F7               	goto	l7866
  9573                           	
  9574  09E0                     l7865:	
  9575                           	line	70
  9576  09E0  29F7               	goto	l7866
  9577                           	
  9578  09E1                     l7867:	
  9579                           	line	71
  9580                           	
  9581  09E1                     l10997:	
  9582  09E1  3001               	movlw	(01h)
  9583  09E2  00A5               	movwf	(??___ftpack+0)+0
  9584  09E3  0825               	movf	(??___ftpack+0)+0,w
  9585  09E4  07A3               	addwf	(___ftpack@exp),f
  9586                           	line	72
  9587                           	
  9588  09E5                     l10999:	
  9589  09E5  3001               	movlw	01h
  9590  09E6  07A0               	addwf	(___ftpack@arg),f
  9591  09E7  3000               	movlw	0
  9592  09E8  1803               	skipnc
  9593  09E9  3001               movlw 1
  9594  09EA  07A1               	addwf	(___ftpack@arg+1),f
  9595  09EB  3000               	movlw	0
  9596  09EC  1803               	skipnc
  9597  09ED  3001               movlw 1
  9598  09EE  07A2               	addwf	(___ftpack@arg+2),f
  9599                           	line	73
  9600                           	
  9601  09EF                     l11001:	
  9602  09EF  3001               	movlw	01h
  9603  09F0                     u4535:
  9604  09F0  1003               	clrc
  9605  09F1  0CA2               	rrf	(___ftpack@arg+2),f
  9606  09F2  0CA1               	rrf	(___ftpack@arg+1),f
  9607  09F3  0CA0               	rrf	(___ftpack@arg),f
  9608  09F4  3EFF               	addlw	-1
  9609  09F5  1D03               	skipz
  9610  09F6  29F0               	goto	u4535
  9611                           
  9612                           	line	74
  9613                           	
  9614  09F7                     l7866:	
  9615                           	line	70
  9616  09F7  30FF               	movlw	low highword(0FF0000h)
  9617  09F8  0522               	andwf	(___ftpack@arg+2),w
  9618  09F9  1D03               	btfss	status,2
  9619  09FA  29FC               	goto	u4541
  9620  09FB  29FD               	goto	u4540
  9621  09FC                     u4541:
  9622  09FC  29E1               	goto	l10997
  9623  09FD                     u4540:
  9624  09FD  2A0A               	goto	l11005
  9625                           	
  9626  09FE                     l7868:	
  9627                           	line	75
  9628  09FE  2A0A               	goto	l11005
  9629                           	
  9630  09FF                     l7870:	
  9631                           	line	76
  9632                           	
  9633  09FF                     l11003:	
  9634  09FF  3001               	movlw	low(01h)
  9635  0A00  02A3               	subwf	(___ftpack@exp),f
  9636                           	line	77
  9637  0A01  3001               	movlw	01h
  9638  0A02                     u4555:
  9639  0A02  1003               	clrc
  9640  0A03  0DA0               	rlf	(___ftpack@arg),f
  9641  0A04  0DA1               	rlf	(___ftpack@arg+1),f
  9642  0A05  0DA2               	rlf	(___ftpack@arg+2),f
  9643  0A06  3EFF               	addlw	-1
  9644  0A07  1D03               	skipz
  9645  0A08  2A02               	goto	u4555
  9646  0A09  2A0A               	goto	l11005
  9647                           	line	78
  9648                           	
  9649  0A0A                     l7869:	
  9650                           	line	75
  9651                           	
  9652  0A0A                     l11005:	
  9653  0A0A  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  9654  0A0B  2A0D               	goto	u4561
  9655  0A0C  2A0E               	goto	u4560
  9656  0A0D                     u4561:
  9657  0A0D  29FF               	goto	l11003
  9658  0A0E                     u4560:
  9659                           	
  9660  0A0E                     l7871:	
  9661                           	line	79
  9662  0A0E  1823               	btfsc	(___ftpack@exp),(0)&7
  9663  0A0F  2A11               	goto	u4571
  9664  0A10  2A12               	goto	u4570
  9665  0A11                     u4571:
  9666  0A11  2A18               	goto	l7872
  9667  0A12                     u4570:
  9668                           	line	80
  9669                           	
  9670  0A12                     l11007:	
  9671  0A12  30FF               	movlw	0FFh
  9672  0A13  05A0               	andwf	(___ftpack@arg),f
  9673  0A14  307F               	movlw	07Fh
  9674  0A15  05A1               	andwf	(___ftpack@arg+1),f
  9675  0A16  30FF               	movlw	0FFh
  9676  0A17  05A2               	andwf	(___ftpack@arg+2),f
  9677                           	
  9678  0A18                     l7872:	
  9679                           	line	81
  9680  0A18  1003               	clrc
  9681  0A19  0CA3               	rrf	(___ftpack@exp),f
  9682                           
  9683                           	line	82
  9684                           	
  9685  0A1A                     l11009:	
  9686  0A1A  0823               	movf	(___ftpack@exp),w
  9687  0A1B  00A5               	movwf	((??___ftpack+0)+0)
  9688  0A1C  01A6               	clrf	((??___ftpack+0)+0+1)
  9689  0A1D  01A7               	clrf	((??___ftpack+0)+0+2)
  9690  0A1E  3010               	movlw	010h
  9691  0A1F                     u4585:
  9692  0A1F  1003               	clrc
  9693  0A20  0DA5               	rlf	(??___ftpack+0)+0,f
  9694  0A21  0DA6               	rlf	(??___ftpack+0)+1,f
  9695  0A22  0DA7               	rlf	(??___ftpack+0)+2,f
  9696  0A23                     u4580:
  9697  0A23  3EFF               	addlw	-1
  9698  0A24  1D03               	skipz
  9699  0A25  2A1F               	goto	u4585
  9700  0A26  0825               	movf	0+(??___ftpack+0)+0,w
  9701  0A27  04A0               	iorwf	(___ftpack@arg),f
  9702  0A28  0826               	movf	1+(??___ftpack+0)+0,w
  9703  0A29  04A1               	iorwf	(___ftpack@arg+1),f
  9704  0A2A  0827               	movf	2+(??___ftpack+0)+0,w
  9705  0A2B  04A2               	iorwf	(___ftpack@arg+2),f
  9706                           	line	83
  9707                           	
  9708  0A2C                     l11011:	
  9709  0A2C  0824               	movf	(___ftpack@sign),w
  9710  0A2D  1D03               	skipz
  9711  0A2E  2A30               	goto	u4590
  9712  0A2F  2A31               	goto	l7873
  9713  0A30                     u4590:
  9714                           	line	84
  9715                           	
  9716  0A30                     l11013:	
  9717  0A30  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  9718                           	
  9719  0A31                     l7873:	
  9720                           	line	85
  9721                           	line	86
  9722                           	
  9723  0A31                     l7862:	
  9724  0A31  0008               	return
  9725                           	opt stack 0
  9726                           GLOBAL	__end_of___ftpack
  9727  0A32                     	__end_of___ftpack:
  9728 ;; =============== function ___ftpack ends ============
  9729                           
  9730                           	signat	___ftpack,12411
  9731                           	global	___lwmod
  9732                           psect	text1097,local,class=CODE,delta=2
  9733                           global __ptext1097
  9734  15E7                     __ptext1097:
  9735                           
  9736 ;; *************** function ___lwmod *****************
  9737 ;; Defined at:
  9738 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;  divisor         2   14[BANK0 ] unsigned int 
  9741 ;;  dividend        2   16[BANK0 ] unsigned int 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  counter         1   19[BANK0 ] unsigned char 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  2   14[BANK0 ] unsigned int 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9753 ;;      Params:         0       4       0       0       0
  9754 ;;      Locals:         0       1       0       0       0
  9755 ;;      Temps:          0       1       0       0       0
  9756 ;;      Totals:         0       6       0       0       0
  9757 ;;Total ram usage:        6 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    3
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_sprintf
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           psect	text1097
  9767                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9768                           	line	5
  9769                           	global	__size_of___lwmod
  9770  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  9771                           	
  9772  15E7                     ___lwmod:	
  9773                           	opt	stack 1
  9774                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9775                           	line	8
  9776                           	
  9777  15E7                     l10893:	
  9778  15E7  1283               	bcf	status, 5	;RP0=0, select bank0
  9779  15E8  1303               	bcf	status, 6	;RP1=0, select bank0
  9780  15E9  082F               	movf	(___lwmod@divisor+1),w
  9781  15EA  042E               	iorwf	(___lwmod@divisor),w
  9782  15EB  1903               	skipnz
  9783  15EC  2DEE               	goto	u4191
  9784  15ED  2DEF               	goto	u4190
  9785  15EE                     u4191:
  9786  15EE  2E25               	goto	l10911
  9787  15EF                     u4190:
  9788                           	line	9
  9789                           	
  9790  15EF                     l10895:	
  9791  15EF  01B3               	clrf	(___lwmod@counter)
  9792  15F0  1403               	bsf	status,0
  9793  15F1  0DB3               	rlf	(___lwmod@counter),f
  9794                           	line	10
  9795  15F2  2DFF               	goto	l10901
  9796                           	
  9797  15F3                     l7545:	
  9798                           	line	11
  9799                           	
  9800  15F3                     l10897:	
  9801  15F3  3001               	movlw	01h
  9802                           	
  9803  15F4                     u4205:
  9804  15F4  1003               	clrc
  9805  15F5  0DAE               	rlf	(___lwmod@divisor),f
  9806  15F6  0DAF               	rlf	(___lwmod@divisor+1),f
  9807  15F7  3EFF               	addlw	-1
  9808  15F8  1D03               	skipz
  9809  15F9  2DF4               	goto	u4205
  9810                           	line	12
  9811                           	
  9812  15FA                     l10899:	
  9813  15FA  3001               	movlw	(01h)
  9814  15FB  00B2               	movwf	(??___lwmod+0)+0
  9815  15FC  0832               	movf	(??___lwmod+0)+0,w
  9816  15FD  07B3               	addwf	(___lwmod@counter),f
  9817  15FE  2DFF               	goto	l10901
  9818                           	line	13
  9819                           	
  9820  15FF                     l7544:	
  9821                           	line	10
  9822                           	
  9823  15FF                     l10901:	
  9824  15FF  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  9825  1600  2E02               	goto	u4211
  9826  1601  2E03               	goto	u4210
  9827  1602                     u4211:
  9828  1602  2DF3               	goto	l10897
  9829  1603                     u4210:
  9830  1603  2E05               	goto	l10903
  9831                           	
  9832  1604                     l7546:	
  9833  1604  2E05               	goto	l10903
  9834                           	line	14
  9835                           	
  9836  1605                     l7547:	
  9837                           	line	15
  9838                           	
  9839  1605                     l10903:	
  9840  1605  082F               	movf	(___lwmod@divisor+1),w
  9841  1606  0231               	subwf	(___lwmod@dividend+1),w
  9842  1607  1D03               	skipz
  9843  1608  2E0B               	goto	u4225
  9844  1609  082E               	movf	(___lwmod@divisor),w
  9845  160A  0230               	subwf	(___lwmod@dividend),w
  9846  160B                     u4225:
  9847  160B  1C03               	skipc
  9848  160C  2E0E               	goto	u4221
  9849  160D  2E0F               	goto	u4220
  9850  160E                     u4221:
  9851  160E  2E16               	goto	l10907
  9852  160F                     u4220:
  9853                           	line	16
  9854                           	
  9855  160F                     l10905:	
  9856  160F  082E               	movf	(___lwmod@divisor),w
  9857  1610  02B0               	subwf	(___lwmod@dividend),f
  9858  1611  082F               	movf	(___lwmod@divisor+1),w
  9859  1612  1C03               	skipc
  9860  1613  03B1               	decf	(___lwmod@dividend+1),f
  9861  1614  02B1               	subwf	(___lwmod@dividend+1),f
  9862  1615  2E16               	goto	l10907
  9863                           	
  9864  1616                     l7548:	
  9865                           	line	17
  9866                           	
  9867  1616                     l10907:	
  9868  1616  3001               	movlw	01h
  9869                           	
  9870  1617                     u4235:
  9871  1617  1003               	clrc
  9872  1618  0CAF               	rrf	(___lwmod@divisor+1),f
  9873  1619  0CAE               	rrf	(___lwmod@divisor),f
  9874  161A  3EFF               	addlw	-1
  9875  161B  1D03               	skipz
  9876  161C  2E17               	goto	u4235
  9877                           	line	18
  9878                           	
  9879  161D                     l10909:	
  9880  161D  3001               	movlw	low(01h)
  9881  161E  02B3               	subwf	(___lwmod@counter),f
  9882  161F  1D03               	btfss	status,2
  9883  1620  2E22               	goto	u4241
  9884  1621  2E23               	goto	u4240
  9885  1622                     u4241:
  9886  1622  2E05               	goto	l10903
  9887  1623                     u4240:
  9888  1623  2E25               	goto	l10911
  9889                           	
  9890  1624                     l7549:	
  9891  1624  2E25               	goto	l10911
  9892                           	line	19
  9893                           	
  9894  1625                     l7543:	
  9895                           	line	20
  9896                           	
  9897  1625                     l10911:	
  9898  1625  0831               	movf	(___lwmod@dividend+1),w
  9899  1626  01AF               	clrf	(?___lwmod+1)
  9900  1627  07AF               	addwf	(?___lwmod+1)
  9901  1628  0830               	movf	(___lwmod@dividend),w
  9902  1629  01AE               	clrf	(?___lwmod)
  9903  162A  07AE               	addwf	(?___lwmod)
  9904                           
  9905  162B  2E2C               	goto	l7550
  9906                           	
  9907  162C                     l10913:	
  9908                           	line	21
  9909                           	
  9910  162C                     l7550:	
  9911  162C  0008               	return
  9912                           	opt stack 0
  9913                           GLOBAL	__end_of___lwmod
  9914  162D                     	__end_of___lwmod:
  9915 ;; =============== function ___lwmod ends ============
  9916                           
  9917                           	signat	___lwmod,8314
  9918                           	global	___lwdiv
  9919                           psect	text1098,local,class=CODE,delta=2
  9920                           global __ptext1098
  9921  16BA                     __ptext1098:
  9922                           
  9923 ;; *************** function ___lwdiv *****************
  9924 ;; Defined at:
  9925 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  divisor         2    6[BANK0 ] unsigned int 
  9928 ;;  dividend        2    8[BANK0 ] unsigned int 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;  quotient        2   11[BANK0 ] unsigned int 
  9931 ;;  counter         1   13[BANK0 ] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  2    6[BANK0 ] unsigned int 
  9934 ;; Registers used:
  9935 ;;		wreg, status,2, status,0
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9941 ;;      Params:         0       4       0       0       0
  9942 ;;      Locals:         0       3       0       0       0
  9943 ;;      Temps:          0       1       0       0       0
  9944 ;;      Totals:         0       8       0       0       0
  9945 ;;Total ram usage:        8 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:    3
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_readAvgDistance
  9952 ;;		_ADCconvert
  9953 ;;		_sprintf
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           psect	text1098
  9957                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9958                           	line	5
  9959                           	global	__size_of___lwdiv
  9960  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  9961                           	
  9962  16BA                     ___lwdiv:	
  9963                           	opt	stack 1
  9964                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9965                           	line	9
  9966                           	
  9967  16BA                     l10867:	
  9968  16BA  1283               	bcf	status, 5	;RP0=0, select bank0
  9969  16BB  1303               	bcf	status, 6	;RP1=0, select bank0
  9970  16BC  01AB               	clrf	(___lwdiv@quotient)
  9971  16BD  01AC               	clrf	(___lwdiv@quotient+1)
  9972                           	line	10
  9973                           	
  9974  16BE                     l10869:	
  9975  16BE  0827               	movf	(___lwdiv@divisor+1),w
  9976  16BF  0426               	iorwf	(___lwdiv@divisor),w
  9977  16C0  1903               	skipnz
  9978  16C1  2EC3               	goto	u4121
  9979  16C2  2EC4               	goto	u4120
  9980  16C3                     u4121:
  9981  16C3  2F02               	goto	l10889
  9982  16C4                     u4120:
  9983                           	line	11
  9984                           	
  9985  16C4                     l10871:	
  9986  16C4  01AD               	clrf	(___lwdiv@counter)
  9987  16C5  1403               	bsf	status,0
  9988  16C6  0DAD               	rlf	(___lwdiv@counter),f
  9989                           	line	12
  9990  16C7  2ED4               	goto	l10877
  9991                           	
  9992  16C8                     l7535:	
  9993                           	line	13
  9994                           	
  9995  16C8                     l10873:	
  9996  16C8  3001               	movlw	01h
  9997                           	
  9998  16C9                     u4135:
  9999  16C9  1003               	clrc
 10000  16CA  0DA6               	rlf	(___lwdiv@divisor),f
 10001  16CB  0DA7               	rlf	(___lwdiv@divisor+1),f
 10002  16CC  3EFF               	addlw	-1
 10003  16CD  1D03               	skipz
 10004  16CE  2EC9               	goto	u4135
 10005                           	line	14
 10006                           	
 10007  16CF                     l10875:	
 10008  16CF  3001               	movlw	(01h)
 10009  16D0  00AA               	movwf	(??___lwdiv+0)+0
 10010  16D1  082A               	movf	(??___lwdiv+0)+0,w
 10011  16D2  07AD               	addwf	(___lwdiv@counter),f
 10012  16D3  2ED4               	goto	l10877
 10013                           	line	15
 10014                           	
 10015  16D4                     l7534:	
 10016                           	line	12
 10017                           	
 10018  16D4                     l10877:	
 10019  16D4  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 10020  16D5  2ED7               	goto	u4141
 10021  16D6  2ED8               	goto	u4140
 10022  16D7                     u4141:
 10023  16D7  2EC8               	goto	l10873
 10024  16D8                     u4140:
 10025  16D8  2EDA               	goto	l10879
 10026                           	
 10027  16D9                     l7536:	
 10028  16D9  2EDA               	goto	l10879
 10029                           	line	16
 10030                           	
 10031  16DA                     l7537:	
 10032                           	line	17
 10033                           	
 10034  16DA                     l10879:	
 10035  16DA  3001               	movlw	01h
 10036                           	
 10037  16DB                     u4155:
 10038  16DB  1003               	clrc
 10039  16DC  0DAB               	rlf	(___lwdiv@quotient),f
 10040  16DD  0DAC               	rlf	(___lwdiv@quotient+1),f
 10041  16DE  3EFF               	addlw	-1
 10042  16DF  1D03               	skipz
 10043  16E0  2EDB               	goto	u4155
 10044                           	line	18
 10045  16E1  0827               	movf	(___lwdiv@divisor+1),w
 10046  16E2  0229               	subwf	(___lwdiv@dividend+1),w
 10047  16E3  1D03               	skipz
 10048  16E4  2EE7               	goto	u4165
 10049  16E5  0826               	movf	(___lwdiv@divisor),w
 10050  16E6  0228               	subwf	(___lwdiv@dividend),w
 10051  16E7                     u4165:
 10052  16E7  1C03               	skipc
 10053  16E8  2EEA               	goto	u4161
 10054  16E9  2EEB               	goto	u4160
 10055  16EA                     u4161:
 10056  16EA  2EF3               	goto	l10885
 10057  16EB                     u4160:
 10058                           	line	19
 10059                           	
 10060  16EB                     l10881:	
 10061  16EB  0826               	movf	(___lwdiv@divisor),w
 10062  16EC  02A8               	subwf	(___lwdiv@dividend),f
 10063  16ED  0827               	movf	(___lwdiv@divisor+1),w
 10064  16EE  1C03               	skipc
 10065  16EF  03A9               	decf	(___lwdiv@dividend+1),f
 10066  16F0  02A9               	subwf	(___lwdiv@dividend+1),f
 10067                           	line	20
 10068                           	
 10069  16F1                     l10883:	
 10070  16F1  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 10071  16F2  2EF3               	goto	l10885
 10072                           	line	21
 10073                           	
 10074  16F3                     l7538:	
 10075                           	line	22
 10076                           	
 10077  16F3                     l10885:	
 10078  16F3  3001               	movlw	01h
 10079                           	
 10080  16F4                     u4175:
 10081  16F4  1003               	clrc
 10082  16F5  0CA7               	rrf	(___lwdiv@divisor+1),f
 10083  16F6  0CA6               	rrf	(___lwdiv@divisor),f
 10084  16F7  3EFF               	addlw	-1
 10085  16F8  1D03               	skipz
 10086  16F9  2EF4               	goto	u4175
 10087                           	line	23
 10088                           	
 10089  16FA                     l10887:	
 10090  16FA  3001               	movlw	low(01h)
 10091  16FB  02AD               	subwf	(___lwdiv@counter),f
 10092  16FC  1D03               	btfss	status,2
 10093  16FD  2EFF               	goto	u4181
 10094  16FE  2F00               	goto	u4180
 10095  16FF                     u4181:
 10096  16FF  2EDA               	goto	l10879
 10097  1700                     u4180:
 10098  1700  2F02               	goto	l10889
 10099                           	
 10100  1701                     l7539:	
 10101  1701  2F02               	goto	l10889
 10102                           	line	24
 10103                           	
 10104  1702                     l7533:	
 10105                           	line	25
 10106                           	
 10107  1702                     l10889:	
 10108  1702  082C               	movf	(___lwdiv@quotient+1),w
 10109  1703  01A7               	clrf	(?___lwdiv+1)
 10110  1704  07A7               	addwf	(?___lwdiv+1)
 10111  1705  082B               	movf	(___lwdiv@quotient),w
 10112  1706  01A6               	clrf	(?___lwdiv)
 10113  1707  07A6               	addwf	(?___lwdiv)
 10114                           
 10115  1708  2F09               	goto	l7540
 10116                           	
 10117  1709                     l10891:	
 10118                           	line	26
 10119                           	
 10120  1709                     l7540:	
 10121  1709  0008               	return
 10122                           	opt stack 0
 10123                           GLOBAL	__end_of___lwdiv
 10124  170A                     	__end_of___lwdiv:
 10125 ;; =============== function ___lwdiv ends ============
 10126                           
 10127                           	signat	___lwdiv,8314
 10128                           	global	___wmul
 10129                           psect	text1099,local,class=CODE,delta=2
 10130                           global __ptext1099
 10131  1423                     __ptext1099:
 10132                           
 10133 ;; *************** function ___wmul *****************
 10134 ;; Defined at:
 10135 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10138 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  product         2    4[BANK0 ] unsigned int 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  2    0[BANK0 ] unsigned int 
 10143 ;; Registers used:
 10144 ;;		wreg, status,2, status,0
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10150 ;;      Params:         0       4       0       0       0
 10151 ;;      Locals:         0       2       0       0       0
 10152 ;;      Temps:          0       0       0       0       0
 10153 ;;      Totals:         0       6       0       0       0
 10154 ;;Total ram usage:        6 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:    3
 10157 ;; This function calls:
 10158 ;;		Nothing
 10159 ;; This function is called by:
 10160 ;;		_ADCconvert
 10161 ;;		_abs
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           psect	text1099
 10165                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10166                           	line	3
 10167                           	global	__size_of___wmul
 10168  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10169                           	
 10170  1423                     ___wmul:	
 10171                           	opt	stack 1
 10172                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10173                           	line	4
 10174                           	
 10175  1423                     l10855:	
 10176  1423  1283               	bcf	status, 5	;RP0=0, select bank0
 10177  1424  1303               	bcf	status, 6	;RP1=0, select bank0
 10178  1425  01A4               	clrf	(___wmul@product)
 10179  1426  01A5               	clrf	(___wmul@product+1)
 10180  1427  2C28               	goto	l10857
 10181                           	line	6
 10182                           	
 10183  1428                     l7527:	
 10184                           	line	7
 10185                           	
 10186  1428                     l10857:	
 10187  1428  1C20               	btfss	(___wmul@multiplier),(0)&7
 10188  1429  2C2B               	goto	u4081
 10189  142A  2C2C               	goto	u4080
 10190  142B                     u4081:
 10191  142B  2C32               	goto	l7528
 10192  142C                     u4080:
 10193                           	line	8
 10194                           	
 10195  142C                     l10859:	
 10196  142C  0822               	movf	(___wmul@multiplicand),w
 10197  142D  07A4               	addwf	(___wmul@product),f
 10198  142E  1803               	skipnc
 10199  142F  0AA5               	incf	(___wmul@product+1),f
 10200  1430  0823               	movf	(___wmul@multiplicand+1),w
 10201  1431  07A5               	addwf	(___wmul@product+1),f
 10202                           	
 10203  1432                     l7528:	
 10204                           	line	9
 10205  1432  3001               	movlw	01h
 10206                           	
 10207  1433                     u4095:
 10208  1433  1003               	clrc
 10209  1434  0DA2               	rlf	(___wmul@multiplicand),f
 10210  1435  0DA3               	rlf	(___wmul@multiplicand+1),f
 10211  1436  3EFF               	addlw	-1
 10212  1437  1D03               	skipz
 10213  1438  2C33               	goto	u4095
 10214                           	line	10
 10215                           	
 10216  1439                     l10861:	
 10217  1439  3001               	movlw	01h
 10218                           	
 10219  143A                     u4105:
 10220  143A  1003               	clrc
 10221  143B  0CA1               	rrf	(___wmul@multiplier+1),f
 10222  143C  0CA0               	rrf	(___wmul@multiplier),f
 10223  143D  3EFF               	addlw	-1
 10224  143E  1D03               	skipz
 10225  143F  2C3A               	goto	u4105
 10226                           	line	11
 10227  1440  0821               	movf	((___wmul@multiplier+1)),w
 10228  1441  0420               	iorwf	((___wmul@multiplier)),w
 10229  1442  1D03               	skipz
 10230  1443  2C45               	goto	u4111
 10231  1444  2C46               	goto	u4110
 10232  1445                     u4111:
 10233  1445  2C28               	goto	l10857
 10234  1446                     u4110:
 10235  1446  2C47               	goto	l10863
 10236                           	
 10237  1447                     l7529:	
 10238                           	line	12
 10239                           	
 10240  1447                     l10863:	
 10241  1447  0825               	movf	(___wmul@product+1),w
 10242  1448  01A1               	clrf	(?___wmul+1)
 10243  1449  07A1               	addwf	(?___wmul+1)
 10244  144A  0824               	movf	(___wmul@product),w
 10245  144B  01A0               	clrf	(?___wmul)
 10246  144C  07A0               	addwf	(?___wmul)
 10247                           
 10248  144D  2C4E               	goto	l7530
 10249                           	
 10250  144E                     l10865:	
 10251                           	line	13
 10252                           	
 10253  144E                     l7530:	
 10254  144E  0008               	return
 10255                           	opt stack 0
 10256                           GLOBAL	__end_of___wmul
 10257  144F                     	__end_of___wmul:
 10258 ;; =============== function ___wmul ends ============
 10259                           
 10260                           	signat	___wmul,8314
 10261                           	global	_ser_isrx
 10262                           psect	text1100,local,class=CODE,delta=2
 10263                           global __ptext1100
 10264  132F                     __ptext1100:
 10265                           
 10266 ;; *************** function _ser_isrx *****************
 10267 ;; Defined at:
 10268 ;;		line 45 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;		None
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;		None               void
 10275 ;; Registers used:
 10276 ;;		wreg, status,2, status,0
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10282 ;;      Params:         0       0       0       0       0
 10283 ;;      Locals:         0       0       0       0       0
 10284 ;;      Temps:          0       0       0       0       0
 10285 ;;      Totals:         0       0       0       0       0
 10286 ;;Total ram usage:        0 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:    3
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_ser_getch
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           psect	text1100
 10296                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
 10297                           	line	45
 10298                           	global	__size_of_ser_isrx
 10299  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 10300                           	
 10301  132F                     _ser_isrx:	
 10302                           	opt	stack 1
 10303                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 10304                           	line	46
 10305                           	
 10306  132F                     l10807:	
 10307                           ;ser.c: 46: if(OERR) {
 10308  132F  1283               	bcf	status, 5	;RP0=0, select bank0
 10309  1330  1303               	bcf	status, 6	;RP1=0, select bank0
 10310  1331  1C98               	btfss	(193/8),(193)&7
 10311  1332  2B34               	goto	u4011
 10312  1333  2B35               	goto	u4010
 10313  1334                     u4011:
 10314  1334  2B3A               	goto	l10815
 10315  1335                     u4010:
 10316                           	line	47
 10317                           	
 10318  1335                     l10809:	
 10319                           ;ser.c: 47: CREN = 0;
 10320  1335  1218               	bcf	(196/8),(196)&7
 10321                           	line	48
 10322                           ;ser.c: 48: CREN = 1;
 10323  1336  1618               	bsf	(196/8),(196)&7
 10324                           	line	49
 10325                           	
 10326  1337                     l10811:	
 10327                           ;ser.c: 49: return 0;
 10328  1337  1003               	clrc
 10329                           	
 10330  1338  2B45               	goto	l6782
 10331                           	
 10332  1339                     l10813:	
 10333  1339  2B45               	goto	l6782
 10334                           	line	50
 10335                           	
 10336  133A                     l6781:	
 10337                           	line	51
 10338                           	
 10339  133A                     l10815:	
 10340                           ;ser.c: 50: }
 10341                           ;ser.c: 51: return (rxiptr!=rxoptr);
 10342  133A  086D               	movf	(_rxiptr),w	;volatile
 10343  133B  066E               	xorwf	(_rxoptr),w	;volatile
 10344  133C  1D03               	skipz
 10345  133D  2B3F               	goto	u4021
 10346  133E  2B40               	goto	u4020
 10347  133F                     u4021:
 10348  133F  2B42               	goto	l10819
 10349  1340                     u4020:
 10350                           	
 10351  1340                     l10817:	
 10352  1340  1003               	clrc
 10353                           	
 10354  1341  2B45               	goto	l6782
 10355                           	
 10356  1342                     l10461:	
 10357                           	
 10358  1342                     l10819:	
 10359  1342  1403               	setc
 10360                           	
 10361  1343  2B45               	goto	l6782
 10362                           	
 10363  1344                     l10463:	
 10364  1344  2B45               	goto	l6782
 10365                           	
 10366  1345                     l10821:	
 10367                           	line	52
 10368                           	
 10369  1345                     l6782:	
 10370  1345  0008               	return
 10371                           	opt stack 0
 10372                           GLOBAL	__end_of_ser_isrx
 10373  1346                     	__end_of_ser_isrx:
 10374 ;; =============== function _ser_isrx ends ============
 10375                           
 10376                           	signat	_ser_isrx,88
 10377                           	global	_spi_transfer
 10378                           psect	text1101,local,class=CODE,delta=2
 10379                           global __ptext1101
 10380  12DB                     __ptext1101:
 10381                           
 10382 ;; *************** function _spi_transfer *****************
 10383 ;; Defined at:
 10384 ;;		line 34 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\steppermotor.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  data            1    wreg     unsigned char 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;  data            1    2[BANK0 ] unsigned char 
 10389 ;;  temp            1    1[BANK0 ] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      unsigned char 
 10392 ;; Registers used:
 10393 ;;		wreg
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10399 ;;      Params:         0       0       0       0       0
 10400 ;;      Locals:         0       2       0       0       0
 10401 ;;      Temps:          0       1       0       0       0
 10402 ;;      Totals:         0       3       0       0       0
 10403 ;;Total ram usage:        3 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    3
 10406 ;; This function calls:
 10407 ;;		Nothing
 10408 ;; This function is called by:
 10409 ;;		_rotate
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           psect	text1101
 10413                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\steppermotor.c"
 10414                           	line	34
 10415                           	global	__size_of_spi_transfer
 10416  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 10417                           	
 10418  12DB                     _spi_transfer:	
 10419                           	opt	stack 3
 10420                           ; Regs used in _spi_transfer: [wreg]
 10421                           ;spi_transfer@data stored from wreg
 10422  12DB  1283               	bcf	status, 5	;RP0=0, select bank0
 10423  12DC  1303               	bcf	status, 6	;RP1=0, select bank0
 10424  12DD  00A2               	movwf	(spi_transfer@data)
 10425                           	line	35
 10426                           	
 10427  12DE                     l10693:	
 10428                           ;steppermotor.c: 35: unsigned char temp = 0;
 10429  12DE  01A1               	clrf	(spi_transfer@temp)
 10430                           	line	37
 10431                           ;steppermotor.c: 37: SSPIF = 0;
 10432  12DF  118C               	bcf	(99/8),(99)&7
 10433                           	line	38
 10434                           	
 10435  12E0                     l10695:	
 10436                           ;steppermotor.c: 38: SSPBUF = data;
 10437  12E0  0822               	movf	(spi_transfer@data),w
 10438  12E1  0093               	movwf	(19)	;volatile
 10439                           	line	40
 10440                           ;steppermotor.c: 40: while (SSPIF == 0);
 10441  12E2  2AE3               	goto	l3737
 10442                           	
 10443  12E3                     l3738:	
 10444                           	
 10445  12E3                     l3737:	
 10446  12E3  1D8C               	btfss	(99/8),(99)&7
 10447  12E4  2AE6               	goto	u3811
 10448  12E5  2AE7               	goto	u3810
 10449  12E6                     u3811:
 10450  12E6  2AE3               	goto	l3737
 10451  12E7                     u3810:
 10452  12E7  2AE8               	goto	l10697
 10453                           	
 10454  12E8                     l3739:	
 10455                           	line	41
 10456                           	
 10457  12E8                     l10697:	
 10458                           ;steppermotor.c: 41: temp = SSPBUF;
 10459  12E8  0813               	movf	(19),w	;volatile
 10460  12E9  00A0               	movwf	(??_spi_transfer+0)+0
 10461  12EA  0820               	movf	(??_spi_transfer+0)+0,w
 10462  12EB  00A1               	movwf	(spi_transfer@temp)
 10463                           	line	42
 10464                           	
 10465  12EC                     l10699:	
 10466                           ;steppermotor.c: 42: SSPIF = 0;
 10467  12EC  118C               	bcf	(99/8),(99)&7
 10468  12ED  2AEE               	goto	l3740
 10469                           	line	44
 10470                           	
 10471  12EE                     l10701:	
 10472                           	line	45
 10473                           ;steppermotor.c: 44: return temp;
 10474                           ;	Return value of _spi_transfer is never used
 10475                           	
 10476  12EE                     l3740:	
 10477  12EE  0008               	return
 10478                           	opt stack 0
 10479                           GLOBAL	__end_of_spi_transfer
 10480  12EF                     	__end_of_spi_transfer:
 10481 ;; =============== function _spi_transfer ends ============
 10482                           
 10483                           	signat	_spi_transfer,4217
 10484                           	global	_Menu
 10485                           psect	text1102,local,class=CODE,delta=2
 10486                           global __ptext1102
 10487  1673                     __ptext1102:
 10488                           
 10489 ;; *************** function _Menu *****************
 10490 ;; Defined at:
 10491 ;;		line 181 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  BTN_input       1    wreg     unsigned char 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      unsigned char 
 10498 ;; Registers used:
 10499 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10505 ;;      Params:         0       0       0       0       0
 10506 ;;      Locals:         0       1       0       0       0
 10507 ;;      Temps:          0       0       0       0       0
 10508 ;;      Totals:         0       1       0       0       0
 10509 ;;Total ram usage:        1 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:    3
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_main
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           psect	text1102
 10519                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
 10520                           	line	181
 10521                           	global	__size_of_Menu
 10522  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 10523                           	
 10524  1673                     _Menu:	
 10525                           	opt	stack 4
 10526                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 10527                           ;Menu@BTN_input stored from wreg
 10528  1673  1283               	bcf	status, 5	;RP0=0, select bank0
 10529  1674  1303               	bcf	status, 6	;RP1=0, select bank0
 10530  1675  00A0               	movwf	(Menu@BTN_input)
 10531                           	line	182
 10532                           	
 10533  1676                     l10669:	
 10534                           ;HMI.c: 182: switch (BTN_input)
 10535  1676  2EA5               	goto	l10687
 10536                           	line	184
 10537                           ;HMI.c: 183: {
 10538                           ;HMI.c: 184: case 1:
 10539                           	
 10540  1677                     l4569:	
 10541                           	line	186
 10542                           ;HMI.c: 186: break;
 10543  1677  2EB7               	goto	l10689
 10544                           	line	187
 10545                           ;HMI.c: 187: case 2:
 10546                           	
 10547  1678                     l4571:	
 10548                           	line	189
 10549                           ;HMI.c: 189: break;
 10550  1678  2EB7               	goto	l10689
 10551                           	line	190
 10552                           ;HMI.c: 190: case 3:
 10553                           	
 10554  1679                     l4572:	
 10555                           	line	191
 10556                           	
 10557  1679                     l10671:	
 10558                           ;HMI.c: 191: pos--;
 10559  1679  30FF               	movlw	low(-1)
 10560  167A  1683               	bsf	status, 5	;RP0=1, select bank1
 10561  167B  1303               	bcf	status, 6	;RP1=0, select bank1
 10562  167C  07BC               	addwf	(_pos)^080h,f
 10563  167D  1803               	skipnc
 10564  167E  0ABD               	incf	(_pos+1)^080h,f
 10565  167F  30FF               	movlw	high(-1)
 10566  1680  07BD               	addwf	(_pos+1)^080h,f
 10567                           	line	192
 10568                           	
 10569  1681                     l10673:	
 10570                           ;HMI.c: 192: if (pos < 0)
 10571  1681  1FBD               	btfss	(_pos+1)^080h,7
 10572  1682  2E84               	goto	u3791
 10573  1683  2E85               	goto	u3790
 10574  1684                     u3791:
 10575  1684  2EB7               	goto	l10689
 10576  1685                     u3790:
 10577                           	line	193
 10578                           	
 10579  1685                     l10675:	
 10580                           ;HMI.c: 193: pos = 6 - 1;
 10581  1685  3005               	movlw	low(05h)
 10582  1686  00BC               	movwf	(_pos)^080h
 10583  1687  3000               	movlw	high(05h)
 10584  1688  00BD               	movwf	((_pos)^080h)+1
 10585  1689  2EB7               	goto	l10689
 10586                           	
 10587  168A                     l4573:	
 10588                           	line	195
 10589                           ;HMI.c: 195: break;
 10590  168A  2EB7               	goto	l10689
 10591                           	line	196
 10592                           ;HMI.c: 196: case 4:
 10593                           	
 10594  168B                     l4574:	
 10595                           	line	197
 10596                           	
 10597  168B                     l10677:	
 10598                           ;HMI.c: 197: pos++;
 10599  168B  3001               	movlw	low(01h)
 10600  168C  1683               	bsf	status, 5	;RP0=1, select bank1
 10601  168D  1303               	bcf	status, 6	;RP1=0, select bank1
 10602  168E  07BC               	addwf	(_pos)^080h,f
 10603  168F  1803               	skipnc
 10604  1690  0ABD               	incf	(_pos+1)^080h,f
 10605  1691  3000               	movlw	high(01h)
 10606  1692  07BD               	addwf	(_pos+1)^080h,f
 10607                           	line	198
 10608                           ;HMI.c: 198: if (pos == 6)
 10609  1693  3006               	movlw	06h
 10610  1694  063C               	xorwf	(_pos)^080h,w
 10611  1695  043D               	iorwf	(_pos+1)^080h,w
 10612  1696  1D03               	skipz
 10613  1697  2E99               	goto	u3801
 10614  1698  2E9A               	goto	u3800
 10615  1699                     u3801:
 10616  1699  2EB7               	goto	l10689
 10617  169A                     u3800:
 10618                           	line	199
 10619                           	
 10620  169A                     l10679:	
 10621                           ;HMI.c: 199: pos = 0;
 10622  169A  01BC               	clrf	(_pos)^080h
 10623  169B  01BD               	clrf	(_pos+1)^080h
 10624  169C  2EB7               	goto	l10689
 10625                           	
 10626  169D                     l4575:	
 10627                           	line	201
 10628                           ;HMI.c: 201: break;
 10629  169D  2EB7               	goto	l10689
 10630                           	line	202
 10631                           ;HMI.c: 202: case 5:
 10632                           	
 10633  169E                     l4576:	
 10634                           	line	203
 10635                           	
 10636  169E                     l10681:	
 10637                           ;HMI.c: 203: return pos;
 10638  169E  1683               	bsf	status, 5	;RP0=1, select bank1
 10639  169F  1303               	bcf	status, 6	;RP1=0, select bank1
 10640  16A0  083C               	movf	(_pos)^080h,w
 10641  16A1  2EB9               	goto	l4577
 10642                           	
 10643  16A2                     l10683:	
 10644  16A2  2EB9               	goto	l4577
 10645                           	line	206
 10646                           ;HMI.c: 206: default:
 10647                           	
 10648  16A3                     l4578:	
 10649                           	line	208
 10650                           ;HMI.c: 208: break;
 10651  16A3  2EB7               	goto	l10689
 10652                           	line	209
 10653                           	
 10654  16A4                     l10685:	
 10655                           ;HMI.c: 209: }
 10656  16A4  2EB7               	goto	l10689
 10657                           	line	182
 10658                           	
 10659  16A5                     l4568:	
 10660                           	
 10661  16A5                     l10687:	
 10662  16A5  1283               	bcf	status, 5	;RP0=0, select bank0
 10663  16A6  0820               	movf	(Menu@BTN_input),w
 10664                           	; Switch size 1, requested type "space"
 10665                           ; Number of cases is 5, Range of values is 1 to 5
 10666                           ; switch strategies available:
 10667                           ; Name         Instructions Cycles
 10668                           ; simple_byte           16     9 (average)
 10669                           ; direct_byte           26    11 (fixed)
 10670                           ; jumptable            263     9 (fixed)
 10671                           ;	Chosen strategy is simple_byte
 10672                           
 10673                           	opt asmopt_off
 10674  16A7  3A01               	xorlw	1^0	; case 1
 10675  16A8  1903               	skipnz
 10676  16A9  2EB7               	goto	l10689
 10677  16AA  3A03               	xorlw	2^1	; case 2
 10678  16AB  1903               	skipnz
 10679  16AC  2EB7               	goto	l10689
 10680  16AD  3A01               	xorlw	3^2	; case 3
 10681  16AE  1903               	skipnz
 10682  16AF  2E79               	goto	l10671
 10683  16B0  3A07               	xorlw	4^3	; case 4
 10684  16B1  1903               	skipnz
 10685  16B2  2E8B               	goto	l10677
 10686  16B3  3A01               	xorlw	5^4	; case 5
 10687  16B4  1903               	skipnz
 10688  16B5  2E9E               	goto	l10681
 10689  16B6  2EB7               	goto	l10689
 10690                           	opt asmopt_on
 10691                           
 10692                           	line	209
 10693                           	
 10694  16B7                     l4570:	
 10695                           	line	210
 10696                           	
 10697  16B7                     l10689:	
 10698                           ;HMI.c: 210: return 255;
 10699  16B7  30FF               	movlw	(0FFh)
 10700  16B8  2EB9               	goto	l4577
 10701                           	
 10702  16B9                     l10691:	
 10703                           	line	211
 10704                           	
 10705  16B9                     l4577:	
 10706  16B9  0008               	return
 10707                           	opt stack 0
 10708                           GLOBAL	__end_of_Menu
 10709  16BA                     	__end_of_Menu:
 10710 ;; =============== function _Menu ends ============
 10711                           
 10712                           	signat	_Menu,4217
 10713                           	global	_ser_putch
 10714                           psect	text1103,local,class=CODE,delta=2
 10715                           global __ptext1103
 10716  1381                     __ptext1103:
 10717                           
 10718 ;; *************** function _ser_putch *****************
 10719 ;; Defined at:
 10720 ;;		line 70 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
 10721 ;; Parameters:    Size  Location     Type
 10722 ;;  c               1    wreg     unsigned char 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;  c               1    1[BANK0 ] unsigned char 
 10725 ;; Return value:  Size  Location     Type
 10726 ;;		None               void
 10727 ;; Registers used:
 10728 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10734 ;;      Params:         0       0       0       0       0
 10735 ;;      Locals:         0       1       0       0       0
 10736 ;;      Temps:          0       1       0       0       0
 10737 ;;      Totals:         0       2       0       0       0
 10738 ;;Total ram usage:        2 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:    3
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_ChargeMode
 10745 ;;		_robo_init
 10746 ;;		_robot_read
 10747 ;;		_robotMoveSpeed
 10748 ;;		_robotMove
 10749 ;;		_robotTurn
 10750 ;;		_ser_puts
 10751 ;;		_ser_puts2
 10752 ;;		_ser_puthex
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           psect	text1103
 10756                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
 10757                           	line	70
 10758                           	global	__size_of_ser_putch
 10759  0026                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 10760                           	
 10761  1381                     _ser_putch:	
 10762                           	opt	stack 3
 10763                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 10764                           ;ser_putch@c stored from wreg
 10765  1381  1283               	bcf	status, 5	;RP0=0, select bank0
 10766  1382  1303               	bcf	status, 6	;RP1=0, select bank0
 10767  1383  00A1               	movwf	(ser_putch@c)
 10768                           	line	71
 10769                           	
 10770  1384                     l10657:	
 10771                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 10772  1384  2B86               	goto	l10659
 10773                           	
 10774  1385                     l6792:	
 10775                           	line	72
 10776                           ;ser.c: 72: continue;
 10777  1385  2B86               	goto	l10659
 10778                           	
 10779  1386                     l6791:	
 10780                           	line	71
 10781                           	
 10782  1386                     l10659:	
 10783  1386  1283               	bcf	status, 5	;RP0=0, select bank0
 10784  1387  086F               	movf	(_txiptr),w	;volatile
 10785  1388  3E01               	addlw	01h
 10786  1389  390F               	andlw	0Fh
 10787  138A  1683               	bsf	status, 5	;RP0=1, select bank1
 10788  138B  1303               	bcf	status, 6	;RP1=0, select bank1
 10789  138C  0653               	xorwf	(_txoptr)^080h,w	;volatile
 10790  138D  1903               	skipnz
 10791  138E  2B90               	goto	u3781
 10792  138F  2B91               	goto	u3780
 10793  1390                     u3781:
 10794  1390  2B86               	goto	l10659
 10795  1391                     u3780:
 10796                           	
 10797  1391                     l6793:	
 10798                           	line	73
 10799                           ;ser.c: 73: GIE=0;
 10800  1391  138B               	bcf	(95/8),(95)&7
 10801                           	line	74
 10802                           	
 10803  1392                     l10661:	
 10804                           ;ser.c: 74: txfifo[txiptr] = c;
 10805  1392  1283               	bcf	status, 5	;RP0=0, select bank0
 10806  1393  1303               	bcf	status, 6	;RP1=0, select bank0
 10807  1394  0821               	movf	(ser_putch@c),w
 10808  1395  00A0               	movwf	(??_ser_putch+0)+0
 10809  1396  086F               	movf	(_txiptr),w
 10810  1397  3EA0               	addlw	_txfifo&0ffh
 10811  1398  0084               	movwf	fsr0
 10812  1399  0820               	movf	(??_ser_putch+0)+0,w
 10813  139A  1783               	bsf	status, 7	;select IRP bank3
 10814  139B  0080               	movwf	indf
 10815                           	line	75
 10816                           	
 10817  139C                     l10663:	
 10818                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 10819  139C  086F               	movf	(_txiptr),w	;volatile
 10820  139D  3E01               	addlw	01h
 10821  139E  390F               	andlw	0Fh
 10822  139F  00A0               	movwf	(??_ser_putch+0)+0
 10823  13A0  0820               	movf	(??_ser_putch+0)+0,w
 10824  13A1  00EF               	movwf	(_txiptr)	;volatile
 10825                           	line	76
 10826                           	
 10827  13A2                     l10665:	
 10828                           ;ser.c: 76: TXIE=1;
 10829  13A2  1683               	bsf	status, 5	;RP0=1, select bank1
 10830  13A3  1303               	bcf	status, 6	;RP1=0, select bank1
 10831  13A4  160C               	bsf	(1124/8)^080h,(1124)&7
 10832                           	line	77
 10833                           	
 10834  13A5                     l10667:	
 10835                           ;ser.c: 77: GIE=1;
 10836  13A5  178B               	bsf	(95/8),(95)&7
 10837                           	line	78
 10838                           	
 10839  13A6                     l6794:	
 10840  13A6  0008               	return
 10841                           	opt stack 0
 10842                           GLOBAL	__end_of_ser_putch
 10843  13A7                     	__end_of_ser_putch:
 10844 ;; =============== function _ser_putch ends ============
 10845                           
 10846                           	signat	_ser_putch,4216
 10847                           	global	_ser_init
 10848                           psect	text1104,local,class=CODE,delta=2
 10849                           global __ptext1104
 10850  13A7                     __ptext1104:
 10851                           
 10852 ;; *************** function _ser_init *****************
 10853 ;; Defined at:
 10854 ;;		line 113 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;		None
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;		None
 10859 ;; Return value:  Size  Location     Type
 10860 ;;		None               void
 10861 ;; Registers used:
 10862 ;;		wreg, status,2, status,0
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10868 ;;      Params:         0       0       0       0       0
 10869 ;;      Locals:         0       0       0       0       0
 10870 ;;      Temps:          0       1       0       0       0
 10871 ;;      Totals:         0       1       0       0       0
 10872 ;;Total ram usage:        1 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:    3
 10875 ;; This function calls:
 10876 ;;		Nothing
 10877 ;; This function is called by:
 10878 ;;		_init
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           psect	text1104
 10882                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\ser.c"
 10883                           	line	113
 10884                           	global	__size_of_ser_init
 10885  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 10886                           	
 10887  13A7                     _ser_init:	
 10888                           	opt	stack 3
 10889                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 10890                           	line	114
 10891                           	
 10892  13A7                     l10601:	
 10893                           ;ser.c: 114: TRISC |= 0b10000000;
 10894  13A7  1683               	bsf	status, 5	;RP0=1, select bank1
 10895  13A8  1303               	bcf	status, 6	;RP1=0, select bank1
 10896  13A9  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 10897                           	line	115
 10898                           	
 10899  13AA                     l10603:	
 10900                           ;ser.c: 115: TRISC &= 0b10111111;
 10901  13AA  30BF               	movlw	(0BFh)
 10902  13AB  1283               	bcf	status, 5	;RP0=0, select bank0
 10903  13AC  1303               	bcf	status, 6	;RP1=0, select bank0
 10904  13AD  00A0               	movwf	(??_ser_init+0)+0
 10905  13AE  0820               	movf	(??_ser_init+0)+0,w
 10906  13AF  1683               	bsf	status, 5	;RP0=1, select bank1
 10907  13B0  1303               	bcf	status, 6	;RP1=0, select bank1
 10908  13B1  0587               	andwf	(135)^080h,f	;volatile
 10909                           	line	116
 10910                           	
 10911  13B2                     l10605:	
 10912                           ;ser.c: 116: BRGH=1;
 10913  13B2  1518               	bsf	(1218/8)^080h,(1218)&7
 10914                           	line	118
 10915                           	
 10916  13B3                     l10607:	
 10917                           ;ser.c: 118: SPBRG=20;
 10918  13B3  3014               	movlw	(014h)
 10919  13B4  0099               	movwf	(153)^080h	;volatile
 10920                           	line	121
 10921                           	
 10922  13B5                     l10609:	
 10923                           ;ser.c: 121: TX9=0;
 10924  13B5  1318               	bcf	(1222/8)^080h,(1222)&7
 10925                           	line	122
 10926                           	
 10927  13B6                     l10611:	
 10928                           ;ser.c: 122: RX9=0;
 10929  13B6  1283               	bcf	status, 5	;RP0=0, select bank0
 10930  13B7  1303               	bcf	status, 6	;RP1=0, select bank0
 10931  13B8  1318               	bcf	(198/8),(198)&7
 10932                           	line	124
 10933                           	
 10934  13B9                     l10613:	
 10935                           ;ser.c: 124: SYNC=0;
 10936  13B9  1683               	bsf	status, 5	;RP0=1, select bank1
 10937  13BA  1303               	bcf	status, 6	;RP1=0, select bank1
 10938  13BB  1218               	bcf	(1220/8)^080h,(1220)&7
 10939                           	line	125
 10940                           	
 10941  13BC                     l10615:	
 10942                           ;ser.c: 125: SPEN=1;
 10943  13BC  1283               	bcf	status, 5	;RP0=0, select bank0
 10944  13BD  1303               	bcf	status, 6	;RP1=0, select bank0
 10945  13BE  1798               	bsf	(199/8),(199)&7
 10946                           	line	126
 10947                           	
 10948  13BF                     l10617:	
 10949                           ;ser.c: 126: CREN=1;
 10950  13BF  1618               	bsf	(196/8),(196)&7
 10951                           	line	127
 10952                           	
 10953  13C0                     l10619:	
 10954                           ;ser.c: 127: TXIE=0;
 10955  13C0  1683               	bsf	status, 5	;RP0=1, select bank1
 10956  13C1  1303               	bcf	status, 6	;RP1=0, select bank1
 10957  13C2  120C               	bcf	(1124/8)^080h,(1124)&7
 10958                           	line	128
 10959                           	
 10960  13C3                     l10621:	
 10961                           ;ser.c: 128: RCIE=1;
 10962  13C3  168C               	bsf	(1125/8)^080h,(1125)&7
 10963                           	line	129
 10964                           	
 10965  13C4                     l10623:	
 10966                           ;ser.c: 129: TXEN=1;
 10967  13C4  1698               	bsf	(1221/8)^080h,(1221)&7
 10968                           	line	132
 10969                           	
 10970  13C5                     l10625:	
 10971                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 10972  13C5  3000               	movlw	(0)
 10973  13C6  00D3               	movwf	(_txoptr)^080h	;volatile
 10974  13C7  1283               	bcf	status, 5	;RP0=0, select bank0
 10975  13C8  1303               	bcf	status, 6	;RP1=0, select bank0
 10976  13C9  00EF               	movwf	(_txiptr)	;volatile
 10977  13CA  00EE               	movwf	(_rxoptr)	;volatile
 10978  13CB  00A0               	movwf	(??_ser_init+0)+0
 10979  13CC  0820               	movf	(??_ser_init+0)+0,w
 10980  13CD  00ED               	movwf	(_rxiptr)	;volatile
 10981                           	line	133
 10982                           	
 10983  13CE                     l6816:	
 10984  13CE  0008               	return
 10985                           	opt stack 0
 10986                           GLOBAL	__end_of_ser_init
 10987  13CF                     	__end_of_ser_init:
 10988 ;; =============== function _ser_init ends ============
 10989                           
 10990                           	signat	_ser_init,88
 10991                           	global	_adc_read
 10992                           psect	text1105,local,class=CODE,delta=2
 10993                           global __ptext1105
 10994  13CF                     __ptext1105:
 10995                           
 10996 ;; *************** function _adc_read *****************
 10997 ;; Defined at:
 10998 ;;		line 61 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;		None
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  2    0[BANK0 ] unsigned int 
 11005 ;; Registers used:
 11006 ;;		wreg, status,2, status,0
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11012 ;;      Params:         0       2       0       0       0
 11013 ;;      Locals:         0       2       0       0       0
 11014 ;;      Temps:          0       2       0       0       0
 11015 ;;      Totals:         0       6       0       0       0
 11016 ;;Total ram usage:        6 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    3
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_adc_read_channel
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           psect	text1105
 11026                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
 11027                           	line	61
 11028                           	global	__size_of_adc_read
 11029  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 11030                           	
 11031  13CF                     _adc_read:	
 11032                           	opt	stack 0
 11033                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 11034                           	line	64
 11035                           	
 11036  13CF                     l10473:	
 11037                           ;adc.c: 62: volatile unsigned int adc_value;
 11038                           ;adc.c: 64: ADRESH = 0;
 11039  13CF  1283               	bcf	status, 5	;RP0=0, select bank0
 11040  13D0  1303               	bcf	status, 6	;RP1=0, select bank0
 11041  13D1  019E               	clrf	(30)	;volatile
 11042                           	line	66
 11043                           	
 11044  13D2                     l10475:	
 11045                           ;adc.c: 66: GO = 1;
 11046  13D2  151F               	bsf	(250/8),(250)&7
 11047                           	line	67
 11048                           ;adc.c: 67: while(GO) continue;
 11049  13D3  2BD4               	goto	l703
 11050                           	
 11051  13D4                     l704:	
 11052                           	
 11053  13D4                     l703:	
 11054  13D4  191F               	btfsc	(250/8),(250)&7
 11055  13D5  2BD7               	goto	u3561
 11056  13D6  2BD8               	goto	u3560
 11057  13D7                     u3561:
 11058  13D7  2BD4               	goto	l703
 11059  13D8                     u3560:
 11060                           	
 11061  13D8                     l705:	
 11062                           	line	68
 11063                           # 68 "H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
 11064  13D8  0000               nop ;#
 11065                           	line	69
 11066                           # 69 "H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
 11067  13D9  0000               nop ;#
 11068                           	line	70
 11069                           # 70 "H:\Aldnoah.Zero\branches\Testing\Assignment3\adc.c"
 11070  13DA  0000               nop ;#
 11071                           psect	text1105
 11072                           	line	73
 11073                           	
 11074  13DB                     l10477:	
 11075                           ;adc.c: 73: adc_value = ADRESH;
 11076  13DB  1283               	bcf	status, 5	;RP0=0, select bank0
 11077  13DC  1303               	bcf	status, 6	;RP1=0, select bank0
 11078  13DD  081E               	movf	(30),w	;volatile
 11079  13DE  00A2               	movwf	(??_adc_read+0)+0
 11080  13DF  01A3               	clrf	(??_adc_read+0)+0+1
 11081  13E0  0822               	movf	0+(??_adc_read+0)+0,w
 11082  13E1  00A4               	movwf	(adc_read@adc_value)	;volatile
 11083  13E2  0823               	movf	1+(??_adc_read+0)+0,w
 11084  13E3  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 11085                           	line	74
 11086                           ;adc.c: 74: adc_value <<= 1;
 11087  13E4  3001               	movlw	01h
 11088                           	
 11089  13E5                     u3575:
 11090  13E5  1003               	clrc
 11091  13E6  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 11092  13E7  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 11093  13E8  3EFF               	addlw	-1
 11094  13E9  1D03               	skipz
 11095  13EA  2BE5               	goto	u3575
 11096                           	line	75
 11097                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
 11098  13EB  1683               	bsf	status, 5	;RP0=1, select bank1
 11099  13EC  1303               	bcf	status, 6	;RP1=0, select bank1
 11100  13ED  081E               	movf	(158)^080h,w	;volatile
 11101                           	line	78
 11102                           	
 11103  13EE                     l10479:	
 11104                           ;adc.c: 78: return (adc_value);
 11105  13EE  1283               	bcf	status, 5	;RP0=0, select bank0
 11106  13EF  1303               	bcf	status, 6	;RP1=0, select bank0
 11107  13F0  0825               	movf	(adc_read@adc_value+1),w	;volatile
 11108  13F1  01A1               	clrf	(?_adc_read+1)
 11109  13F2  07A1               	addwf	(?_adc_read+1)
 11110  13F3  0824               	movf	(adc_read@adc_value),w	;volatile
 11111  13F4  01A0               	clrf	(?_adc_read)
 11112  13F5  07A0               	addwf	(?_adc_read)
 11113                           
 11114  13F6  2BF7               	goto	l706
 11115                           	
 11116  13F7                     l10481:	
 11117                           	line	79
 11118                           	
 11119  13F7                     l706:	
 11120  13F7  0008               	return
 11121                           	opt stack 0
 11122                           GLOBAL	__end_of_adc_read
 11123  13F8                     	__end_of_adc_read:
 11124 ;; =============== function _adc_read ends ============
 11125                           
 11126                           	signat	_adc_read,90
 11127                           	global	_isr1
 11128                           psect	text1106,local,class=CODE,delta=2
 11129                           global __ptext1106
 11130  0E1E                     __ptext1106:
 11131                           
 11132 ;; *************** function _isr1 *****************
 11133 ;; Defined at:
 11134 ;;		line 94 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;		None
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;		None
 11139 ;; Return value:  Size  Location     Type
 11140 ;;		None               void
 11141 ;; Registers used:
 11142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11148 ;;      Params:         0       0       0       0       0
 11149 ;;      Locals:         0       0       0       0       0
 11150 ;;      Temps:          5       0       0       0       0
 11151 ;;      Totals:         5       0       0       0       0
 11152 ;;Total ram usage:        5 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; Hardware stack levels required when called:    2
 11155 ;; This function calls:
 11156 ;;		i1___lwmod
 11157 ;;		_ReadButtons
 11158 ;; This function is called by:
 11159 ;;		Interrupt level 1
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           psect	text1106
 11163                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\Main.c"
 11164                           	line	94
 11165                           	global	__size_of_isr1
 11166  00E2                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 11167                           	
 11168  0E1E                     _isr1:	
 11169                           	opt	stack 0
 11170                           ; Regs used in _isr1: [allreg]
 11171                           psect	intentry,class=CODE,delta=2
 11172                           global __pintentry
 11173  0004                     __pintentry:
 11174                           global interrupt_function
 11175  0004                     interrupt_function:
 11176                           	global saved_w
 11177  007E                     	saved_w	set	btemp+0
 11178  0004  00FE               	movwf	saved_w
 11179  0005  0E03               	swapf	status,w
 11180  0006  00F9               	movwf	(??_isr1+1)
 11181  0007  0804               	movf	fsr0,w
 11182  0008  00FA               	movwf	(??_isr1+2)
 11183  0009  080A               	movf	pclath,w
 11184  000A  00FB               	movwf	(??_isr1+3)
 11185  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 11186  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 11187  000D  087F               	movf	btemp+1,w
 11188  000E  00FC               	movwf	(??_isr1+4)
 11189  000F  120A  158A  2E1E   	ljmp	_isr1
 11190                           psect	text1106
 11191                           	line	98
 11192                           	
 11193  0E1E                     i1l10509:	
 11194                           ;Main.c: 98: if(TMR0IF)
 11195  0E1E  1D0B               	btfss	(90/8),(90)&7
 11196  0E1F  2E21               	goto	u361_21
 11197  0E20  2E22               	goto	u361_20
 11198  0E21                     u361_21:
 11199  0E21  2EA3               	goto	i1l10539
 11200  0E22                     u361_20:
 11201                           	line	100
 11202                           	
 11203  0E22                     i1l10511:	
 11204                           ;Main.c: 99: {
 11205                           ;Main.c: 100: TMR0IF = 0;
 11206  0E22  110B               	bcf	(90/8),(90)&7
 11207                           	line	101
 11208                           	
 11209  0E23                     i1l10513:	
 11210                           ;Main.c: 101: TMR0 = 100;
 11211  0E23  3064               	movlw	(064h)
 11212  0E24  0081               	movwf	(1)	;volatile
 11213                           	line	103
 11214                           ;Main.c: 103: RTC_Counter++;
 11215  0E25  3001               	movlw	low(01h)
 11216  0E26  1683               	bsf	status, 5	;RP0=1, select bank1
 11217  0E27  1303               	bcf	status, 6	;RP1=0, select bank1
 11218  0E28  07B0               	addwf	(_RTC_Counter)^080h,f	;volatile
 11219  0E29  1803               	skipnc
 11220  0E2A  0AB1               	incf	(_RTC_Counter+1)^080h,f	;volatile
 11221  0E2B  3000               	movlw	high(01h)
 11222  0E2C  07B1               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 11223                           	line	105
 11224                           	
 11225  0E2D                     i1l10515:	
 11226                           ;Main.c: 105: RTC_FLAG_1MS = 1;
 11227  0E2D  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 11228                           	line	106
 11229                           	
 11230  0E2E                     i1l10517:	
 11231                           ;Main.c: 106: if(RTC_Counter % 10 == 0)
 11232  0E2E  300A               	movlw	low(0Ah)
 11233  0E2F  00F2               	movwf	(?i1___lwmod)
 11234  0E30  3000               	movlw	high(0Ah)
 11235  0E31  00F3               	movwf	((?i1___lwmod))+1
 11236  0E32  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11237  0E33  01F5               	clrf	1+(?i1___lwmod)+02h
 11238  0E34  07F5               	addwf	1+(?i1___lwmod)+02h
 11239  0E35  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11240  0E36  01F4               	clrf	0+(?i1___lwmod)+02h
 11241  0E37  07F4               	addwf	0+(?i1___lwmod)+02h
 11242                           
 11243  0E38  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11244  0E3D  0873               	movf	((1+(?i1___lwmod))),w
 11245  0E3E  0472               	iorwf	((0+(?i1___lwmod))),w
 11246  0E3F  1D03               	skipz
 11247  0E40  2E42               	goto	u362_21
 11248  0E41  2E43               	goto	u362_20
 11249  0E42                     u362_21:
 11250  0E42  2E45               	goto	i1l10521
 11251  0E43                     u362_20:
 11252                           	line	108
 11253                           	
 11254  0E43                     i1l10519:	
 11255                           ;Main.c: 107: {
 11256                           ;Main.c: 108: RTC_FLAG_10MS = 1;
 11257  0E43  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
 11258  0E44  2E45               	goto	i1l10521
 11259                           	line	111
 11260                           	
 11261  0E45                     i1l2213:	
 11262                           	line	112
 11263                           	
 11264  0E45                     i1l10521:	
 11265                           ;Main.c: 111: }
 11266                           ;Main.c: 112: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
 11267  0E45  3032               	movlw	low(032h)
 11268  0E46  00F2               	movwf	(?i1___lwmod)
 11269  0E47  3000               	movlw	high(032h)
 11270  0E48  00F3               	movwf	((?i1___lwmod))+1
 11271  0E49  1683               	bsf	status, 5	;RP0=1, select bank1
 11272  0E4A  1303               	bcf	status, 6	;RP1=0, select bank1
 11273  0E4B  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11274  0E4C  01F5               	clrf	1+(?i1___lwmod)+02h
 11275  0E4D  07F5               	addwf	1+(?i1___lwmod)+02h
 11276  0E4E  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11277  0E4F  01F4               	clrf	0+(?i1___lwmod)+02h
 11278  0E50  07F4               	addwf	0+(?i1___lwmod)+02h
 11279                           
 11280  0E51  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11281  0E56  0873               	movf	((1+(?i1___lwmod))),w
 11282  0E57  0472               	iorwf	((0+(?i1___lwmod))),w
 11283  0E58  1D03               	skipz
 11284  0E59  2E5B               	goto	u363_21
 11285  0E5A  2E5C               	goto	u363_20
 11286  0E5B                     u363_21:
 11287  0E5B  2E5E               	goto	i1l10525
 11288  0E5C                     u363_20:
 11289                           	
 11290  0E5C                     i1l10523:	
 11291  0E5C  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
 11292  0E5D  2E5E               	goto	i1l10525
 11293                           	
 11294  0E5E                     i1l2214:	
 11295                           	line	113
 11296                           	
 11297  0E5E                     i1l10525:	
 11298                           ;Main.c: 113: if(RTC_Counter % 250 == 0)
 11299  0E5E  30FA               	movlw	low(0FAh)
 11300  0E5F  00F2               	movwf	(?i1___lwmod)
 11301  0E60  3000               	movlw	high(0FAh)
 11302  0E61  00F3               	movwf	((?i1___lwmod))+1
 11303  0E62  1683               	bsf	status, 5	;RP0=1, select bank1
 11304  0E63  1303               	bcf	status, 6	;RP1=0, select bank1
 11305  0E64  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11306  0E65  01F5               	clrf	1+(?i1___lwmod)+02h
 11307  0E66  07F5               	addwf	1+(?i1___lwmod)+02h
 11308  0E67  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11309  0E68  01F4               	clrf	0+(?i1___lwmod)+02h
 11310  0E69  07F4               	addwf	0+(?i1___lwmod)+02h
 11311                           
 11312  0E6A  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11313  0E6F  0873               	movf	((1+(?i1___lwmod))),w
 11314  0E70  0472               	iorwf	((0+(?i1___lwmod))),w
 11315  0E71  1D03               	skipz
 11316  0E72  2E74               	goto	u364_21
 11317  0E73  2E75               	goto	u364_20
 11318  0E74                     u364_21:
 11319  0E74  2E77               	goto	i1l10529
 11320  0E75                     u364_20:
 11321                           	line	116
 11322                           	
 11323  0E75                     i1l10527:	
 11324                           ;Main.c: 114: {
 11325                           ;Main.c: 116: RTC_FLAG_250MS = 1;
 11326  0E75  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 11327  0E76  2E77               	goto	i1l10529
 11328                           	line	118
 11329                           	
 11330  0E77                     i1l2215:	
 11331                           	line	119
 11332                           	
 11333  0E77                     i1l10529:	
 11334                           ;Main.c: 118: }
 11335                           ;Main.c: 119: if(RTC_Counter % 500 == 0)
 11336  0E77  30F4               	movlw	low(01F4h)
 11337  0E78  00F2               	movwf	(?i1___lwmod)
 11338  0E79  3001               	movlw	high(01F4h)
 11339  0E7A  00F3               	movwf	((?i1___lwmod))+1
 11340  0E7B  1683               	bsf	status, 5	;RP0=1, select bank1
 11341  0E7C  1303               	bcf	status, 6	;RP1=0, select bank1
 11342  0E7D  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11343  0E7E  01F5               	clrf	1+(?i1___lwmod)+02h
 11344  0E7F  07F5               	addwf	1+(?i1___lwmod)+02h
 11345  0E80  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11346  0E81  01F4               	clrf	0+(?i1___lwmod)+02h
 11347  0E82  07F4               	addwf	0+(?i1___lwmod)+02h
 11348                           
 11349  0E83  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11350  0E88  0873               	movf	((1+(?i1___lwmod))),w
 11351  0E89  0472               	iorwf	((0+(?i1___lwmod))),w
 11352  0E8A  1D03               	skipz
 11353  0E8B  2E8D               	goto	u365_21
 11354  0E8C  2E8E               	goto	u365_20
 11355  0E8D                     u365_21:
 11356  0E8D  2E94               	goto	i1l10535
 11357  0E8E                     u365_20:
 11358                           	line	121
 11359                           	
 11360  0E8E                     i1l10531:	
 11361                           ;Main.c: 120: {
 11362                           ;Main.c: 121: RTC_FLAG_500MS = 1;
 11363  0E8E  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 11364                           	line	122
 11365                           	
 11366  0E8F                     i1l10533:	
 11367                           ;Main.c: 122: RB0 ^= 0x01;
 11368  0E8F  1283               	bcf	status, 5	;RP0=0, select bank0
 11369  0E90  1303               	bcf	status, 6	;RP1=0, select bank0
 11370  0E91  3001               	movlw	1<<((48)&7)
 11371  0E92  0686               	xorwf	((48)/8),f
 11372  0E93  2E94               	goto	i1l10535
 11373                           	line	124
 11374                           	
 11375  0E94                     i1l2216:	
 11376                           	line	125
 11377                           	
 11378  0E94                     i1l10535:	
 11379                           ;Main.c: 124: }
 11380                           ;Main.c: 125: if (buttonPressed == 0)
 11381  0E94  08FD               	movf	(_buttonPressed),f
 11382  0E95  1D03               	skipz	;volatile
 11383  0E96  2E98               	goto	u366_21
 11384  0E97  2E99               	goto	u366_20
 11385  0E98                     u366_21:
 11386  0E98  2EA3               	goto	i1l10539
 11387  0E99                     u366_20:
 11388                           	line	128
 11389                           	
 11390  0E99                     i1l10537:	
 11391                           ;Main.c: 126: {
 11392                           ;Main.c: 128: buttonPressed = ReadButtons();
 11393  0E99  160A  118A  2503   	fcall	_ReadButtons
              120A  158A         
 11394  0E9E  00F8               	movwf	(??_isr1+0)+0
 11395  0E9F  0878               	movf	(??_isr1+0)+0,w
 11396  0EA0  00FD               	movwf	(_buttonPressed)	;volatile
 11397  0EA1  2EA3               	goto	i1l10539
 11398                           	line	130
 11399                           	
 11400  0EA2                     i1l2217:	
 11401  0EA2  2EA3               	goto	i1l10539
 11402                           	line	131
 11403                           	
 11404  0EA3                     i1l2212:	
 11405                           	line	132
 11406                           	
 11407  0EA3                     i1l10539:	
 11408                           ;Main.c: 130: }
 11409                           ;Main.c: 131: }
 11410                           ;Main.c: 132: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 11411  0EA3  1283               	bcf	status, 5	;RP0=0, select bank0
 11412  0EA4  1303               	bcf	status, 6	;RP1=0, select bank0
 11413  0EA5  1E8C               	btfss	(101/8),(101)&7
 11414  0EA6  2EA8               	goto	u367_21
 11415  0EA7  2EA9               	goto	u367_20
 11416  0EA8                     u367_21:
 11417  0EA8  2ECB               	goto	i1l10549
 11418  0EA9                     u367_20:
 11419                           	
 11420  0EA9                     i1l10541:	
 11421  0EA9  081A               	movf	(26),w	;volatile
 11422  0EAA  00F8               	movwf	(??_isr1+0)+0
 11423  0EAB  086D               	movf	(_rxiptr),w
 11424  0EAC  3EA0               	addlw	_rxfifo&0ffh
 11425  0EAD  0084               	movwf	fsr0
 11426  0EAE  0878               	movf	(??_isr1+0)+0,w
 11427  0EAF  1383               	bcf	status, 7	;select IRP bank1
 11428  0EB0  0080               	movwf	indf
 11429                           	
 11430  0EB1                     i1l10543:	
 11431  0EB1  086D               	movf	(_rxiptr),w	;volatile
 11432  0EB2  3E01               	addlw	01h
 11433  0EB3  390F               	andlw	0Fh
 11434  0EB4  00F8               	movwf	(??_isr1+0)+0
 11435  0EB5  0878               	movf	(??_isr1+0)+0,w
 11436  0EB6  1683               	bsf	status, 5	;RP0=1, select bank1
 11437  0EB7  1303               	bcf	status, 6	;RP1=0, select bank1
 11438  0EB8  00CF               	movwf	(_ser_tmp)^080h
 11439                           	
 11440  0EB9                     i1l10545:	
 11441  0EB9  084F               	movf	(_ser_tmp)^080h,w
 11442  0EBA  1283               	bcf	status, 5	;RP0=0, select bank0
 11443  0EBB  1303               	bcf	status, 6	;RP1=0, select bank0
 11444  0EBC  066E               	xorwf	(_rxoptr),w	;volatile
 11445  0EBD  1903               	skipnz
 11446  0EBE  2EC0               	goto	u368_21
 11447  0EBF  2EC1               	goto	u368_20
 11448  0EC0                     u368_21:
 11449  0EC0  2ECB               	goto	i1l10549
 11450  0EC1                     u368_20:
 11451                           	
 11452  0EC1                     i1l10547:	
 11453  0EC1  1683               	bsf	status, 5	;RP0=1, select bank1
 11454  0EC2  1303               	bcf	status, 6	;RP1=0, select bank1
 11455  0EC3  084F               	movf	(_ser_tmp)^080h,w
 11456  0EC4  00F8               	movwf	(??_isr1+0)+0
 11457  0EC5  0878               	movf	(??_isr1+0)+0,w
 11458  0EC6  1283               	bcf	status, 5	;RP0=0, select bank0
 11459  0EC7  1303               	bcf	status, 6	;RP1=0, select bank0
 11460  0EC8  00ED               	movwf	(_rxiptr)	;volatile
 11461  0EC9  2ECB               	goto	i1l10549
 11462                           	
 11463  0ECA                     i1l2219:	
 11464  0ECA  2ECB               	goto	i1l10549
 11465                           	
 11466  0ECB                     i1l2218:	
 11467                           	
 11468  0ECB                     i1l10549:	
 11469  0ECB  1E0C               	btfss	(100/8),(100)&7
 11470  0ECC  2ECE               	goto	u369_21
 11471  0ECD  2ECF               	goto	u369_20
 11472  0ECE                     u369_21:
 11473  0ECE  2EF4               	goto	i1l2222
 11474  0ECF                     u369_20:
 11475                           	
 11476  0ECF                     i1l10551:	
 11477  0ECF  1683               	bsf	status, 5	;RP0=1, select bank1
 11478  0ED0  1303               	bcf	status, 6	;RP1=0, select bank1
 11479  0ED1  1E0C               	btfss	(1124/8)^080h,(1124)&7
 11480  0ED2  2ED4               	goto	u370_21
 11481  0ED3  2ED5               	goto	u370_20
 11482  0ED4                     u370_21:
 11483  0ED4  2EF4               	goto	i1l2222
 11484  0ED5                     u370_20:
 11485                           	
 11486  0ED5                     i1l10553:	
 11487  0ED5  0853               	movf	(_txoptr)^080h,w
 11488  0ED6  3EA0               	addlw	_txfifo&0ffh
 11489  0ED7  0084               	movwf	fsr0
 11490  0ED8  1783               	bsf	status, 7	;select IRP bank3
 11491  0ED9  0800               	movf	indf,w
 11492  0EDA  1283               	bcf	status, 5	;RP0=0, select bank0
 11493  0EDB  1303               	bcf	status, 6	;RP1=0, select bank0
 11494  0EDC  0099               	movwf	(25)	;volatile
 11495                           	
 11496  0EDD                     i1l10555:	
 11497  0EDD  3001               	movlw	(01h)
 11498  0EDE  00F8               	movwf	(??_isr1+0)+0
 11499  0EDF  0878               	movf	(??_isr1+0)+0,w
 11500  0EE0  1683               	bsf	status, 5	;RP0=1, select bank1
 11501  0EE1  1303               	bcf	status, 6	;RP1=0, select bank1
 11502  0EE2  07D3               	addwf	(_txoptr)^080h,f	;volatile
 11503                           	
 11504  0EE3                     i1l10557:	
 11505  0EE3  300F               	movlw	(0Fh)
 11506  0EE4  00F8               	movwf	(??_isr1+0)+0
 11507  0EE5  0878               	movf	(??_isr1+0)+0,w
 11508  0EE6  05D3               	andwf	(_txoptr)^080h,f	;volatile
 11509                           	
 11510  0EE7                     i1l10559:	
 11511  0EE7  0853               	movf	(_txoptr)^080h,w	;volatile
 11512  0EE8  1283               	bcf	status, 5	;RP0=0, select bank0
 11513  0EE9  1303               	bcf	status, 6	;RP1=0, select bank0
 11514  0EEA  066F               	xorwf	(_txiptr),w	;volatile
 11515  0EEB  1D03               	skipz
 11516  0EEC  2EEE               	goto	u371_21
 11517  0EED  2EEF               	goto	u371_20
 11518  0EEE                     u371_21:
 11519  0EEE  2EF4               	goto	i1l2222
 11520  0EEF                     u371_20:
 11521                           	
 11522  0EEF                     i1l10561:	
 11523  0EEF  1683               	bsf	status, 5	;RP0=1, select bank1
 11524  0EF0  1303               	bcf	status, 6	;RP1=0, select bank1
 11525  0EF1  120C               	bcf	(1124/8)^080h,(1124)&7
 11526  0EF2  2EF4               	goto	i1l2222
 11527                           	
 11528  0EF3                     i1l2221:	
 11529  0EF3  2EF4               	goto	i1l2222
 11530                           	
 11531  0EF4                     i1l2220:	
 11532                           	line	133
 11533                           	
 11534  0EF4                     i1l2222:	
 11535  0EF4  087C               	movf	(??_isr1+4),w
 11536  0EF5  1283               	bcf	status, 5	;RP0=0, select bank0
 11537  0EF6  00FF               	movwf	btemp+1
 11538  0EF7  087B               	movf	(??_isr1+3),w
 11539  0EF8  008A               	movwf	pclath
 11540  0EF9  087A               	movf	(??_isr1+2),w
 11541  0EFA  0084               	movwf	fsr0
 11542  0EFB  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 11543  0EFC  0083               	movwf	status
 11544  0EFD  0EFE               	swapf	saved_w,f
 11545  0EFE  0E7E               	swapf	saved_w,w
 11546  0EFF  0009               	retfie
 11547                           	opt stack 0
 11548                           GLOBAL	__end_of_isr1
 11549  0F00                     	__end_of_isr1:
 11550 ;; =============== function _isr1 ends ============
 11551                           
 11552                           	signat	_isr1,88
 11553                           	global	_ReadButtons
 11554                           psect	text1107,local,class=CODE,delta=2
 11555                           global __ptext1107
 11556  1503                     __ptext1107:
 11557                           
 11558 ;; *************** function _ReadButtons *****************
 11559 ;; Defined at:
 11560 ;;		line 141 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;		None
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;		None
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      unsigned char 
 11567 ;; Registers used:
 11568 ;;		wreg, status,2, status,0, pclath, cstack
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11574 ;;      Params:         0       0       0       0       0
 11575 ;;      Locals:         0       0       0       0       0
 11576 ;;      Temps:          0       0       0       0       0
 11577 ;;      Totals:         0       0       0       0       0
 11578 ;;Total ram usage:        0 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    1
 11581 ;; This function calls:
 11582 ;;		_Debounce
 11583 ;; This function is called by:
 11584 ;;		_isr1
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           psect	text1107
 11588                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
 11589                           	line	141
 11590                           	global	__size_of_ReadButtons
 11591  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 11592                           	
 11593  1503                     _ReadButtons:	
 11594                           	opt	stack 0
 11595                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 11596                           	line	143
 11597                           	
 11598  1503                     i1l10563:	
 11599                           ;HMI.c: 143: Debounce();
 11600  1503  120A  158A  22BA   	fcall	_Debounce
              160A  118A         
 11601                           	line	145
 11602                           	
 11603  1508                     i1l10565:	
 11604                           ;HMI.c: 145: if(UpPressed)
 11605  1508  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 11606  1509  2D0B               	goto	u372_21
 11607  150A  2D0C               	goto	u372_20
 11608  150B                     u372_21:
 11609  150B  2D10               	goto	i1l4560
 11610  150C                     u372_20:
 11611                           	line	147
 11612                           	
 11613  150C                     i1l10567:	
 11614                           ;HMI.c: 146: {
 11615                           ;HMI.c: 147: UpPressed = 0;
 11616  150C  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 11617                           	line	148
 11618                           	
 11619  150D                     i1l10569:	
 11620                           ;HMI.c: 148: return 1;
 11621  150D  3001               	movlw	(01h)
 11622  150E  2D32               	goto	i1l4561
 11623                           	
 11624  150F                     i1l10571:	
 11625  150F  2D32               	goto	i1l4561
 11626                           	line	150
 11627                           	
 11628  1510                     i1l4560:	
 11629                           	line	152
 11630                           ;HMI.c: 150: }
 11631                           ;HMI.c: 152: if(DownPressed)
 11632  1510  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 11633  1511  2D13               	goto	u373_21
 11634  1512  2D14               	goto	u373_20
 11635  1513                     u373_21:
 11636  1513  2D18               	goto	i1l4562
 11637  1514                     u373_20:
 11638                           	line	154
 11639                           	
 11640  1514                     i1l10573:	
 11641                           ;HMI.c: 153: {
 11642                           ;HMI.c: 154: DownPressed = 0;
 11643  1514  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 11644                           	line	155
 11645                           	
 11646  1515                     i1l10575:	
 11647                           ;HMI.c: 155: return 2;
 11648  1515  3002               	movlw	(02h)
 11649  1516  2D32               	goto	i1l4561
 11650                           	
 11651  1517                     i1l10577:	
 11652  1517  2D32               	goto	i1l4561
 11653                           	line	157
 11654                           	
 11655  1518                     i1l4562:	
 11656                           	line	158
 11657                           ;HMI.c: 157: }
 11658                           ;HMI.c: 158: if(LeftPressed)
 11659  1518  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 11660  1519  2D1B               	goto	u374_21
 11661  151A  2D1C               	goto	u374_20
 11662  151B                     u374_21:
 11663  151B  2D20               	goto	i1l4563
 11664  151C                     u374_20:
 11665                           	line	160
 11666                           	
 11667  151C                     i1l10579:	
 11668                           ;HMI.c: 159: {
 11669                           ;HMI.c: 160: LeftPressed = 0;
 11670  151C  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 11671                           	line	161
 11672                           	
 11673  151D                     i1l10581:	
 11674                           ;HMI.c: 161: return 3;
 11675  151D  3003               	movlw	(03h)
 11676  151E  2D32               	goto	i1l4561
 11677                           	
 11678  151F                     i1l10583:	
 11679  151F  2D32               	goto	i1l4561
 11680                           	line	163
 11681                           	
 11682  1520                     i1l4563:	
 11683                           	line	164
 11684                           ;HMI.c: 163: }
 11685                           ;HMI.c: 164: if(RightPressed)
 11686  1520  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 11687  1521  2D23               	goto	u375_21
 11688  1522  2D24               	goto	u375_20
 11689  1523                     u375_21:
 11690  1523  2D28               	goto	i1l4564
 11691  1524                     u375_20:
 11692                           	line	166
 11693                           	
 11694  1524                     i1l10585:	
 11695                           ;HMI.c: 165: {
 11696                           ;HMI.c: 166: RightPressed = 0;
 11697  1524  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 11698                           	line	167
 11699                           	
 11700  1525                     i1l10587:	
 11701                           ;HMI.c: 167: return 4;
 11702  1525  3004               	movlw	(04h)
 11703  1526  2D32               	goto	i1l4561
 11704                           	
 11705  1527                     i1l10589:	
 11706  1527  2D32               	goto	i1l4561
 11707                           	line	169
 11708                           	
 11709  1528                     i1l4564:	
 11710                           	line	171
 11711                           ;HMI.c: 169: }
 11712                           ;HMI.c: 171: if(CenterPressed)
 11713  1528  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 11714  1529  2D2B               	goto	u376_21
 11715  152A  2D2C               	goto	u376_20
 11716  152B                     u376_21:
 11717  152B  2D30               	goto	i1l10597
 11718  152C                     u376_20:
 11719                           	line	173
 11720                           	
 11721  152C                     i1l10591:	
 11722                           ;HMI.c: 172: {
 11723                           ;HMI.c: 173: CenterPressed = 0;
 11724  152C  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 11725                           	line	174
 11726                           	
 11727  152D                     i1l10593:	
 11728                           ;HMI.c: 174: return 5;
 11729  152D  3005               	movlw	(05h)
 11730  152E  2D32               	goto	i1l4561
 11731                           	
 11732  152F                     i1l10595:	
 11733  152F  2D32               	goto	i1l4561
 11734                           	line	176
 11735                           	
 11736  1530                     i1l4565:	
 11737                           	line	177
 11738                           	
 11739  1530                     i1l10597:	
 11740                           ;HMI.c: 176: }
 11741                           ;HMI.c: 177: return 0;
 11742  1530  3000               	movlw	(0)
 11743  1531  2D32               	goto	i1l4561
 11744                           	
 11745  1532                     i1l10599:	
 11746                           	line	178
 11747                           	
 11748  1532                     i1l4561:	
 11749  1532  0008               	return
 11750                           	opt stack 0
 11751                           GLOBAL	__end_of_ReadButtons
 11752  1533                     	__end_of_ReadButtons:
 11753 ;; =============== function _ReadButtons ends ============
 11754                           
 11755                           	signat	_ReadButtons,89
 11756                           	global	i1___lwmod
 11757                           psect	text1108,local,class=CODE,delta=2
 11758                           global __ptext1108
 11759  15A3                     __ptext1108:
 11760                           
 11761 ;; *************** function i1___lwmod *****************
 11762 ;; Defined at:
 11763 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  __lwmod         2    0[COMMON] unsigned int 
 11766 ;;  __lwmod         2    2[COMMON] unsigned int 
 11767 ;; Auto vars:     Size  Location     Type
 11768 ;;  __lwmod         1    5[COMMON] unsigned char 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  2    0[COMMON] unsigned int 
 11771 ;; Registers used:
 11772 ;;		wreg, status,2, status,0
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11778 ;;      Params:         4       0       0       0       0
 11779 ;;      Locals:         1       0       0       0       0
 11780 ;;      Temps:          1       0       0       0       0
 11781 ;;      Totals:         6       0       0       0       0
 11782 ;;Total ram usage:        6 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_isr1
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           psect	text1108
 11791                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11792                           	line	5
 11793                           	global	__size_ofi1___lwmod
 11794  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 11795                           	
 11796  15A3                     i1___lwmod:	
 11797                           	opt	stack 1
 11798                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11799                           	line	8
 11800                           	
 11801  15A3                     i1l11195:	
 11802  15A3  0873               	movf	(i1___lwmod@divisor+1),w
 11803  15A4  0472               	iorwf	(i1___lwmod@divisor),w
 11804  15A5  1903               	skipnz
 11805  15A6  2DA8               	goto	u494_21
 11806  15A7  2DA9               	goto	u494_20
 11807  15A8                     u494_21:
 11808  15A8  2DDF               	goto	i1l11213
 11809  15A9                     u494_20:
 11810                           	line	9
 11811                           	
 11812  15A9                     i1l11197:	
 11813  15A9  01F7               	clrf	(i1___lwmod@counter)
 11814  15AA  1403               	bsf	status,0
 11815  15AB  0DF7               	rlf	(i1___lwmod@counter),f
 11816                           	line	10
 11817  15AC  2DB9               	goto	i1l11203
 11818                           	
 11819  15AD                     i1l7545:	
 11820                           	line	11
 11821                           	
 11822  15AD                     i1l11199:	
 11823  15AD  3001               	movlw	01h
 11824                           	
 11825  15AE                     u495_25:
 11826  15AE  1003               	clrc
 11827  15AF  0DF2               	rlf	(i1___lwmod@divisor),f
 11828  15B0  0DF3               	rlf	(i1___lwmod@divisor+1),f
 11829  15B1  3EFF               	addlw	-1
 11830  15B2  1D03               	skipz
 11831  15B3  2DAE               	goto	u495_25
 11832                           	line	12
 11833                           	
 11834  15B4                     i1l11201:	
 11835  15B4  3001               	movlw	(01h)
 11836  15B5  00F6               	movwf	(??i1___lwmod+0)+0
 11837  15B6  0876               	movf	(??i1___lwmod+0)+0,w
 11838  15B7  07F7               	addwf	(i1___lwmod@counter),f
 11839  15B8  2DB9               	goto	i1l11203
 11840                           	line	13
 11841                           	
 11842  15B9                     i1l7544:	
 11843                           	line	10
 11844                           	
 11845  15B9                     i1l11203:	
 11846  15B9  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 11847  15BA  2DBC               	goto	u496_21
 11848  15BB  2DBD               	goto	u496_20
 11849  15BC                     u496_21:
 11850  15BC  2DAD               	goto	i1l11199
 11851  15BD                     u496_20:
 11852  15BD  2DBF               	goto	i1l11205
 11853                           	
 11854  15BE                     i1l7546:	
 11855  15BE  2DBF               	goto	i1l11205
 11856                           	line	14
 11857                           	
 11858  15BF                     i1l7547:	
 11859                           	line	15
 11860                           	
 11861  15BF                     i1l11205:	
 11862  15BF  0873               	movf	(i1___lwmod@divisor+1),w
 11863  15C0  0275               	subwf	(i1___lwmod@dividend+1),w
 11864  15C1  1D03               	skipz
 11865  15C2  2DC5               	goto	u497_25
 11866  15C3  0872               	movf	(i1___lwmod@divisor),w
 11867  15C4  0274               	subwf	(i1___lwmod@dividend),w
 11868  15C5                     u497_25:
 11869  15C5  1C03               	skipc
 11870  15C6  2DC8               	goto	u497_21
 11871  15C7  2DC9               	goto	u497_20
 11872  15C8                     u497_21:
 11873  15C8  2DD0               	goto	i1l11209
 11874  15C9                     u497_20:
 11875                           	line	16
 11876                           	
 11877  15C9                     i1l11207:	
 11878  15C9  0872               	movf	(i1___lwmod@divisor),w
 11879  15CA  02F4               	subwf	(i1___lwmod@dividend),f
 11880  15CB  0873               	movf	(i1___lwmod@divisor+1),w
 11881  15CC  1C03               	skipc
 11882  15CD  03F5               	decf	(i1___lwmod@dividend+1),f
 11883  15CE  02F5               	subwf	(i1___lwmod@dividend+1),f
 11884  15CF  2DD0               	goto	i1l11209
 11885                           	
 11886  15D0                     i1l7548:	
 11887                           	line	17
 11888                           	
 11889  15D0                     i1l11209:	
 11890  15D0  3001               	movlw	01h
 11891                           	
 11892  15D1                     u498_25:
 11893  15D1  1003               	clrc
 11894  15D2  0CF3               	rrf	(i1___lwmod@divisor+1),f
 11895  15D3  0CF2               	rrf	(i1___lwmod@divisor),f
 11896  15D4  3EFF               	addlw	-1
 11897  15D5  1D03               	skipz
 11898  15D6  2DD1               	goto	u498_25
 11899                           	line	18
 11900                           	
 11901  15D7                     i1l11211:	
 11902  15D7  3001               	movlw	low(01h)
 11903  15D8  02F7               	subwf	(i1___lwmod@counter),f
 11904  15D9  1D03               	btfss	status,2
 11905  15DA  2DDC               	goto	u499_21
 11906  15DB  2DDD               	goto	u499_20
 11907  15DC                     u499_21:
 11908  15DC  2DBF               	goto	i1l11205
 11909  15DD                     u499_20:
 11910  15DD  2DDF               	goto	i1l11213
 11911                           	
 11912  15DE                     i1l7549:	
 11913  15DE  2DDF               	goto	i1l11213
 11914                           	line	19
 11915                           	
 11916  15DF                     i1l7543:	
 11917                           	line	20
 11918                           	
 11919  15DF                     i1l11213:	
 11920  15DF  0875               	movf	(i1___lwmod@dividend+1),w
 11921  15E0  01F3               	clrf	(?i1___lwmod+1)
 11922  15E1  07F3               	addwf	(?i1___lwmod+1)
 11923  15E2  0874               	movf	(i1___lwmod@dividend),w
 11924  15E3  01F2               	clrf	(?i1___lwmod)
 11925  15E4  07F2               	addwf	(?i1___lwmod)
 11926                           
 11927  15E5  2DE6               	goto	i1l7550
 11928                           	
 11929  15E6                     i1l11215:	
 11930                           	line	21
 11931                           	
 11932  15E6                     i1l7550:	
 11933  15E6  0008               	return
 11934                           	opt stack 0
 11935                           GLOBAL	__end_ofi1___lwmod
 11936  15E7                     	__end_ofi1___lwmod:
 11937 ;; =============== function i1___lwmod ends ============
 11938                           
 11939                           	signat	i1___lwmod,90
 11940                           	global	_Debounce
 11941                           psect	text1109,local,class=CODE,delta=2
 11942                           global __ptext1109
 11943  0ABA                     __ptext1109:
 11944                           
 11945 ;; *************** function _Debounce *****************
 11946 ;; Defined at:
 11947 ;;		line 61 in file "H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;		None               void
 11954 ;; Registers used:
 11955 ;;		wreg, status,2, status,0
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11961 ;;      Params:         0       0       0       0       0
 11962 ;;      Locals:         0       0       0       0       0
 11963 ;;      Temps:          1       0       0       0       0
 11964 ;;      Totals:         1       0       0       0       0
 11965 ;;Total ram usage:        1 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; This function calls:
 11968 ;;		Nothing
 11969 ;; This function is called by:
 11970 ;;		_ReadButtons
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           psect	text1109
 11974                           	file	"H:\Aldnoah.Zero\branches\Testing\Assignment3\HMI.c"
 11975                           	line	61
 11976                           	global	__size_of_Debounce
 11977  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11978                           	
 11979  0ABA                     _Debounce:	
 11980                           	opt	stack 0
 11981                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11982                           	line	63
 11983                           	
 11984  0ABA                     i1l10765:	
 11985                           ;HMI.c: 63: if(!RB2)
 11986  0ABA  1283               	bcf	status, 5	;RP0=0, select bank0
 11987  0ABB  1303               	bcf	status, 6	;RP1=0, select bank0
 11988  0ABC  1906               	btfsc	(50/8),(50)&7
 11989  0ABD  2ABF               	goto	u386_21
 11990  0ABE  2AC0               	goto	u386_20
 11991  0ABF                     u386_21:
 11992  0ABF  2AD4               	goto	i1l4542
 11993  0AC0                     u386_20:
 11994                           	line	65
 11995                           	
 11996  0AC0                     i1l10767:	
 11997                           ;HMI.c: 64: {
 11998                           ;HMI.c: 65: UpDebounceCount++;
 11999  0AC0  3001               	movlw	(01h)
 12000  0AC1  00F2               	movwf	(??_Debounce+0)+0
 12001  0AC2  0872               	movf	(??_Debounce+0)+0,w
 12002  0AC3  1683               	bsf	status, 5	;RP0=1, select bank1
 12003  0AC4  1303               	bcf	status, 6	;RP1=0, select bank1
 12004  0AC5  07CA               	addwf	(_UpDebounceCount)^080h,f	;volatile
 12005                           	line	66
 12006                           	
 12007  0AC6                     i1l10769:	
 12008                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
 12009  0AC6  300A               	movlw	(0Ah)
 12010  0AC7  024A               	subwf	(_UpDebounceCount)^080h,w	;volatile
 12011  0AC8  1C03               	skipc
 12012  0AC9  2ACB               	goto	u387_21
 12013  0ACA  2ACC               	goto	u387_20
 12014  0ACB                     u387_21:
 12015  0ACB  2AD8               	goto	i1l4544
 12016  0ACC                     u387_20:
 12017                           	
 12018  0ACC                     i1l10771:	
 12019  0ACC  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
 12020  0ACD  2ACF               	goto	u388_21
 12021  0ACE  2AD0               	goto	u388_20
 12022  0ACF                     u388_21:
 12023  0ACF  2AD8               	goto	i1l4544
 12024  0AD0                     u388_20:
 12025                           	line	68
 12026                           	
 12027  0AD0                     i1l10773:	
 12028                           ;HMI.c: 67: {
 12029                           ;HMI.c: 68: UpPressed = 1;
 12030  0AD0  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 12031                           	line	69
 12032                           ;HMI.c: 69: UpReleased = 0;
 12033  0AD1  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
 12034  0AD2  2AD8               	goto	i1l4544
 12035                           	line	70
 12036                           	
 12037  0AD3                     i1l4543:	
 12038                           	line	71
 12039                           ;HMI.c: 70: }
 12040                           ;HMI.c: 71: }
 12041  0AD3  2AD8               	goto	i1l4544
 12042                           	line	72
 12043                           	
 12044  0AD4                     i1l4542:	
 12045                           	line	74
 12046                           ;HMI.c: 72: else
 12047                           ;HMI.c: 73: {
 12048                           ;HMI.c: 74: UpDebounceCount = 0;
 12049  0AD4  1683               	bsf	status, 5	;RP0=1, select bank1
 12050  0AD5  1303               	bcf	status, 6	;RP1=0, select bank1
 12051  0AD6  01CA               	clrf	(_UpDebounceCount)^080h	;volatile
 12052                           	line	75
 12053                           ;HMI.c: 75: UpReleased = 1;
 12054  0AD7  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
 12055                           	line	76
 12056                           	
 12057  0AD8                     i1l4544:	
 12058                           	line	79
 12059                           ;HMI.c: 76: }
 12060                           ;HMI.c: 79: if(!RB3)
 12061  0AD8  1283               	bcf	status, 5	;RP0=0, select bank0
 12062  0AD9  1303               	bcf	status, 6	;RP1=0, select bank0
 12063  0ADA  1986               	btfsc	(51/8),(51)&7
 12064  0ADB  2ADD               	goto	u389_21
 12065  0ADC  2ADE               	goto	u389_20
 12066  0ADD                     u389_21:
 12067  0ADD  2AF2               	goto	i1l4545
 12068  0ADE                     u389_20:
 12069                           	line	81
 12070                           	
 12071  0ADE                     i1l10775:	
 12072                           ;HMI.c: 80: {
 12073                           ;HMI.c: 81: DownDebounceCount++;
 12074  0ADE  3001               	movlw	(01h)
 12075  0ADF  00F2               	movwf	(??_Debounce+0)+0
 12076  0AE0  0872               	movf	(??_Debounce+0)+0,w
 12077  0AE1  1683               	bsf	status, 5	;RP0=1, select bank1
 12078  0AE2  1303               	bcf	status, 6	;RP1=0, select bank1
 12079  0AE3  07C7               	addwf	(_DownDebounceCount)^080h,f	;volatile
 12080                           	line	82
 12081                           	
 12082  0AE4                     i1l10777:	
 12083                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
 12084  0AE4  300A               	movlw	(0Ah)
 12085  0AE5  0247               	subwf	(_DownDebounceCount)^080h,w	;volatile
 12086  0AE6  1C03               	skipc
 12087  0AE7  2AE9               	goto	u390_21
 12088  0AE8  2AEA               	goto	u390_20
 12089  0AE9                     u390_21:
 12090  0AE9  2AF6               	goto	i1l4547
 12091  0AEA                     u390_20:
 12092                           	
 12093  0AEA                     i1l10779:	
 12094  0AEA  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 12095  0AEB  2AED               	goto	u391_21
 12096  0AEC  2AEE               	goto	u391_20
 12097  0AED                     u391_21:
 12098  0AED  2AF6               	goto	i1l4547
 12099  0AEE                     u391_20:
 12100                           	line	84
 12101                           	
 12102  0AEE                     i1l10781:	
 12103                           ;HMI.c: 83: {
 12104                           ;HMI.c: 84: DownPressed = 1;
 12105  0AEE  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 12106                           	line	85
 12107                           ;HMI.c: 85: DownReleased = 0;
 12108  0AEF  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 12109  0AF0  2AF6               	goto	i1l4547
 12110                           	line	86
 12111                           	
 12112  0AF1                     i1l4546:	
 12113                           	line	87
 12114                           ;HMI.c: 86: }
 12115                           ;HMI.c: 87: }
 12116  0AF1  2AF6               	goto	i1l4547
 12117                           	line	88
 12118                           	
 12119  0AF2                     i1l4545:	
 12120                           	line	90
 12121                           ;HMI.c: 88: else
 12122                           ;HMI.c: 89: {
 12123                           ;HMI.c: 90: DownDebounceCount = 0;
 12124  0AF2  1683               	bsf	status, 5	;RP0=1, select bank1
 12125  0AF3  1303               	bcf	status, 6	;RP1=0, select bank1
 12126  0AF4  01C7               	clrf	(_DownDebounceCount)^080h	;volatile
 12127                           	line	91
 12128                           ;HMI.c: 91: DownReleased = 1;
 12129  0AF5  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 12130                           	line	92
 12131                           	
 12132  0AF6                     i1l4547:	
 12133                           	line	94
 12134                           ;HMI.c: 92: }
 12135                           ;HMI.c: 94: if(!RB4)
 12136  0AF6  1283               	bcf	status, 5	;RP0=0, select bank0
 12137  0AF7  1303               	bcf	status, 6	;RP1=0, select bank0
 12138  0AF8  1A06               	btfsc	(52/8),(52)&7
 12139  0AF9  2AFB               	goto	u392_21
 12140  0AFA  2AFC               	goto	u392_20
 12141  0AFB                     u392_21:
 12142  0AFB  2B10               	goto	i1l4548
 12143  0AFC                     u392_20:
 12144                           	line	96
 12145                           	
 12146  0AFC                     i1l10783:	
 12147                           ;HMI.c: 95: {
 12148                           ;HMI.c: 96: LeftDebounceCount++;
 12149  0AFC  3001               	movlw	(01h)
 12150  0AFD  00F2               	movwf	(??_Debounce+0)+0
 12151  0AFE  0872               	movf	(??_Debounce+0)+0,w
 12152  0AFF  1683               	bsf	status, 5	;RP0=1, select bank1
 12153  0B00  1303               	bcf	status, 6	;RP1=0, select bank1
 12154  0B01  07C8               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 12155                           	line	97
 12156                           	
 12157  0B02                     i1l10785:	
 12158                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
 12159  0B02  300A               	movlw	(0Ah)
 12160  0B03  0248               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 12161  0B04  1C03               	skipc
 12162  0B05  2B07               	goto	u393_21
 12163  0B06  2B08               	goto	u393_20
 12164  0B07                     u393_21:
 12165  0B07  2B14               	goto	i1l4550
 12166  0B08                     u393_20:
 12167                           	
 12168  0B08                     i1l10787:	
 12169  0B08  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 12170  0B09  2B0B               	goto	u394_21
 12171  0B0A  2B0C               	goto	u394_20
 12172  0B0B                     u394_21:
 12173  0B0B  2B14               	goto	i1l4550
 12174  0B0C                     u394_20:
 12175                           	line	99
 12176                           	
 12177  0B0C                     i1l10789:	
 12178                           ;HMI.c: 98: {
 12179                           ;HMI.c: 99: LeftPressed = 1;
 12180  0B0C  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 12181                           	line	100
 12182                           ;HMI.c: 100: LeftReleased = 0;
 12183  0B0D  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 12184  0B0E  2B14               	goto	i1l4550
 12185                           	line	101
 12186                           	
 12187  0B0F                     i1l4549:	
 12188                           	line	102
 12189                           ;HMI.c: 101: }
 12190                           ;HMI.c: 102: }
 12191  0B0F  2B14               	goto	i1l4550
 12192                           	line	103
 12193                           	
 12194  0B10                     i1l4548:	
 12195                           	line	105
 12196                           ;HMI.c: 103: else
 12197                           ;HMI.c: 104: {
 12198                           ;HMI.c: 105: LeftDebounceCount = 0;
 12199  0B10  1683               	bsf	status, 5	;RP0=1, select bank1
 12200  0B11  1303               	bcf	status, 6	;RP1=0, select bank1
 12201  0B12  01C8               	clrf	(_LeftDebounceCount)^080h	;volatile
 12202                           	line	106
 12203                           ;HMI.c: 106: LeftReleased = 1;
 12204  0B13  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 12205                           	line	107
 12206                           	
 12207  0B14                     i1l4550:	
 12208                           	line	109
 12209                           ;HMI.c: 107: }
 12210                           ;HMI.c: 109: if(!RB5)
 12211  0B14  1283               	bcf	status, 5	;RP0=0, select bank0
 12212  0B15  1303               	bcf	status, 6	;RP1=0, select bank0
 12213  0B16  1A86               	btfsc	(53/8),(53)&7
 12214  0B17  2B19               	goto	u395_21
 12215  0B18  2B1A               	goto	u395_20
 12216  0B19                     u395_21:
 12217  0B19  2B2E               	goto	i1l4551
 12218  0B1A                     u395_20:
 12219                           	line	111
 12220                           	
 12221  0B1A                     i1l10791:	
 12222                           ;HMI.c: 110: {
 12223                           ;HMI.c: 111: RightDebounceCount++;
 12224  0B1A  3001               	movlw	(01h)
 12225  0B1B  00F2               	movwf	(??_Debounce+0)+0
 12226  0B1C  0872               	movf	(??_Debounce+0)+0,w
 12227  0B1D  1683               	bsf	status, 5	;RP0=1, select bank1
 12228  0B1E  1303               	bcf	status, 6	;RP1=0, select bank1
 12229  0B1F  07C9               	addwf	(_RightDebounceCount)^080h,f	;volatile
 12230                           	line	112
 12231                           	
 12232  0B20                     i1l10793:	
 12233                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
 12234  0B20  300A               	movlw	(0Ah)
 12235  0B21  0249               	subwf	(_RightDebounceCount)^080h,w	;volatile
 12236  0B22  1C03               	skipc
 12237  0B23  2B25               	goto	u396_21
 12238  0B24  2B26               	goto	u396_20
 12239  0B25                     u396_21:
 12240  0B25  2B32               	goto	i1l4553
 12241  0B26                     u396_20:
 12242                           	
 12243  0B26                     i1l10795:	
 12244  0B26  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
 12245  0B27  2B29               	goto	u397_21
 12246  0B28  2B2A               	goto	u397_20
 12247  0B29                     u397_21:
 12248  0B29  2B32               	goto	i1l4553
 12249  0B2A                     u397_20:
 12250                           	line	114
 12251                           	
 12252  0B2A                     i1l10797:	
 12253                           ;HMI.c: 113: {
 12254                           ;HMI.c: 114: RightPressed = 1;
 12255  0B2A  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 12256                           	line	115
 12257                           ;HMI.c: 115: RightReleased = 0;
 12258  0B2B  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
 12259  0B2C  2B32               	goto	i1l4553
 12260                           	line	116
 12261                           	
 12262  0B2D                     i1l4552:	
 12263                           	line	117
 12264                           ;HMI.c: 116: }
 12265                           ;HMI.c: 117: }
 12266  0B2D  2B32               	goto	i1l4553
 12267                           	line	118
 12268                           	
 12269  0B2E                     i1l4551:	
 12270                           	line	120
 12271                           ;HMI.c: 118: else
 12272                           ;HMI.c: 119: {
 12273                           ;HMI.c: 120: RightDebounceCount = 0;
 12274  0B2E  1683               	bsf	status, 5	;RP0=1, select bank1
 12275  0B2F  1303               	bcf	status, 6	;RP1=0, select bank1
 12276  0B30  01C9               	clrf	(_RightDebounceCount)^080h	;volatile
 12277                           	line	121
 12278                           ;HMI.c: 121: RightReleased = 1;
 12279  0B31  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
 12280                           	line	122
 12281                           	
 12282  0B32                     i1l4553:	
 12283                           	line	124
 12284                           ;HMI.c: 122: }
 12285                           ;HMI.c: 124: if(!RB6)
 12286  0B32  1283               	bcf	status, 5	;RP0=0, select bank0
 12287  0B33  1303               	bcf	status, 6	;RP1=0, select bank0
 12288  0B34  1B06               	btfsc	(54/8),(54)&7
 12289  0B35  2B37               	goto	u398_21
 12290  0B36  2B38               	goto	u398_20
 12291  0B37                     u398_21:
 12292  0B37  2B4C               	goto	i1l4554
 12293  0B38                     u398_20:
 12294                           	line	126
 12295                           	
 12296  0B38                     i1l10799:	
 12297                           ;HMI.c: 125: {
 12298                           ;HMI.c: 126: CenterDebounceCount++;
 12299  0B38  3001               	movlw	(01h)
 12300  0B39  00F2               	movwf	(??_Debounce+0)+0
 12301  0B3A  0872               	movf	(??_Debounce+0)+0,w
 12302  0B3B  1683               	bsf	status, 5	;RP0=1, select bank1
 12303  0B3C  1303               	bcf	status, 6	;RP1=0, select bank1
 12304  0B3D  07C4               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 12305                           	line	127
 12306                           	
 12307  0B3E                     i1l10801:	
 12308                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
 12309  0B3E  300A               	movlw	(0Ah)
 12310  0B3F  0244               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 12311  0B40  1C03               	skipc
 12312  0B41  2B43               	goto	u399_21
 12313  0B42  2B44               	goto	u399_20
 12314  0B43                     u399_21:
 12315  0B43  2B51               	goto	i1l4557
 12316  0B44                     u399_20:
 12317                           	
 12318  0B44                     i1l10803:	
 12319  0B44  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 12320  0B45  2B47               	goto	u400_21
 12321  0B46  2B48               	goto	u400_20
 12322  0B47                     u400_21:
 12323  0B47  2B51               	goto	i1l4557
 12324  0B48                     u400_20:
 12325                           	line	129
 12326                           	
 12327  0B48                     i1l10805:	
 12328                           ;HMI.c: 128: {
 12329                           ;HMI.c: 129: CenterPressed = 1;
 12330  0B48  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 12331                           	line	130
 12332                           ;HMI.c: 130: CenterReleased = 0;
 12333  0B49  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 12334  0B4A  2B51               	goto	i1l4557
 12335                           	line	131
 12336                           	
 12337  0B4B                     i1l4555:	
 12338                           	line	132
 12339                           ;HMI.c: 131: }
 12340                           ;HMI.c: 132: }
 12341  0B4B  2B51               	goto	i1l4557
 12342                           	line	133
 12343                           	
 12344  0B4C                     i1l4554:	
 12345                           	line	135
 12346                           ;HMI.c: 133: else
 12347                           ;HMI.c: 134: {
 12348                           ;HMI.c: 135: CenterDebounceCount = 0;
 12349  0B4C  1683               	bsf	status, 5	;RP0=1, select bank1
 12350  0B4D  1303               	bcf	status, 6	;RP1=0, select bank1
 12351  0B4E  01C4               	clrf	(_CenterDebounceCount)^080h	;volatile
 12352                           	line	136
 12353                           ;HMI.c: 136: CenterReleased = 1;
 12354  0B4F  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 12355  0B50  2B51               	goto	i1l4557
 12356                           	line	137
 12357                           	
 12358  0B51                     i1l4556:	
 12359                           	line	138
 12360                           	
 12361  0B51                     i1l4557:	
 12362  0B51  0008               	return
 12363                           	opt stack 0
 12364                           GLOBAL	__end_of_Debounce
 12365  0B52                     	__end_of_Debounce:
 12366 ;; =============== function _Debounce ends ============
 12367                           
 12368                           	signat	_Debounce,88
 12369                           psect	text1110,local,class=CODE,delta=2
 12370                           global __ptext1110
 12371  0000                     __ptext1110:
 12372                           	global	btemp
 12373  007E                     	btemp set 07Eh
 12374                           
 12375                           	DABS	1,126,2	;btemp
 12376                           	global	wtemp0
 12377  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 04 14:56:08 2015

  __end_of_lcd_write_control 1303              ??_UpdateDisplay 0045                            pc 0002  
                         _GO 00FA                           _RD 0C60                           _WR 0C61  
                         fsr 0004          ___wmul@multiplicand 0022                          l700 1318  
                        l703 13D4                          l704 13D4                          l705 13D8  
                        l706 13F7                          l690 156C                          l691 1595  
                        l692 1570                          l693 1574                          l694 1578  
                        l695 157C                          l696 1580                          l689 1584  
                        l697 15A2                          _GIE 005F                          _RB0 0030  
                        _RC0 0038                          _RB2 0032                          _RC1 0039  
                        _RB3 0033                          _RC2 003A                          _RB4 0034  
                        _RB5 0035                          _RE0 0048                          _RB6 0036  
                        _RE1 0049                          _RE2 004A                          _RX9 00C6  
                        _TX9 04C6                          _abs 1533                          _pos 00BC  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0026  
           ??_robotMoveSpeed 005D              ?_lcd_set_cursor 0072                _assignedSpeed 00E0  
                       ?_abs 0026                         l1402 12C7                         l1410 14A6  
                       l1411 14A6                         l2300 00A3                         l1405 12B4  
                       l3021 17C0                         l2301 00F2                         l3030 04EF  
                       l3022 17E1                         l2230 0D41                         l2302 00F3  
                       l3031 0368                         l3023 17FF                         l2231 0CB5  
                       l2311 01E3                         l2303 0124                         l3032 04EE  
                       l3040 04EA                         l1408 1495                         l2232 0D52  
                       l2240 0D0D                         l2312 02A0                         l2304 013E  
                       l3041 04E9                         l3033 03B5                         l1409 147C  
                       l2225 1502                         l2241 0D0F                         l2233 0CC2  
                       l2313 02A1                         l2305 016B                         l3034 04ED  
                       l3042 04EF                         l3026 132E                         l2242 0D3D  
                       l2234 0D54                         l2314 02A2                         l2306 01AE  
                       l3035 0402                         l2243 0D3F                         l2235 0CC7  
                       l2315 02A8                         l2307 01C8                         l3036 04EC  
                       l2244 0D53                         l2236 0CDC                         l2228 0CA9  
                       l2316 02C9                         l2308 01E0                         l3037 044F  
                       l3029 031B                         l1429 1422                         l2245 0D54  
                       l2237 0CE9                         l2229 0CB4                         l2317 02CA  
                       l2309 01E4                         l3038 04EB                         l2270 164E  
                       l2238 0CEB                         l2318 02CA                         l3039 049C  
                       l2271 1650                         l2263 163C                         l2239 0D00  
                       l2272 1672                         l2264 1647                         l2280 0970  
                       l2265 165F                         l2273 165C                         l2281 0987  
                       l2274 1671                         l2266 1648                         l2282 09B4  
                       l2290 0043                         l2275 1672                         l2267 1670  
                       l2291 004B                         l2268 164A                         l2292 0053  
                       l2269 164C                         l2293 005B                         l2285 0025  
                       l2278 0952                         l2294 006A                         l2286 003A  
                       l1399 1302                         l2279 09AB                         l2295 02AA  
                       l2287 006D                         l2296 007F                         l2288 003B  
                       l2297 02C0                         l2289 007E                         l2298 008B  
                       l2299 0097                         l3740 12EE                         l6061 0DC8  
                       l6062 0D86                         l6070 0C67                         l6055 135E  
                       l3743 171A                         l6063 0D93                         l6071 0C41  
                       l3744 1721                         l6064 0DFF                         l6072 0C4E  
                       l3737 12E3                         l3745 173E                         l6065 0E1D  
                       l6073 0C80                         l4570 16B7                         l3738 12E3  
                       l3746 1728                         l6082 1567                         l6058 17AA  
                       l6074 0C9E                         l4571 1678                         l3739 12E8  
                       l3747 1748                         l4572 1679                         l3748 1759  
                       l6068 0C21                         l4573 168A                         l6077 0A67  
                       l6069 0C40                         l4574 168B                         l6078 0A85  
                       l4590 0659                         l4575 169D                         l6079 0AB9  
                       l4583 06FD                         l4591 06AA                         l4568 16A5  
                       l4576 169E                         l4592 06FB                         l4584 0509  
                       l4577 16B9                         l4569 1677                         l4593 0710  
                       l4585 0569                         l4578 16A3                         l4586 057C  
                       l4587 0710                         l4588 05C4                         l4589 0630  
                       l7530 144E                         l7540 1709                         l7533 1702  
                       l7534 16D4                         l7550 162C                         l6830 0FFA  
                       l7630 07B1                         l7527 1428                         l7535 16C8  
                       l7543 1625                         l6831 0F1D                         l7631 07B6  
                       l6816 13CE                         l7528 1432                         l7536 16D9  
                       l7544 15FF                         l7640 0BA7                         l6840 0FDA  
                       l6832 0F1E                         l7632 07CB                         l7529 1447  
                       l7537 16DA                         l7545 15F3                         l7641 0BB9  
                       l6825 0FE6                         l6841 0F9A                         l6833 0F36  
                       l7633 07E2                         l7625 072C                         l7538 16F3  
                       l7546 1604                         l7642 0BDE                         l6842 0FE5  
                       l6834 0F1F                         l6826 0F08                         l7626 07FE  
                       l7539 1701                         l7547 1605                         l7643 0BCA  
                       l6843 0FF9                         l6835 0F50                         l6827 0F1A  
                       l7627 0745                         l7548 1616                         l7644 0BD7  
                       l7636 0B6F                         l7740 0908                         l6844 0FFF  
                       l6836 0F5B                         l6828 0F21                         l7628 0785  
                       l6781 133A                         l7549 1624                         l7645 0BCB  
                       l7637 0BF7                         l7741 0909                         l6837 0F83  
                       l6829 0F1C                         l7629 079A                         l6782 1345  
                       l7646 0BDD                         l7638 0BBA                         l7742 091A  
                       l6838 0F78                         l6791 1386                         l7647 0BEE  
                       l7639 0BA6                         l7743 0928                         l7735 08E3  
                       l6839 0F95                         l7663 145F                         l6792 1385  
                       l7744 0933                         l7736 08ED                         l7664 147A  
                       l6793 1391                         l7745 093A                         l7737 0929  
                       l6785 1361                         l6794 13A6                         l7738 0903  
                       l6786 1360                         l7739 08F7                         l6787 136A  
                       l6788 1380                         l7861 09C3                         l7870 09FF  
                       l7862 0A31                         l7871 0A0E                         l7863 09D9  
                       l7872 0A18                         l7864 09CC                         l7873 0A31  
                       l7865 09E0                         l7866 09F7                         l7867 09E1  
                       l7859 09CB                         l7868 09FE                         l7869 0A0A  
                       _CHS0 00FB                         _CHS1 00FC                         _CHS2 00FD  
                       STR_1 0879                         STR_2 0870                         STR_3 088B  
                       STR_4 0894                         STR_5 0882                         STR_6 0867  
                       STR_7 08B8                         STR_8 08BC                         STR_9 08A4  
                       _BRGH 04C2                         _CREN 00C4                         u4010 1335  
                       u4011 1334                         u4020 1340                         u4021 133F  
                       u4110 1446                         u4111 1445                         u4120 16C4  
                       u5000 0A48                         u4105 143A                         u4121 16C3  
                       u5001 0A47                         u4210 1603                         u5010 1713  
                       u4211 1602                         u5011 1712                         u4140 16D8  
                       u4220 160F                         u5020 1748                         u5100 03C8  
                       u4141 16D7                         u4221 160E                         u4205 15F4  
                       u5021 1747                         u5101 03C7                         u5110 040C  
                       u5030 02D8                         u4135 16C9                         u5111 040B  
                       u5031 02D7                         u4080 142C                         u4160 16EB  
                       u4240 1623                         u5120 0415                         u5040 02E1  
                       u5200 0F76                         u4081 142B                         u4161 16EA  
                       u4241 1622                         u4225 160B                         u5025 1744  
                       u5121 0414                         u5041 02E0                         u5201 0F75  
                       u5130 0459                         u5050 0325                         u5210 0F82  
                       u4155 16DB                         u4235 1617                         u5131 0458  
                       u5051 0324                         u5211 0F81                         u4180 1700  
                       u4500 09C2                         u5140 0462                         u5060 032E  
                       u5220 0F89                         u5300 0767                         u4181 16FF  
                       u4165 16E7                         u4501 09C1                         u5141 0461  
                       u5061 032D                         u5221 0F88                         u5205 0F72  
                       u4190 15EF                         u5150 04A6                         u5070 0372  
                       u5230 0FE4                         u5310 0789                         u4095 1433  
                       u4175 16F4                         u4191 15EE                         u5151 04A5  
                       u5071 0371                         u5231 0FE3                         u5311 0788  
                       u3560 13D8                         u3800 169A                         u4520 09DF  
                       u5160 04AF                         u5080 037B                         u5240 0FF8  
                       u5400 07E1                         u3561 13D7                         u3801 1699  
                       u4521 09DE                         u5161 04AE                         u5081 037A  
                       u5241 0FF7                         u5401 07E0                         u5321 0792  
                       u5305 0763                         u3810 12E7                         u5090 03BF  
                       u5170 0F0E                         u5250 136A                         u5322 0799  
                       u5410 1456                         u3811 12E6                         u4515 09D1  
                       u5091 03BE                         u5171 0F0D                         u5251 1369  
                       u5411 1455                         _PEIE 005E                         u4540 09FD  
                       u4700 0B95                         u5180 0F46                         u5420 14A5  
                       u5500 0950                         u4541 09FC                         u4701 0B94  
                       u5181 0F45                         u5421 14A4                         u5501 094F  
                       u4710 0B9C                         u5190 0F59                         u5350 07B0  
                       u5270 0724                         u5430 04FA                         u5510 0963  
                       u3575 13E5                         u4535 09F0                         u4711 0B9B  
                       u5191 0F58                         u5351 07AF                         u5335 079B  
                       u5271 0723                         u5511 0962                         u4560 0A0E  
                       u4800 08E7                         u5360 07BA                         u5280 073D  
                       u5440 0556                         u5520 0980                         u5600 0D17  
                       u4561 0A0D                         u4801 08E6                         u5265 1548  
                       u5361 07B9                         u5345 07A3                         u5281 073C  
                       u5441 0555                         u5521 097F                         u5505 094C  
                       u5601 0D16                         u4570 0A12                         u4490 09BB  
                       u4730 0BB8                         u4810 08F3                         u5290 0755  
                       u5450 17BE                         u5530 09AA                         u5610 0D1D  
                       u4571 0A11                         u4555 0A02                         u4731 0BB7  
                       u4811 08F2                         u5371 07C3                         u5451 17BD  
                       u5531 09A9                         u5515 095F                         u5611 0D1C  
                       _RCIE 0465                         u3780 1391                         u4580 0A23  
                       u4740 0BC0                         u5372 07CA                         u5460 17E0  
                       u5540 0C02                         u5700 01C3                         u5620 0029  
                       _RCIF 0065                         u3781 1390                         u4741 0BBF  
                       u4725 0BA8                         u5445 0552                         u5461 17DF  
                       u5541 0C01                         u5701 01C2                         u5621 0028  
                       u3790 1685                         u4590 0A30                         u4830 0907  
                       u5470 0D91                         u5550 0C4C                         u5710 01CE  
                       u5630 0119                         u3791 1684                         u4831 0906  
                       u5295 0751                         u5455 17BA                         u5535 09A6  
                       u5711 01CD                         u5631 0118                         u4760 0BDC  
                       u4680 0B65                         u4840 0913                         u5480 0DFE  
                       u5560 0C7F                         u5720 01DB                         u5640 0133  
                       u4585 0A1F                         u4761 0BDB                         u4681 0B64  
                       u4841 0912                         u4825 08F8                         u5385 07CC  
                       u5465 17DC                         u5481 0DFD                         u5561 0C7E  
                       u5721 01DA                         u5641 0132                         u4770 0BE2  
                       u4690 0B7A                         u5490 1640                         u5570 0CAD  
                       u5650 014D                         u4755 0BCD                         u5395 07D4  
                       u5491 163F                         u5571 0CAC                         u5651 014C  
                       u5635 0115                         u4860 0927                         u5580 0CCF  
                       u5660 015C                         u4861 0926                         u4845 090F  
                       u5485 0DFA                         u5565 0C7B                         u5581 0CCE  
                       u5725 01D7                         u5661 015B                         u5645 012F  
                       u4870 092D                         u4790 08DA                         u5590 0CF3  
                       u5670 017A                         u4695 0B76                         u4855 091B  
                       u4791 08D9                         u5807 178D                         u5591 0CF2  
                       u5671 0179                         u5655 0149                         u5680 0189  
                       u5817 1731                         u5681 0188                         u5665 0158  
                       u5737 00AB                         u5690 01BD                         _OERR 00C1  
                       u5827 12C3                         u5691 01BC                         u5675 0176  
                       u5747 00C5                         u5837 12FD                         u5685 0185  
                       u5757 00DF                         u5847 1316                         u5767 0209  
                       u5695 01B9                         u5857 1597                         u5777 026A  
                       u5787 028D                         u5797 176C                         _TMR0 0001  
                 _ChargeMode 162D                         _SPEN 00C7                         _TXIE 0464  
                       _WREN 0C62                         _TXEN 04C5                         _TXIF 0064  
                       _SYNC 04C4          __size_of_ADCconvert 0223                         _Menu 1673  
     __end_of_lcd_write_data 12C8                         abs@v 0026                         _isr1 0E1E  
                       _main 0015                 ___ftpack@arg 0020                         _init 14D4  
               ___ftpack@exp 0023                         _test 00BE                         btemp 007E  
             _CenterReleased 0381                         start 0012                 ___ftmul@cntr 004A  
               ___ftmul@sign 004B                ??_ReadButtons 0073                 ___fttol@exp1 0035  
                      ??_abs 0028                 ___fttol@lval 0031                        ?_Menu 0072  
                      l11001 09EF                        l11011 0A2C                        l11003 09FF  
                      l11013 0A30                        l11005 0A0A                        l11101 0BF7  
                      l11007 0A12                        l11009 0A1A                        l11121 08E7  
                      l11131 0903                        l11123 08ED                        l11115 08D3  
                      l11061 0B65                        l11133 0909                        l11125 08F3  
                      l11141 0929                        l11117 08DA                        l11221 1582  
                      l11301 02D8                        l11071 0B88                        l11063 0B6E  
                      l11143 092D                        l11135 0913                        l11127 08F7  
                      l11119 08E3                        l11231 15A2                        l11223 1583  
                      l11311 0368                        l11303 02E1                        l10601 13A7  
                      l11081 0BA5                        l11073 0B8F                        l11065 0B6F  
                      l11145 0933                        l11137 091A                        l11129 08FE  
                      l11225 1584                        l11217 156B                        l11241 1312  
                      l11233 1303                        l11321 03C8                        l11313 0372  
                      l11305 031B                        l11401 1361                        l10611 13B6  
                      l10603 13AA                        l11091 0BCB                        l11083 0BA7  
                      l11075 0B91                        l11067 0B81                        l11059 0B52  
                      l11147 093A                        l11139 0921                        l11219 1580  
                      l11227 1595                        l11235 1306                        l11243 12F2  
                      l11251 12B8                        l11331 0459                        l11323 0402  
                      l11315 037B                        l11307 0325                        l11411 137E  
                      l11403 136B                        l10621 13C3                        l10613 13B9  
                      l10605 13B2                        l10701 12EE                        l10461 1342  
                      l11093 0BD7                        l11077 0B95                        l11085 0BBA  
                      l11069 0B82                        l11229 1599                        l11237 130A  
                      l11245 12F5                        l11253 12BB                        l11261 0A32  
                      l11333 0462                        l11325 040C                        l11317 03B5  
                      l11309 032E                        l11341 0F03                        l11413 1380  
                      l11405 1375                        l11421 0724                        l11501 140A  
                      l10623 13C4                        l10615 13BC                        l10607 13B3  
                      l10463 1344                        l11087 0BC0                        l11095 0BDE  
                      l11079 0B9C                        l11239 130E                        l11247 12F7  
                      l11255 12BD                        l11263 0A3A                        l11271 170A  
                      l11335 049C                        l11327 0415                        l11319 03BF  
                      l11351 0F21                        l11343 0F08                        l11407 1379  
                      l11415 1533                        l11431 0745                        l11423 072B  
                      l11503 1410                        l11511 1766                        l10481 13F7  
                      l10473 13CF                        l10625 13C5                        l10617 13BF  
                      l10609 13B5                        l11097 0BE2                        l11089 0BC9  
                      l11249 12F8                        l11257 12BE                        l11265 0A42  
                      l11281 1724                        l11273 170E                        l11337 04A6  
                      l11329 044F                        l11361 0F4A                        l11353 0F36  
                      l11345 0F0E                        l11409 137D                        l11417 1567  
                      l11441 0780                        l11433 0772                        l11425 072C  
                      l11505 1416                        l11521 179E                        l11513 1771  
                      l11601 0687                        l10475 13D2                        l10619 13C0  
                      l10811 1337                        l11099 0BEE                        l11259 1346  
                      l11267 0A48                        l11291 1753                        l11283 1725  
                      l11275 1713                        l11339 04AF                        l11371 0F77  
                      l11363 0F50                        l11355 0F3E                        l11347 0F15  
                      l11451 07AA                        l11443 0785                        l11435 0773  
                      l11427 073D                        l11419 0711                        l11507 141C  
                      l11515 177B                        l11523 1319                        l11531 14D5  
                      l11611 06D8                        l11603 0698                        l10477 13DB  
                      l10661 1392                        l10821 1345                        l10813 1339  
                      l10901 15FF                        l11269 0A67                        l11293 1754  
                      l11285 172D                        l11277 171A                        l11381 0F90  
                      l11373 0F78                        l11365 0F53                        l11357 0F42  
                      l11349 0F20                        l11461 07D3                        l11453 07B1  
                      l11445 0789                        l11437 0774                        l11429 0744  
                      l11517 1781                        l11509 175A                        l11525 1327  
                      l11541 14EC                        l11533 14DD                        l11613 06E9  
                      l11605 069E                        l11621 17AB                        l11701 0963  
                      l10479 13EE                        l10663 139C                        l10671 1679  
                      l10815 133A                        l10807 132F                        l10903 1605  
                      l10911 1625                        l11295 1755                        l11287 174A  
                      l11279 1721                        l11391 0FDA                        l11383 0F95  
                      l11375 0F7C                        l11367 0F5A                        l11359 0F46  
                      l11463 07DB                        l11455 07B6                        l11447 079A  
                      l11439 077A                        l11471 1456                        l11519 1792  
                      l11527 132E                        l11551 1500                        l11543 14F1  
                      l11535 14DF                        l11615 06EF                        l11607 06AA  
                      l11631 17D3                        l11623 17B1                        l11711 0987  
                      l11703 0970                        l10665 13A2                        l10657 1384  
                      l10681 169E                        l10673 1681                        l10817 1340  
                      l10809 1335                        l10913 162C                        l10905 160F  
                      l11297 1756                        l11289 1750                        l11385 0F9A  
                      l11377 0F83                        l11369 0F5B                        l11393 0FE6  
                      l11465 07E2                        l11457 07BA                        l11449 07A2  
                      l11473 145F                        l11481 147B                        l11553 1501  
                      l11545 14F6                        l11537 14E3                        l11529 14D4  
                      l11617 06FC                        l11609 06B0                        l11561 0530  
                      l11625 17BF                        l11633 17E1                        l11641 0D69  
                      l11713 0995                        l11705 097C                        l11721 0BF8  
                      l11801 0043                        l10667 13A5                        l10659 1386  
                      l10691 16B9                        l10683 16A2                        l10675 1685  
                      l10819 1342                        l10907 1616                        l11299 02CD  
                      l11387 0FCE                        l11379 0F89                        l11395 0FFA  
                      l11467 07FE                        l11459 07CB                        l11475 147A  
                      l11483 147C                        l11491 13FC                        l11547 14FB  
                      l11539 14E7                        l11571 057C                        l11563 0541  
                      l11619 06FD                        l11555 04F0                        l11627 17C0  
                      l11651 0D8B                        l11643 0D71                        l11635 0D55  
                      l11715 099D                        l11707 0980                        l11731 0C46  
                      l11723 0BFC                        l11811 0059                        l11803 0049  
                      l10685 16A4                        l10677 168B                        l10669 1676  
                      l10693 12DE                        l10861 1439                        l10909 161D  
                      l11397 0FFF                        l11389 0FD5                        l11469 144F  
                      l11477 12AD                        l11485 148C                        l11493 13FF  
                      l11549 14FF                        l11581 05EB                        l11573 0582  
                      l11565 0547                        l11557 0509                        l11629 17CD  
                      l11661 0DB6                        l11653 0D92                        l11645 0D79  
                      l11637 0D59                        l11709 0981                        l11717 09AB  
                      l11733 0C4D                        l11741 0C80                        l11725 0C02  
                      l11901 0294                        l11821 007F                        l11813 005B  
                      l11805 004B                        l10679 169A                        l10687 16A5  
                      l10695 12E0                        l10863 1447                        l10855 1423  
                      l10871 16C4                        l11399 135F                        l11479 12AE  
                      l11487 1495                        l11495 1400                        l11591 0630  
                      l11583 05FC                        l11575 0599                        l11567 0556  
                      l11559 050F                        l11663 0DC2                        l11655 0D93  
                      l11647 0D7F                        l11639 0D63                        l11671 1635  
                      l11719 09B4                        l11735 0C4E                        l11727 0C21  
                      l11751 0CB6                        l11743 0C9F                        l11903 02A2  
                      l11831 00BD                        l11823 008B                        l11815 0068  
                      l11807 0051                        l10689 16B7                        l10697 12E8  
                      l10865 144E                        l10857 1428                        l10881 16EB  
                      l10873 16C8                        l11497 1403                        l11489 13F8  
                      l11593 063C                        l11585 0602                        l11577 05C4  
                      l11569 0569                        l11657 0D9E                        l11649 0D86  
                      l11665 0DC8                        l11681 1656                        l11673 163C  
                      l11737 0C61                        l11729 0C41                        l11761 0CEB  
                      l11753 0CC7                        l11745 0CA9                        l11905 02A9  
                      l11841 0108                        l11833 00CC                        l11825 0097  
                      l11817 006C                        l11809 0053                        l10699 12EC  
                      l10859 142C                        l10891 1709                        l10883 16F1  
                      l10875 16CF                        l10867 16BA                        l11499 1404  
                      l11595 0647                        l11587 0613                        l11579 05CA  
                      l11659 0DA9                        l11667 0DFF                        l11683 1657  
                      l11675 1640                        l11691 093B                        l11739 0C67  
                      l11771 0D17                        l11763 0CF3                        l11755 0CCF  
                      l11747 0CAD                        l11851 0133                        l11843 010A  
                      l11835 00D7                        l11827 00A3                        l11907 02AA  
                      l11819 006D                        l10885 16F3                        l10877 16D4  
                      l10869 16BE                        l10893 15E7                        l11597 0659  
                      l11589 061E                        l11685 165B                        l11677 1641  
                      l11669 162D                        l11693 0943                        l11773 0D1D  
                      l11765 0D00                        l11757 0CDC                        l11749 0CAE  
                      l11861 016B                        l11853 013E                        l11845 010C  
                      l11837 00E6                        l11829 00B2                        l11909 02C0  
                      l11781 0015                        l10887 16FA                        l10879 16DA  
                      l10895 15EF                        l10991 09CA                        l11599 065F  
                      l11687 165E                        l11679 1650                        l11695 0951  
                      l11775 0D3D                        l11767 0D0D                        l11759 0CE9  
                      l11863 017A                        l11871 01AE                        l11855 014D  
                      l11847 0119                        l11839 00F3                        l11791 002A  
                      l11783 001D                        l10889 1702                        l10897 15F3  
                      l10993 09CC                        l10985 09B5                        l11689 165F  
                      l11697 0952                        l11777 0D40                        l11769 0D0F  
                      l11881 01DB                        l11873 01BD                        l11865 0189  
                      l11857 015C                        l11849 0124                        l11793 002F  
                      l11785 001F                        l10899 15FA                        l10995 09D9  
                      l10987 09BB                        l11699 0957                        l11779 0D41  
                      l11891 0210                        l11883 01E1                        l11875 01C3  
                      l11867 01A6                        l11859 0166                        l11795 0034  
                      l11787 0025                        l10997 09E1                        l10989 09C3  
                      l11893 0251                        l11885 01E2                        l11877 01C8  
                      l11869 01AB                        l11797 003B                        l11789 0029  
                      l10999 09E5                        l11895 0262                        l11879 01CE  
                      l11887 01E4                        l11799 0041                        l11897 0271  
                      l11889 0201                        l11899 0285                        ?_isr1 0072  
                      ?_main 0072                        ?_init 0072                        _EEADR 010D  
                      STR_10 08B0                        STR_11 08C0                        STR_20 085E  
                      STR_12 08B4                        STR_21 0849                        STR_13 083A  
                      STR_22 085E                        STR_14 083A                        STR_23 0854  
                      STR_15 082A                        STR_24 085E                        STR_16 08A8  
                      STR_17 089C                        STR_18 08AC                        STR_19 081A  
            __end_of___awmod 093B                        _CARRY 0018              __end_of___ftmul 07FF  
            __end_of___fttol 0BF8  robotMoveSpeed@speedhighByte 0061              __end_of___lwdiv 170A  
            __end_of___lwmod 162D                        _RCREG 001A                        _SPBRG 0099  
                      _PORTA 0005                        _PORTC 0007                        _PORTD 0008  
                      _PORTE 0009                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _TRISE 0089  
                      _SSPIF 0063                        _TXREG 0019       lcd_write_data@databyte 0022  
         i1___lwmod@dividend 0074              __end_of_scan360 09B5                ___awtoft@sign 003B  
              ___ftpack@sign 0024                        _total 00C0               __pbitbssCOMMON 0380  
                      pclath 000A                  _turnlowByte 00D2              ?_lcd_write_data 0072  
          ?_adc_read_channel 0072                        status 0003                        wtemp0 007E  
            __end_of_sprintf 1000             __end_of_Debounce 0B52           __size_ofi1___lwmod 0044  
         ??_adc_read_channel 0026             ?_readAvgDistance 0072                 __end_of_Menu 16BA  
 __size_of_lcd_write_control 0014             _shortMenuStrings 00DA                 __end_of_isr1 0F00  
               __end_of_main 02CD                 __end_of_init 1503              rotate@direction 0025  
                     ??_Menu 0020                ?_readDistance 0028       readAvgDistance@fullval 0030  
                     ??_isr1 0078                       ??_main 0067                ___fttol@sign1 0030  
                     ??_init 0023          __end_of_ReadButtons 1533                Menu@BTN_input 0020  
                     _ADCON0 001F                       _ADCON1 009F                       _ADRESH 001E  
                     _ADRESL 009E                       _EEDATA 010C                       _EECON1 018C  
                     _EECON2 018D             __end_of___awtoft 147B             __end_of___ftpack 0A32  
           __end_of_adc_read 13F8                  ?_ChargeMode 0072                       i1l2220 0EF4  
                     i1l2212 0EA3                       i1l2221 0EF3                       i1l2213 0E45  
                     i1l2222 0EF4                       i1l2214 0E5E                       i1l2215 0E77  
                     i1l2216 0E94                       i1l2217 0EA2                       i1l2218 0ECB  
                     i1l2219 0ECA                       i1l4550 0B14                       i1l4542 0AD4  
                     i1l4551 0B2E                       i1l4543 0AD3                       i1l4552 0B2D  
                     i1l4544 0AD8                       i1l4560 1510                       i1l4553 0B32  
                     i1l4545 0AF2                       i1l4561 1532                       i1l4554 0B4C  
                     i1l4546 0AF1                       i1l4562 1518                       i1l4555 0B4B  
                     i1l4547 0AF6                       i1l4563 1520                       i1l4556 0B51  
                     i1l4548 0B10                       i1l4564 1528                       i1l4557 0B51  
                     i1l4549 0B0F                       i1l4565 1530                       i1l7550 15E6  
                     i1l7543 15DF                       i1l7544 15B9                       i1l7545 15AD  
                     i1l7546 15BE                       i1l7547 15BF                       i1l7548 15D0  
                     i1l7549 15DE                       u400_20 0B48                       u400_21 0B47  
                     u361_20 0E22                       u361_21 0E21                       u370_20 0ED5  
                     u362_20 0E43                       u370_21 0ED4                       u362_21 0E42  
                     u371_20 0EEF                       u363_20 0E5C                       u371_21 0EEE  
                     u363_21 0E5B                       u372_20 150C                       u364_20 0E75  
                     u372_21 150B                       u364_21 0E74                       u373_20 1514  
                     u365_20 0E8E                       u373_21 1513                       u365_21 0E8D  
                     u390_20 0AEA                       u374_20 151C                       u366_20 0E99  
                     u390_21 0AE9                       u374_21 151B                       u366_21 0E98  
                _DistLowByte 00C6                       u391_20 0AEE                       u375_20 1524  
                     u367_20 0EA9                       u391_21 0AED                       u375_21 1523  
                     u367_21 0EA8                       u392_20 0AFC                       u376_20 152C  
                     u368_20 0EC1                       u392_21 0AFB                       u376_21 152B  
                     u368_21 0EC0                       u393_20 0B08                       u369_20 0ECF  
                     u393_21 0B07                       u369_21 0ECE                       u394_20 0B0C  
                     u386_20 0AC0                       u394_21 0B0B                       u386_21 0ABF  
                     u395_20 0B1A                       u387_20 0ACC                       u395_21 0B19  
                     u387_21 0ACB                       u396_20 0B26                       u388_20 0AD0  
                     u396_21 0B25                       u388_21 0ACF                       u397_20 0B2A  
                     u389_20 0ADE                       u397_21 0B29                       u389_21 0ADD  
                     u398_20 0B38                       u494_20 15A9                       u398_21 0B37  
                     u494_21 15A8                       u399_20 0B44                       u399_21 0B43  
                     u495_25 15AE                       u496_20 15BD                       u496_21 15BC  
                     u497_20 15C9                       u497_21 15C8                       u497_25 15C5  
                     u498_25 15D1                       u499_20 15DD                       u499_21 15DC  
                     _TMR0IE 005D                       _TMR0IF 005A                 scan360@steps 005F  
                     _SSPCON 0014                       _SSPBUF 0013            ?_straightLineTest 0064  
                 _UpReleased 038E           ??_straightLineTest 0066             __end_of_lcd_init 1423  
                     _adcVal 006A              _UpDebounceCount 00CA                       ___wmul 1423  
                  ??___awmod 0024                 _turnhighByte 00D1                    ??___ftmul 0042  
               ??_ADCconvert 002E                    ??___fttol 002C                    ??___lwdiv 002A  
                  ??___lwmod 0032             __end_of_init_adc 1319               ??_readDistance 002A  
            ___awmod@divisor 0020     __end_of_lcd_write_string 14A7              ___awmod@counter 0025  
                     _rotate 170A                       _rxfifo 00A0                       clrloop 12A3  
                     _txfifo 01A0                       _rxiptr 006D                       _rxoptr 006E  
                _BumpSensors 006C                       _txiptr 006F                    ??_scan360 005B  
      ___ftmul@f3_as_product 0047                       _txoptr 00D3             __end_of_ser_init 13CF  
           __end_of_ser_isrx 1346            __end_ofi1___lwmod 15E7                       saved_w 007E  
              main@shortwall 00E8                  _LeftPressed 0384                    ??_sprintf 0039  
                _DownPressed 0382            lcd_write_string@s 0027           __end_of_ADCconvert 04F0  
                 ___awtoft@c 0036                   ___ftmul@f1 003C                   ___ftmul@f2 003F  
                 ___fttol@f1 0028               __pcstackCOMMON 0072                 __pidataBANK1 08C4  
                _ReadButtons 1503     straightLineTest@menuflag 0064          __size_of_ChargeMode 0046  
           ??_lcd_set_cursor 0023                    ?_Debounce 0072                _buttonPressed 007D  
                 __pbssBANK0 006A                   __pbssBANK1 00A0                   __pbssBANK3 0190  
          _DownDebounceCount 00C7               main@direction1 00E3           _RightDebounceCount 00C9  
                 __pmaintext 0015            robotTurn@distance 0022                      ?___wmul 0020  
                 __pintentry 0004                 _DistHighByte 00C5                   __ptext1100 132F  
                 __ptext1101 12DB                   __ptext1110 0000                   __ptext1102 1673  
                 __ptext1103 1381                   __ptext1104 13A7                   __ptext1105 13CF  
      __end_of_UpdateDisplay 0711                   __ptext1106 0E1E                   __ptext1107 1503  
                 __ptext1108 15A3                   __ptext1109 0ABA                   __ptext1070 093B  
                 __ptext1071 162D                   __ptext1080 12AA                   __ptext1072 0D55  
                 __ptext1081 144F                   __ptext1073 17AB                   __ptext1090 12B5  
                 __ptext1082 0711                   __ptext1074 04F0                   __ptext1091 12EF  
                 __ptext1083 1533                   __ptext1075 14D4                   __ptext1092 1303  
                 __ptext1084 135F                   __ptext1076 1319                   __ptext1068 0C9F  
                 __ptext1093 1568                   __ptext1085 0F00                   __ptext1077 175A  
                 __ptext1069 0BF8                   __ptext1094 08D3                   __ptext1086 02CD  
                 __ptext1078 13F8                   __ptext1095 0B52                   __ptext1087 170A  
                 __ptext1079 147B                   __ptext1096 09B5                   __ptext1088 0A32  
                 __ptext1097 15E7                   __ptext1089 1346                   __ptext1098 16BA  
                 __ptext1099 1423           __size_of_ser_getch 0022                    ?___awtoft 0036  
                  ?___ftpack 0020                    ?_adc_read 0020                      ?_rotate 0023  
         __size_of_ser_putch 0026           __size_of_robo_init 0019                      i1l11201 15B4  
                    i1l11211 15D7                      i1l11203 15B9                      i1l11205 15BF  
                    i1l11213 15DF           __size_of_robotMove 00A7                      i1l11215 15E6  
                    i1l11207 15C9                      i1l10511 0E22                      i1l11209 15D0  
                    i1l10521 0E45                      i1l10513 0E23                      i1l10531 0E8E  
                    i1l10523 0E5C                      i1l10515 0E2D                      i1l10541 0EA9  
                    i1l10533 0E8F                      i1l10525 0E5E                      i1l10517 0E2E  
                    i1l10509 0E1E                      i1l10551 0ECF                      i1l10543 0EB1  
                    i1l10535 0E94                      i1l10527 0E75                      i1l10519 0E43  
                    i1l10801 0B3E                      i1l10561 0EEF                      i1l10553 0ED5  
                    i1l10545 0EB9                      i1l10537 0E99                      i1l10529 0E77  
                    i1l10803 0B44                      i1l11195 15A3                      i1l10571 150F  
                    i1l10563 1503                      i1l10555 0EDD                      i1l10547 0EC1  
                    i1l10539 0EA3                      i1l10805 0B48                      i1l11197 15A9  
                    i1l10581 151D                      i1l10573 1514                      i1l10565 1508  
                    i1l10557 0EE3                      i1l10549 0ECB                      i1l11199 15AD  
                    i1l10591 152C                      i1l10583 151F                      i1l10575 1515  
                    i1l10567 150C                      i1l10559 0EE7                      i1l10593 152D  
                    i1l10585 1524                      i1l10577 1517                      i1l10569 150D  
                    i1l10771 0ACC                      i1l10595 152F                      i1l10587 1525  
                    i1l10579 151C                      i1l10781 0AEE                      i1l10773 0AD0  
                    i1l10765 0ABA                      i1l10597 1530                      i1l10589 1527  
                    i1l10791 0B1A                      i1l10783 0AFC                      i1l10775 0ADE  
                    i1l10767 0AC0                      i1l10599 1532                      i1l10793 0B20  
                    i1l10785 0B02                      i1l10777 0AE4                      i1l10769 0AC6  
                    i1l10795 0B26                      i1l10787 0B08                      i1l10779 0AEA  
                    i1l10797 0B2A                      i1l10789 0B0C                      i1l10799 0B38  
         __size_of_robotTurn 0088                   ??_Debounce 0072             ??_lcd_write_data 0020  
                  ?_lcd_init 0072                      _SSPSTAT 0094         __end_of_readDistance 132F  
                  ?_init_adc 0072                    ?_ser_init 0072                    ?_ser_isrx 0072  
                    ___awmod 08D3              __size_of___wmul 002C                      ___ftmul 0711  
                    ___fttol 0B52                      ___lwdiv 16BA                      ___lwmod 15E7  
  __size_of_adc_read_channel 003B                   ??___awtoft 0039                   ??___ftpack 0025  
                 ??_adc_read 0022              __size_of_rotate 0050                      _scan360 093B  
                    _dpowers 0810                 __size_of_abs 0035             ___awmod@dividend 0022  
                    _lowByte 00CE                      _ser_tmp 00CF                      _sprintf 0F00  
                 ??_lcd_init 0023         end_of_initialization 14D0                 ??_ChargeMode 0059  
          __end_of_ser_getch 1381                      init_ram 12CC                   ??_init_adc 0020  
    __size_of_robotMoveSpeed 00C9            __end_of_ser_putch 13A7            __end_of_robo_init 135F  
          __end_of_robotMove 0C9F                 _LeftReleased 0385            __end_of_robotTurn 0ABA  
                 ??_ser_init 0020                   ??_ser_isrx 0020                      rotate@i 0028  
               _DownReleased 0383                _RightReleased 038C     __size_of_readAvgDistance 0055  
                 _robot_read 175A            ?_lcd_write_string 0027           __end_of_ChargeMode 1673  
  __size_of_straightLineTest 00B6           ??_lcd_write_string 0029                  AT25256A@CS0 0038  
                AT25256A@CS1 0039            adc_read@adc_value 0024                    i1___lwmod 15A3  
                 _totalSteps 00C2                   main@choice 00E7                ?_spi_transfer 0072  
                ___ftmul@exp 0046                _CenterPressed 0380                 ?_ReadButtons 0072  
             __end_of___wmul 144F            i1___lwmod@divisor 0072            i1___lwmod@counter 0077  
 robotMoveSpeed@speedlowByte 0060               __end_of_rotate 175A          start_initialization 14A7  
                __end_of_abs 1568        __size_of_readDistance 0016            __size_of_Debounce 0098  
                 ?i1___lwmod 0072               ??_spi_transfer 0020        lcd_set_cursor@address 0023  
                  _UpPressed 038D               _RTC_FLAG_250MS 0388               _RTC_FLAG_500MS 0389  
                   ??___wmul 0024               rotate@numsteps 0023                  __pdataBANK1 00D4  
           _adc_read_channel 1568                  ?_robot_read 0072                     ??_rotate 0026  
               _readDistance 1319            __size_of___awtoft 002C            __size_of___ftpack 007D  
          __size_of_adc_read 0029                  __pbssCOMMON 007D            ??_readAvgDistance 0030  
              __pcstackBANK0 0020                __pcstackBANK1 00E3       robotMoveSpeed@distance 0059  
          __size_of_lcd_init 002B               _robotMoveSpeed 0D55                  sprintf@_val 003F  
                sprintf@flag 003D            robotMove@distance 0059                  sprintf@prec 003E  
               _current_step 00E2             readAvgDistance@i 0032            __size_of_init_adc 0016  
           ___lwdiv@dividend 0028                     ?___awmod 0020                     ?___ftmul 003C  
          __size_of_ser_init 0028                     ?___fttol 0028            __size_of_ser_isrx 0017  
                   ?___lwdiv 0026                     ?___lwmod 002E                    __pstrings 0800  
                  _dist_high 00B6             _straightLineTest 0C9F                     ?_scan360 0059  
        readDistance@fullval 002C                   ser_getch@c 0021             ___lwdiv@quotient 002B  
                ??i1___lwmod 0076                     ?_sprintf 0034       __end_of_robotMoveSpeed 0E1E  
    __size_of_lcd_set_cursor 000B            interrupt_function 0004       __size_of_UpdateDisplay 0221  
             ___wmul@product 0024          __size_of_robot_read 0051                   ser_putch@c 0021  
                  _ser_getch 135F                    _ser_putch 1381                    _robo_init 1346  
                  _robotMove 0BF8                    _robotTurn 0A32                 _RightPressed 038B  
       __size_of_ReadButtons 0030         __end_of_spi_transfer 12EF                  __stringbase 080F  
          ___wmul@multiplier 0020       UpdateDisplay@adcOutput 0049             spi_transfer@data 0022  
           spi_transfer@temp 0021                     _Debounce 0ABA            _LeftDebounceCount 00C8  
            ?_robotMoveSpeed 0059    __size_of_lcd_write_string 002C                     _d2travel 00B2  
         scan360@lowestSteps 005D      __size_of_lcd_write_data 0013                   ?_ser_getch 0072  
                 ?_ser_putch 0072      adc_read_channel@channel 0027                _RTC_FLAG_10MS 0386  
              _RTC_FLAG_50MS 038A                   ?_robo_init 0072                    init_fetch 12C8  
                 ?_robotMove 0059                   ?_robotTurn 0022                   _ADCconvert 02CD  
           __size_of___awmod 0068             __size_of___ftmul 00EE             __size_of___fttol 00A6  
           __size_of___lwdiv 0050             __size_of___lwmod 0046                     ___awtoft 144F  
                   ___ftpack 09B5                _UpdateDisplay 04F0                     _adc_read 13CF  
                _currentMenu 00CB             __size_of_scan360 007A              ___lwdiv@divisor 0026  
            ___lwdiv@counter 002D                  _menuStrings 00D4                     _highByte 00CD  
                   _lcd_init 13F8                     _distance 00BA                     _dist_low 00B8  
           __size_of_sprintf 0100     __end_of_adc_read_channel 15A3    lcd_write_control@databyte 0022  
              __size_of_Menu 0047                     _init_adc 1303                __size_of_isr1 00E2  
              __size_of_main 02B8                __size_of_init 002F                     clear_ram 12A2  
                   _ser_init 13A7                     _ser_isrx 132F                     main@RT2A 00E5  
                   main@RT2P 00EA              _readAvgDistance 17AB               ?_UpdateDisplay 0072  
               ??_robot_read 0022          _CenterDebounceCount 00C4                 _RTC_FLAG_1MS 0387  
         UpdateDisplay@F1236 0190                     intlevel1 0000               _lcd_set_cursor 12AA  
                  sprintf@ap 003C                    sprintf@sp 0043             ___lwmod@dividend 0030  
   __end_of_straightLineTest 0D55           __end_of_robot_read 17AB                    stringcode 080A  
                ??_ser_getch 0020                  _serialInput 00D0                  ??_ser_putch 0020  
              _distTravelled 00B4                  ??_robo_init 0022        __size_of_spi_transfer 0014  
                ??_robotMove 005B                  ??_robotTurn 0024                  ?_ADCconvert 0072  
          _lcd_write_control 12EF             scan360@lowestVal 005B           ?_lcd_write_control 0072  
                 _OPTION_REG 0081                     sprintf@c 0044                     sprintf@f 0034  
        robotMoveSpeed@temp1 0062          robotMoveSpeed@speed 005B              ___lwmod@divisor 002E  
            ___lwmod@counter 0033                     stringdir 080A                     stringtab 0800  
        ??_lcd_write_control 0020       __end_of_lcd_set_cursor 12B5             _lcd_write_string 147B  
               _spi_transfer 12DB            _current_direction 00CC                  _RTC_Counter 00B0  
    __end_of_readAvgDistance 1800               _lcd_write_data 12B5  
