

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 11 15:59:45 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMoveSpeed
    55                           	FNCALL	_main,_robotTurnSpeed
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_robotTurn
    60                           	FNCALL	_main,_ChargeMode
    61                           	FNCALL	_ChargeMode,_ser_putch
    62                           	FNCALL	_ChargeMode,_UpdateDisplay
    63                           	FNCALL	_robotTurnSpeed,_robotTurn
    64                           	FNCALL	_robotTurnSpeed,_robot_read
    65                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    66                           	FNCALL	_robotTurnSpeed,_abs
    67                           	FNCALL	_robotMoveSpeed,_RobotDrive
    68                           	FNCALL	_robotMoveSpeed,_robot_read
    69                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    70                           	FNCALL	_robotMoveSpeed,_abs
    71                           	FNCALL	_robotMoveSpeed,___awtoft
    72                           	FNCALL	_robotMoveSpeed,___ftge
    73                           	FNCALL	_robotMoveSpeed,___ftdiv
    74                           	FNCALL	_robotMoveSpeed,___ftmul
    75                           	FNCALL	_robotMoveSpeed,___fttol
    76                           	FNCALL	_scan360,_readAvgDistance
    77                           	FNCALL	_scan360,_rotate
    78                           	FNCALL	_scan360,_UpdateDisplay
    79                           	FNCALL	_calibrateIR,_rotate
    80                           	FNCALL	_calibrateIR,_UpdateDisplay
    81                           	FNCALL	_UpdateDisplay,_lcd_write_control
    82                           	FNCALL	_UpdateDisplay,_sprintf
    83                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    84                           	FNCALL	_UpdateDisplay,_lcd_write_string
    85                           	FNCALL	_UpdateDisplay,___awmod
    86                           	FNCALL	_readAvgDistance,_readDistance
    87                           	FNCALL	_readAvgDistance,___lwdiv
    88                           	FNCALL	_readAvgDistance,_ADCconvert
    89                           	FNCALL	_init,_ser_init
    90                           	FNCALL	_init,_init_adc
    91                           	FNCALL	_init,_lcd_init
    92                           	FNCALL	_init,_robo_init
    93                           	FNCALL	_readDistance,_adc_read_channel
    94                           	FNCALL	_robot_read,_ser_putch
    95                           	FNCALL	_robot_read,_ser_getch
    96                           	FNCALL	_lcd_init,_lcd_write_control
    97                           	FNCALL	_lcd_write_string,_lcd_write_data
    98                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    99                           	FNCALL	___awtoft,___ftpack
   100                           	FNCALL	___ftmul,___ftpack
   101                           	FNCALL	___ftdiv,___ftpack
   102                           	FNCALL	_abs,___wmul
   103                           	FNCALL	_RobotDrive,_ser_putch
   104                           	FNCALL	_ser_getch,_ser_isrx
   105                           	FNCALL	_sprintf,___lwdiv
   106                           	FNCALL	_sprintf,___lwmod
   107                           	FNCALL	_ADCconvert,___wmul
   108                           	FNCALL	_ADCconvert,___lwdiv
   109                           	FNCALL	_robotTurn,_ser_putch
   110                           	FNCALL	_rotate,_spi_transfer
   111                           	FNCALL	_robo_init,_ser_putch
   112                           	FNCALL	_adc_read_channel,_adc_read
   113                           	FNROOT	_main
   114                           	FNCALL	_isr1,i1___lwmod
   115                           	FNCALL	_isr1,_ReadButtons
   116                           	FNCALL	_ReadButtons,_Debounce
   117                           	FNCALL	intlevel1,_isr1
   118                           	global	intlevel1
   119                           	FNROOT	intlevel1
   120                           	global	_menuStrings
   121                           	global	_shortMenuStrings
   122                           	global	_current_step
   123                           psect	idataBANK1,class=CODE,space=0,delta=2
   124                           global __pidataBANK1
   125  07F1                     __pidataBANK1:
   126                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   127                           	line	49
   128                           
   129                           ;initializer for _menuStrings
   130  07F1  3453               	retlw	(STR_1-__stringbase)&0ffh
   131  07F2  344A               	retlw	(STR_2-__stringbase)&0ffh
   132  07F3  3465               	retlw	(STR_3-__stringbase)&0ffh
   133  07F4  346E               	retlw	(STR_4-__stringbase)&0ffh
   134  07F5  345C               	retlw	(STR_5-__stringbase)&0ffh
   135  07F6  3441               	retlw	(STR_6-__stringbase)&0ffh
   136                           	line	50
   137                           
   138                           ;initializer for _shortMenuStrings
   139  07F7  3492               	retlw	(STR_7-__stringbase)&0ffh
   140  07F8  3496               	retlw	(STR_8-__stringbase)&0ffh
   141  07F9  347E               	retlw	(STR_9-__stringbase)&0ffh
   142  07FA  348A               	retlw	(STR_10-__stringbase)&0ffh
   143  07FB  349A               	retlw	(STR_11-__stringbase)&0ffh
   144  07FC  348E               	retlw	(STR_12-__stringbase)&0ffh
   145                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   146                           	line	45
   147                           
   148                           ;initializer for _current_step
   149  07FD  343C               	retlw	03Ch
   150                           	global	_dpowers
   151                           psect	strings,class=STRING,delta=2
   152                           global __pstrings
   153  0800                     __pstrings:
   154                           ;	global	stringdir,stringtab,__stringbase
   155  0800                     stringtab:
   156                           ;	String table - string pointers are 1 byte each
   157  0800  1BFF               	btfsc	(btemp+1),7
   158  0801  280A               	ljmp	stringcode
   159  0802  1383               	bcf	status,7
   160  0803  187F               	btfsc	(btemp+1),0
   161  0804  1783               	bsf	status,7
   162  0805  0800               	movf	indf,w
   163  0806  0A84               	incf fsr
   164  0807  1903               skipnz
   165  0808  0AFF               incf btemp+1
   166  0809  0008               	return
   167  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   168  080A  3008               movlw high(stringdir)
   169  080B  008A               movwf pclath
   170  080C  0804               movf fsr,w
   171  080D  0A84               incf fsr
   172  080E  0782               	addwf pc
   173  080F                     __stringbase:
   174  080F  3400               	retlw	0
   175                           psect	strings
   176                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   177                           	line	350
   178  0810                     _dpowers:
   179  0810  3401               	retlw	01h
   180  0811  3400               	retlw	0
   181                           
   182  0812  340A               	retlw	0Ah
   183  0813  3400               	retlw	0
   184                           
   185  0814  3464               	retlw	064h
   186  0815  3400               	retlw	0
   187                           
   188  0816  34E8               	retlw	0E8h
   189  0817  3403               	retlw	03h
   190                           
   191  0818  3410               	retlw	010h
   192  0819  3427               	retlw	027h
   193                           
   194                           	global	_dpowers
   195                           	global	_adcVal
   196                           	global	_rxiptr
   197                           	global	_rxoptr
   198                           	global	_txiptr
   199                           	global	_txoptr
   200                           	global	UpdateDisplay@F1242
   201                           	global	_txfifo
   202                           	global	_buttonPressed
   203                           	global	_CenterPressed
   204                           	global	_CenterReleased
   205                           	global	_DownPressed
   206                           	global	_DownReleased
   207                           	global	_LeftPressed
   208                           	global	_LeftReleased
   209                           	global	_RTC_FLAG_1MS
   210                           	global	_RTC_FLAG_250MS
   211                           	global	_RTC_FLAG_500MS
   212                           	global	_RightPressed
   213                           	global	_RightReleased
   214                           	global	_UpPressed
   215                           	global	_UpReleased
   216                           	global	_rxfifo
   217                           	global	_IRdistance
   218                           	global	_RTC_Counter
   219                           	global	_TotalDistTravelled
   220                           	global	_angleTurned
   221                           	global	_distTravelled
   222                           	global	_dist_high
   223                           	global	_dist_low
   224                           	global	_pos
   225                           	global	_total
   226                           	global	_totalSteps
   227                           	global	_AngleHighByte
   228                           	global	_AngleLowByte
   229                           	global	_BumpSensors
   230                           	global	_CenterDebounceCount
   231                           	global	_DistHighByte
   232                           	global	_DistLowByte
   233                           	global	_DownDebounceCount
   234                           	global	_LeftDebounceCount
   235                           	global	_ROBOTerror
   236                           	global	_RightDebounceCount
   237                           	global	_UpDebounceCount
   238                           	global	_VwallSensor
   239                           	global	_currentMenu
   240                           	global	_highByte
   241                           	global	_lowByte
   242                           	global	_ser_tmp
   243                           	global	_turnhighByte
   244                           	global	_turnlowByte
   245                           	global	_ADCON0
   246  001F                     _ADCON0	set	31
   247                           	global	_ADRESH
   248  001E                     _ADRESH	set	30
   249                           	global	_PORTA
   250  0005                     _PORTA	set	5
   251                           	global	_PORTD
   252  0008                     _PORTD	set	8
   253                           	global	_PORTE
   254  0009                     _PORTE	set	9
   255                           	global	_RCREG
   256  001A                     _RCREG	set	26
   257                           	global	_SSPBUF
   258  0013                     _SSPBUF	set	19
   259                           	global	_SSPCON
   260  0014                     _SSPCON	set	20
   261                           	global	_TMR0
   262  0001                     _TMR0	set	1
   263                           	global	_TXREG
   264  0019                     _TXREG	set	25
   265                           	global	AT25256A@CS0
   266  0038                     AT25256A@CS0	set	56
   267                           	global	AT25256A@CS1
   268  0039                     AT25256A@CS1	set	57
   269                           	global	_CARRY
   270  0018                     _CARRY	set	24
   271                           	global	_CHS0
   272  00FB                     _CHS0	set	251
   273                           	global	_CHS1
   274  00FC                     _CHS1	set	252
   275                           	global	_CHS2
   276  00FD                     _CHS2	set	253
   277                           	global	_CREN
   278  00C4                     _CREN	set	196
   279                           	global	_GIE
   280  005F                     _GIE	set	95
   281                           	global	_GO
   282  00FA                     _GO	set	250
   283                           	global	_OERR
   284  00C1                     _OERR	set	193
   285                           	global	_PEIE
   286  005E                     _PEIE	set	94
   287                           	global	_RB0
   288  0030                     _RB0	set	48
   289                           	global	_RB2
   290  0032                     _RB2	set	50
   291                           	global	_RB3
   292  0033                     _RB3	set	51
   293                           	global	_RB4
   294  0034                     _RB4	set	52
   295                           	global	_RB5
   296  0035                     _RB5	set	53
   297                           	global	_RB6
   298  0036                     _RB6	set	54
   299                           	global	_RC0
   300  0038                     _RC0	set	56
   301                           	global	_RC1
   302  0039                     _RC1	set	57
   303                           	global	_RC2
   304  003A                     _RC2	set	58
   305                           	global	_RCIF
   306  0065                     _RCIF	set	101
   307                           	global	_RE0
   308  0048                     _RE0	set	72
   309                           	global	_RE1
   310  0049                     _RE1	set	73
   311                           	global	_RE2
   312  004A                     _RE2	set	74
   313                           	global	_RX9
   314  00C6                     _RX9	set	198
   315                           	global	_SPEN
   316  00C7                     _SPEN	set	199
   317                           	global	_SSPIF
   318  0063                     _SSPIF	set	99
   319                           	global	_TMR0IE
   320  005D                     _TMR0IE	set	93
   321                           	global	_TMR0IF
   322  005A                     _TMR0IF	set	90
   323                           	global	_TXIF
   324  0064                     _TXIF	set	100
   325                           	global	_ADCON1
   326  009F                     _ADCON1	set	159
   327                           	global	_ADRESL
   328  009E                     _ADRESL	set	158
   329                           	global	_OPTION_REG
   330  0081                     _OPTION_REG	set	129
   331                           	global	_SPBRG
   332  0099                     _SPBRG	set	153
   333                           	global	_SSPSTAT
   334  0094                     _SSPSTAT	set	148
   335                           	global	_TRISA
   336  0085                     _TRISA	set	133
   337                           	global	_TRISB
   338  0086                     _TRISB	set	134
   339                           	global	_TRISC
   340  0087                     _TRISC	set	135
   341                           	global	_TRISD
   342  0088                     _TRISD	set	136
   343                           	global	_TRISE
   344  0089                     _TRISE	set	137
   345                           	global	_BRGH
   346  04C2                     _BRGH	set	1218
   347                           	global	_RCIE
   348  0465                     _RCIE	set	1125
   349                           	global	_SYNC
   350  04C4                     _SYNC	set	1220
   351                           	global	_TX9
   352  04C6                     _TX9	set	1222
   353                           	global	_TXEN
   354  04C5                     _TXEN	set	1221
   355                           	global	_TXIE
   356  0464                     _TXIE	set	1124
   357                           	global	_EEADR
   358  010D                     _EEADR	set	269
   359                           	global	_EEDATA
   360  010C                     _EEDATA	set	268
   361                           	global	_EECON1
   362  018C                     _EECON1	set	396
   363                           	global	_EECON2
   364  018D                     _EECON2	set	397
   365                           	global	_RD
   366  0C60                     _RD	set	3168
   367                           	global	_WR
   368  0C61                     _WR	set	3169
   369                           	global	_WREN
   370  0C62                     _WREN	set	3170
   371                           	
   372  081A                     STR_18:	
   373  081A  3420               	retlw	32	;' '
   374  081B  3443               	retlw	67	;'C'
   375  081C  3468               	retlw	104	;'h'
   376  081D  3461               	retlw	97	;'a'
   377  081E  3472               	retlw	114	;'r'
   378  081F  3467               	retlw	103	;'g'
   379  0820  3469               	retlw	105	;'i'
   380  0821  346E               	retlw	110	;'n'
   381  0822  3467               	retlw	103	;'g'
   382  0823  3420               	retlw	32	;' '
   383  0824  344D               	retlw	77	;'M'
   384  0825  346F               	retlw	111	;'o'
   385  0826  3464               	retlw	100	;'d'
   386  0827  3465               	retlw	101	;'e'
   387  0828  3420               	retlw	32	;' '
   388  0829  3400               	retlw	0
   389                           psect	strings
   390                           	
   391  082A                     STR_14:	
   392  082A  345A               	retlw	90	;'Z'
   393  082B  3465               	retlw	101	;'e'
   394  082C  3472               	retlw	114	;'r'
   395  082D  346F               	retlw	111	;'o'
   396  082E  3420               	retlw	32	;' '
   397  082F  3453               	retlw	83	;'S'
   398  0830  3474               	retlw	116	;'t'
   399  0831  3465               	retlw	101	;'e'
   400  0832  3470               	retlw	112	;'p'
   401  0833  345F               	retlw	95	;'_'
   402  0834  344D               	retlw	77	;'M'
   403  0835  346F               	retlw	111	;'o'
   404  0836  3474               	retlw	116	;'t'
   405  0837  346F               	retlw	111	;'o'
   406  0838  3472               	retlw	114	;'r'
   407  0839  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  083A                     STR_13:	
   411  083A  3449               	retlw	73	;'I'
   412  083B  3452               	retlw	82	;'R'
   413  083C  343A               	retlw	58	;':'
   414  083D  3425               	retlw	37	;'%'
   415  083E  3464               	retlw	100	;'d'
   416  083F  3463               	retlw	99	;'c'
   417  0840  346D               	retlw	109	;'m'
   418  0841  3420               	retlw	32	;' '
   419  0842  3444               	retlw	68	;'D'
   420  0843  343A               	retlw	58	;':'
   421  0844  3425               	retlw	37	;'%'
   422  0845  3464               	retlw	100	;'d'
   423  0846  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  0847                     STR_19:	
   427  0847  3420               	retlw	32	;' '
   428  0848  3420               	retlw	32	;' '
   429  0849  3445               	retlw	69	;'E'
   430  084A  3458               	retlw	88	;'X'
   431  084B  3449               	retlw	73	;'I'
   432  084C  3454               	retlw	84	;'T'
   433  084D  3420               	retlw	32	;' '
   434  084E  3420               	retlw	32	;' '
   435  084F  3400               	retlw	0
   436                           psect	strings
   437                           	
   438  0850                     STR_6:	
   439  0850  3420               	retlw	32	;' '
   440  0851  3443               	retlw	67	;'C'
   441  0852  3468               	retlw	104	;'h'
   442  0853  3461               	retlw	97	;'a'
   443  0854  3472               	retlw	114	;'r'
   444  0855  3467               	retlw	103	;'g'
   445  0856  3465               	retlw	101	;'e'
   446  0857  3420               	retlw	32	;' '
   447  0858  3400               	retlw	0
   448                           psect	strings
   449                           	
   450  0859                     STR_2:	
   451  0859  3453               	retlw	83	;'S'
   452  085A  3463               	retlw	99	;'c'
   453  085B  3461               	retlw	97	;'a'
   454  085C  346E               	retlw	110	;'n'
   455  085D  345F               	retlw	95	;'_'
   456  085E  3433               	retlw	51	;'3'
   457  085F  3436               	retlw	54	;'6'
   458  0860  3430               	retlw	48	;'0'
   459  0861  3400               	retlw	0
   460                           psect	strings
   461                           	
   462  0862                     STR_1:	
   463  0862  3443               	retlw	67	;'C'
   464  0863  3461               	retlw	97	;'a'
   465  0864  346C               	retlw	108	;'l'
   466  0865  3469               	retlw	105	;'i'
   467  0866  3462               	retlw	98	;'b'
   468  0867  345F               	retlw	95	;'_'
   469  0868  3449               	retlw	73	;'I'
   470  0869  3452               	retlw	82	;'R'
   471  086A  3400               	retlw	0
   472                           psect	strings
   473                           	
   474  086B                     STR_5:	
   475  086B  3446               	retlw	70	;'F'
   476  086C  346C               	retlw	108	;'l'
   477  086D  3477               	retlw	119	;'w'
   478  086E  345F               	retlw	95	;'_'
   479  086F  3457               	retlw	87	;'W'
   480  0870  3461               	retlw	97	;'a'
   481  0871  346C               	retlw	108	;'l'
   482  0872  346C               	retlw	108	;'l'
   483  0873  3400               	retlw	0
   484                           psect	strings
   485                           	
   486  0874                     STR_3:	
   487  0874  3444               	retlw	68	;'D'
   488  0875  3472               	retlw	114	;'r'
   489  0876  3469               	retlw	105	;'i'
   490  0877  3476               	retlw	118	;'v'
   491  0878  3465               	retlw	101	;'e'
   492  0879  345F               	retlw	95	;'_'
   493  087A  3432               	retlw	50	;'2'
   494  087B  346D               	retlw	109	;'m'
   495  087C  3400               	retlw	0
   496                           psect	strings
   497                           	
   498  087D                     STR_4:	
   499  087D  3444               	retlw	68	;'D'
   500  087E  3472               	retlw	114	;'r'
   501  087F  3469               	retlw	105	;'i'
   502  0880  3476               	retlw	118	;'v'
   503  0881  3465               	retlw	101	;'e'
   504  0882  345F               	retlw	95	;'_'
   505  0883  344C               	retlw	76	;'L'
   506  0884  3400               	retlw	0
   507                           psect	strings
   508                           	
   509  0885                     STR_16:	
   510  0885  3443               	retlw	67	;'C'
   511  0886  344F               	retlw	79	;'O'
   512  0887  344E               	retlw	78	;'N'
   513  0888  3446               	retlw	70	;'F'
   514  0889  3449               	retlw	73	;'I'
   515  088A  3452               	retlw	82	;'R'
   516  088B  344D               	retlw	77	;'M'
   517  088C  3400               	retlw	0
   518                           psect	strings
   519                           	
   520  088D                     STR_9:	
   521  088D  3444               	retlw	68	;'D'
   522  088E  3472               	retlw	114	;'r'
   523  088F  3432               	retlw	50	;'2'
   524  0890  3400               	retlw	0
   525                           psect	strings
   526                           	
   527  0891                     STR_15:	
   528  0891  343C               	retlw	60	;'<'
   529  0892  343C               	retlw	60	;'<'
   530  0893  343C               	retlw	60	;'<'
   531  0894  3400               	retlw	0
   532                           psect	strings
   533                           	
   534  0895                     STR_17:	
   535  0895  343E               	retlw	62	;'>'
   536  0896  343E               	retlw	62	;'>'
   537  0897  343E               	retlw	62	;'>'
   538  0898  3400               	retlw	0
   539                           psect	strings
   540                           	
   541  0899                     STR_10:	
   542  0899  3444               	retlw	68	;'D'
   543  089A  3472               	retlw	114	;'r'
   544  089B  344C               	retlw	76	;'L'
   545  089C  3400               	retlw	0
   546                           psect	strings
   547                           	
   548  089D                     STR_12:	
   549  089D  3443               	retlw	67	;'C'
   550  089E  3468               	retlw	104	;'h'
   551  089F  3467               	retlw	103	;'g'
   552  08A0  3400               	retlw	0
   553                           psect	strings
   554                           	
   555  08A1                     STR_7:	
   556  08A1  3443               	retlw	67	;'C'
   557  08A2  3461               	retlw	97	;'a'
   558  08A3  346C               	retlw	108	;'l'
   559  08A4  3400               	retlw	0
   560                           psect	strings
   561                           	
   562  08A5                     STR_8:	
   563  08A5  3453               	retlw	83	;'S'
   564  08A6  3463               	retlw	99	;'c'
   565  08A7  346E               	retlw	110	;'n'
   566  08A8  3400               	retlw	0
   567                           psect	strings
   568                           	
   569  08A9                     STR_11:	
   570  08A9  3446               	retlw	70	;'F'
   571  08AA  346C               	retlw	108	;'l'
   572  08AB  3477               	retlw	119	;'w'
   573  08AC  3400               	retlw	0
   574                           psect	strings
   575                           	file	"Assignment3_AldnoahZero.as"
   576                           	line	#
   577                           psect cinit,class=CODE,delta=2
   578                           global start_initialization
   579  13AD                     start_initialization:
   580                           
   581                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   582                           global __pbitbssCOMMON
   583  0380                     __pbitbssCOMMON:
   584  0380                     _CenterPressed:
   585  0380                            ds      1
   586                           
   587  0381                     _CenterReleased:
   588  0381                            ds      1
   589                           
   590  0382                     _DownPressed:
   591  0382                            ds      1
   592                           
   593  0383                     _DownReleased:
   594  0383                            ds      1
   595                           
   596  0384                     _LeftPressed:
   597  0384                            ds      1
   598                           
   599  0385                     _LeftReleased:
   600  0385                            ds      1
   601                           
   602  0386                     _RTC_FLAG_1MS:
   603  0386                            ds      1
   604                           
   605  0387                     _RTC_FLAG_250MS:
   606  0387                            ds      1
   607                           
   608  0388                     _RTC_FLAG_500MS:
   609  0388                            ds      1
   610                           
   611  0389                     _RightPressed:
   612  0389                            ds      1
   613                           
   614  038A                     _RightReleased:
   615  038A                            ds      1
   616                           
   617  038B                     _UpPressed:
   618  038B                            ds      1
   619                           
   620  038C                     _UpReleased:
   621  038C                            ds      1
   622                           
   623                           psect	bssCOMMON,class=COMMON,space=1
   624                           global __pbssCOMMON
   625  007D                     __pbssCOMMON:
   626  007D                     _buttonPressed:
   627  007D                            ds      1
   628                           
   629                           psect	bssBANK0,class=BANK0,space=1
   630                           global __pbssBANK0
   631  006A                     __pbssBANK0:
   632  006A                     _adcVal:
   633  006A                            ds      2
   634                           
   635  006C                     _rxiptr:
   636  006C                            ds      1
   637                           
   638  006D                     _rxoptr:
   639  006D                            ds      1
   640                           
   641  006E                     _txiptr:
   642  006E                            ds      1
   643                           
   644  006F                     _txoptr:
   645  006F                            ds      1
   646                           
   647                           psect	bssBANK1,class=BANK1,space=1
   648                           global __pbssBANK1
   649  00A0                     __pbssBANK1:
   650  00A0                     _rxfifo:
   651  00A0                            ds      16
   652                           
   653  00B0                     _IRdistance:
   654  00B0                            ds      2
   655                           
   656  00B2                     _RTC_Counter:
   657  00B2                            ds      2
   658                           
   659  00B4                     _TotalDistTravelled:
   660  00B4                            ds      2
   661                           
   662  00B6                     _angleTurned:
   663  00B6                            ds      2
   664                           
   665  00B8                     _distTravelled:
   666  00B8                            ds      2
   667                           
   668  00BA                     _dist_high:
   669  00BA                            ds      2
   670                           
   671  00BC                     _dist_low:
   672  00BC                            ds      2
   673                           
   674  00BE                     _pos:
   675  00BE                            ds      2
   676                           
   677  00C0                     _total:
   678  00C0                            ds      2
   679                           
   680  00C2                     _totalSteps:
   681  00C2                            ds      2
   682                           
   683  00C4                     _AngleHighByte:
   684  00C4                            ds      1
   685                           
   686  00C5                     _AngleLowByte:
   687  00C5                            ds      1
   688                           
   689  00C6                     _BumpSensors:
   690  00C6                            ds      1
   691                           
   692  00C7                     _CenterDebounceCount:
   693  00C7                            ds      1
   694                           
   695  00C8                     _DistHighByte:
   696  00C8                            ds      1
   697                           
   698  00C9                     _DistLowByte:
   699  00C9                            ds      1
   700                           
   701  00CA                     _DownDebounceCount:
   702  00CA                            ds      1
   703                           
   704  00CB                     _LeftDebounceCount:
   705  00CB                            ds      1
   706                           
   707  00CC                     _ROBOTerror:
   708  00CC                            ds      1
   709                           
   710  00CD                     _RightDebounceCount:
   711  00CD                            ds      1
   712                           
   713  00CE                     _UpDebounceCount:
   714  00CE                            ds      1
   715                           
   716  00CF                     _VwallSensor:
   717  00CF                            ds      1
   718                           
   719  00D0                     _currentMenu:
   720  00D0                            ds      1
   721                           
   722  00D1                     _highByte:
   723  00D1                            ds      1
   724                           
   725  00D2                     _lowByte:
   726  00D2                            ds      1
   727                           
   728  00D3                     _ser_tmp:
   729  00D3                            ds      1
   730                           
   731  00D4                     _turnhighByte:
   732  00D4                            ds      1
   733                           
   734  00D5                     _turnlowByte:
   735  00D5                            ds      1
   736                           
   737                           psect	dataBANK1,class=BANK1,space=1
   738                           global __pdataBANK1
   739  00D6                     __pdataBANK1:
   740                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   741                           	line	49
   742  00D6                     _menuStrings:
   743  00D6                            ds      6
   744                           
   745                           psect	dataBANK1
   746                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   747                           	line	50
   748  00DC                     _shortMenuStrings:
   749  00DC                            ds      6
   750                           
   751                           psect	dataBANK1
   752                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   753                           	line	45
   754  00E2                     _current_step:
   755  00E2                            ds      1
   756                           
   757                           psect	bssBANK3,class=BANK3,space=1
   758                           global __pbssBANK3
   759  0190                     __pbssBANK3:
   760  0190                     UpdateDisplay@F1242:
   761  0190                            ds      16
   762                           
   763  01A0                     _txfifo:
   764  01A0                            ds      16
   765                           
   766                           psect clrtext,class=CODE,delta=2
   767                           global clear_ram
   768                           ;	Called with FSR containing the base address, and
   769                           ;	W with the last address+1
   770  118B                     clear_ram:
   771  118B  0064               	clrwdt			;clear the watchdog before getting into this loop
   772  118C                     clrloop:
   773  118C  0180               	clrf	indf		;clear RAM location pointed to by FSR
   774  118D  0A84               	incf	fsr,f		;increment pointer
   775  118E  0604               	xorwf	fsr,w		;XOR with final address
   776  118F  1903               	btfsc	status,2	;have we reached the end yet?
   777  1190  3400               	retlw	0		;all done for this memory range, return
   778  1191  0604               	xorwf	fsr,w		;XOR again to restore value
   779  1192  298C               	goto	clrloop		;do the next byte
   780                           
   781                           ; Clear objects allocated to BITCOMMON
   782                           psect cinit,class=CODE,delta=2
   783  13AD  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   784  13AE  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   785                           ; Clear objects allocated to COMMON
   786                           psect cinit,class=CODE,delta=2
   787  13AF  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   788                           ; Clear objects allocated to BANK0
   789                           psect cinit,class=CODE,delta=2
   790  13B0  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   791  13B1  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   792  13B2  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   793  13B3  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   794  13B4  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   795  13B5  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   796                           ; Clear objects allocated to BANK1
   797                           psect cinit,class=CODE,delta=2
   798  13B6  1383               	bcf	status, 7	;select IRP bank0
   799  13B7  30A0               	movlw	low(__pbssBANK1)
   800  13B8  0084               	movwf	fsr
   801  13B9  30D6               	movlw	low((__pbssBANK1)+036h)
   802  13BA  160A  118A  218B   	fcall	clear_ram
              160A  118A         
   803                           ; Clear objects allocated to BANK3
   804                           psect cinit,class=CODE,delta=2
   805  13BF  1783               	bsf	status, 7	;select IRP bank2
   806  13C0  3090               	movlw	low(__pbssBANK3)
   807  13C1  0084               	movwf	fsr
   808  13C2  30B0               	movlw	low((__pbssBANK3)+020h)
   809  13C3  160A  118A  218B   	fcall	clear_ram
              160A  118A         
   810                           global btemp
   811                           psect inittext,class=CODE,delta=2
   812                           global init_fetch,btemp
   813                           ;	Called with low address in FSR and high address in W
   814  11A6                     init_fetch:
   815  11A6  087E               	movf btemp,w
   816  11A7  008A               	movwf pclath
   817  11A8  087F               	movf btemp+1,w
   818  11A9  0082               	movwf pc
   819                           global init_ram
   820                           ;Called with:
   821                           ;	high address of idata address in btemp 
   822                           ;	low address of idata address in btemp+1 
   823                           ;	low address of data in FSR
   824                           ;	high address + 1 of data in btemp-1
   825  11AA                     init_ram:
   826  11AA  160A  118A  21A6   	fcall init_fetch
              160A  118A         
   827  11AF  0080               	movwf indf,f
   828  11B0  0A84               	incf fsr,f
   829  11B1  0804               	movf fsr,w
   830  11B2  067D               	xorwf btemp-1,w
   831  11B3  1903               	btfsc status,2
   832  11B4  3400               	retlw 0
   833  11B5  0AFF               	incf btemp+1,f
   834  11B6  1903               	btfsc status,2
   835  11B7  0AFE               	incf btemp,f
   836  11B8  29AA               	goto init_ram
   837                           ; Initialize objects allocated to BANK1
   838                           psect cinit,class=CODE,delta=2
   839                           global init_ram, __pidataBANK1
   840  13C8  1383               	bcf	status, 7	;select IRP bank0
   841  13C9  30E3               	movlw low(__pdataBANK1+13)
   842  13CA  00FD               	movwf btemp-1,f
   843  13CB  3007               	movlw high(__pidataBANK1)
   844  13CC  00FE               	movwf btemp,f
   845  13CD  30F1               	movlw low(__pidataBANK1)
   846  13CE  00FF               	movwf btemp+1,f
   847  13CF  30D6               	movlw low(__pdataBANK1)
   848  13D0  0084               	movwf fsr,f
   849  13D1  160A  118A  21AA   	fcall init_ram
              160A  118A         
   850                           psect cinit,class=CODE,delta=2
   851                           global end_of_initialization
   852                           
   853                           ;End of C runtime variable initialization code
   854                           
   855  13D6                     end_of_initialization:
   856  13D6  0183               clrf status
   857  13D7  120A  118A  2815   ljmp _main	;jump to C main() function
   858                           psect	cstackBANK1,class=BANK1,space=1
   859                           global __pcstackBANK1
   860  00E3                     __pcstackBANK1:
   861                           	global	main@direction1
   862  00E3                     main@direction1:	; 2 bytes @ 0x0
   863  00E3                     	ds	2
   864                           	global	main@RT2A
   865  00E5                     main@RT2A:	; 2 bytes @ 0x2
   866  00E5                     	ds	2
   867                           	global	main@shortwall
   868  00E7                     main@shortwall:	; 2 bytes @ 0x4
   869  00E7                     	ds	2
   870                           	global	main@choice
   871  00E9                     main@choice:	; 1 bytes @ 0x6
   872  00E9                     	ds	1
   873                           	global	main@shortwall_3022
   874  00EA                     main@shortwall_3022:	; 2 bytes @ 0x7
   875  00EA                     	ds	2
   876                           	global	main@RT2P
   877  00EC                     main@RT2P:	; 2 bytes @ 0x9
   878  00EC                     	ds	2
   879                           psect	cstackCOMMON,class=COMMON,space=1
   880                           global __pcstackCOMMON
   881  0072                     __pcstackCOMMON:
   882                           	global	?_ser_init
   883  0072                     ?_ser_init:	; 0 bytes @ 0x0
   884                           	global	?_robo_init
   885  0072                     ?_robo_init:	; 0 bytes @ 0x0
   886                           	global	?_robot_read
   887  0072                     ?_robot_read:	; 0 bytes @ 0x0
   888                           	global	?_readAvgDistance
   889  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   890                           	global	?_UpdateDisplay
   891  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   892                           	global	?_calibrateIR
   893  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   894                           	global	?_ChargeMode
   895  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   896                           	global	?_ser_putch
   897  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   898                           	global	?_ADCconvert
   899  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   900                           	global	?_init_adc
   901  0072                     ?_init_adc:	; 0 bytes @ 0x0
   902                           	global	?_lcd_write_control
   903  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   904                           	global	?_lcd_write_data
   905  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   906                           	global	?_lcd_set_cursor
   907  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   908                           	global	?_lcd_init
   909  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   910                           	global	?_isr1
   911  0072                     ?_isr1:	; 0 bytes @ 0x0
   912                           	global	?_init
   913  0072                     ?_init:	; 0 bytes @ 0x0
   914                           	global	?_main
   915  0072                     ?_main:	; 0 bytes @ 0x0
   916                           	global	?_Debounce
   917  0072                     ?_Debounce:	; 0 bytes @ 0x0
   918                           	global	??_Debounce
   919  0072                     ??_Debounce:	; 0 bytes @ 0x0
   920                           	global	?_ser_isrx
   921  0072                     ?_ser_isrx:	; 1 bit 
   922                           	global	?_ReadButtons
   923  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   924                           	global	?_Menu
   925  0072                     ?_Menu:	; 1 bytes @ 0x0
   926                           	global	?_ser_getch
   927  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   928                           	global	?_adc_read_channel
   929  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   930                           	global	?_spi_transfer
   931  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   932                           	global	?i1___lwmod
   933  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   934                           	global	i1___lwmod@divisor
   935  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   936  0072                     	ds	1
   937                           	global	??_ReadButtons
   938  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   939  0073                     	ds	1
   940                           	global	i1___lwmod@dividend
   941  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   942  0074                     	ds	2
   943                           	global	??i1___lwmod
   944  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   945  0076                     	ds	1
   946                           	global	i1___lwmod@counter
   947  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   948  0077                     	ds	1
   949                           	global	??_isr1
   950  0078                     ??_isr1:	; 0 bytes @ 0x6
   951  0078                     	ds	5
   952                           psect	cstackBANK0,class=BANK0,space=1
   953                           global __pcstackBANK0
   954  0020                     __pcstackBANK0:
   955                           	global	??_ser_init
   956  0020                     ??_ser_init:	; 0 bytes @ 0x0
   957                           	global	??_Menu
   958  0020                     ??_Menu:	; 0 bytes @ 0x0
   959                           	global	??_ser_putch
   960  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   961                           	global	??_ser_getch
   962  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   963                           	global	??_init_adc
   964  0020                     ??_init_adc:	; 0 bytes @ 0x0
   965                           	global	??_lcd_write_control
   966  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   967                           	global	??_lcd_write_data
   968  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   969                           	global	??_spi_transfer
   970  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   971                           	global	??_ser_isrx
   972  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   973                           	global	?___ftge
   974  0020                     ?___ftge:	; 1 bit 
   975                           	global	?_adc_read
   976  0020                     ?_adc_read:	; 2 bytes @ 0x0
   977                           	global	?___wmul
   978  0020                     ?___wmul:	; 2 bytes @ 0x0
   979                           	global	?___awmod
   980  0020                     ?___awmod:	; 2 bytes @ 0x0
   981                           	global	?___ftpack
   982  0020                     ?___ftpack:	; 3 bytes @ 0x0
   983                           	global	Menu@BTN_input
   984  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   985                           	global	___wmul@multiplier
   986  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   987                           	global	___awmod@divisor
   988  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   989                           	global	___ftge@ff1
   990  0020                     ___ftge@ff1:	; 3 bytes @ 0x0
   991                           	global	___ftpack@arg
   992  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   993  0020                     	ds	1
   994                           	global	spi_transfer@temp
   995  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   996                           	global	ser_getch@c
   997  0021                     ser_getch@c:	; 1 bytes @ 0x1
   998                           	global	ser_putch@c
   999  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1000  0021                     	ds	1
  1001                           	global	??_adc_read
  1002  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1003                           	global	??_robo_init
  1004  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1005                           	global	??_robot_read
  1006  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1007                           	global	?_robotTurn
  1008  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1009                           	global	lcd_write_control@databyte
  1010  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1011                           	global	lcd_write_data@databyte
  1012  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1013                           	global	spi_transfer@data
  1014  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1015                           	global	robotTurn@angle
  1016  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1017                           	global	___wmul@multiplicand
  1018  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1019                           	global	___awmod@dividend
  1020  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1021  0022                     	ds	1
  1022                           	global	?_rotate
  1023  0023                     ?_rotate:	; 0 bytes @ 0x3
  1024                           	global	??_lcd_set_cursor
  1025  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1026                           	global	??_lcd_init
  1027  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1028                           	global	??_init
  1029  0023                     ??_init:	; 0 bytes @ 0x3
  1030                           	global	lcd_set_cursor@address
  1031  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1032                           	global	___ftpack@exp
  1033  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1034                           	global	rotate@numsteps
  1035  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1036                           	global	___ftge@ff2
  1037  0023                     ___ftge@ff2:	; 3 bytes @ 0x3
  1038  0023                     	ds	1
  1039                           	global	??_robotTurn
  1040  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1041                           	global	??___wmul
  1042  0024                     ??___wmul:	; 0 bytes @ 0x4
  1043                           	global	??___awmod
  1044  0024                     ??___awmod:	; 0 bytes @ 0x4
  1045                           	global	robot_read@readType
  1046  0024                     robot_read@readType:	; 1 bytes @ 0x4
  1047                           	global	___ftpack@sign
  1048  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1049                           	global	adc_read@adc_value
  1050  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1051                           	global	___wmul@product
  1052  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1053  0024                     	ds	1
  1054                           	global	??___ftpack
  1055  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1056                           	global	rotate@direction
  1057  0025                     rotate@direction:	; 1 bytes @ 0x5
  1058                           	global	___awmod@counter
  1059  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1060  0025                     	ds	1
  1061                           	global	??_rotate
  1062  0026                     ??_rotate:	; 0 bytes @ 0x6
  1063                           	global	??_adc_read_channel
  1064  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1065                           	global	??___ftge
  1066  0026                     ??___ftge:	; 0 bytes @ 0x6
  1067                           	global	?_abs
  1068  0026                     ?_abs:	; 2 bytes @ 0x6
  1069                           	global	?___lwdiv
  1070  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1071                           	global	___awmod@sign
  1072  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1073                           	global	abs@v
  1074  0026                     abs@v:	; 2 bytes @ 0x6
  1075                           	global	___lwdiv@divisor
  1076  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1077  0026                     	ds	1
  1078                           	global	?_lcd_write_string
  1079  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1080                           	global	adc_read_channel@channel
  1081  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1082                           	global	lcd_write_string@s
  1083  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1084  0027                     	ds	1
  1085                           	global	??_abs
  1086  0028                     ??_abs:	; 0 bytes @ 0x8
  1087                           	global	?_readDistance
  1088  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1089                           	global	?___fttol
  1090  0028                     ?___fttol:	; 4 bytes @ 0x8
  1091                           	global	rotate@i
  1092  0028                     rotate@i:	; 2 bytes @ 0x8
  1093                           	global	___lwdiv@dividend
  1094  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1095                           	global	___fttol@f1
  1096  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1097  0028                     	ds	1
  1098                           	global	??_lcd_write_string
  1099  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1100  0029                     	ds	1
  1101                           	global	??_readDistance
  1102  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1103                           	global	??___lwdiv
  1104  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1105  002A                     	ds	1
  1106                           	global	___lwdiv@quotient
  1107  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1108  002B                     	ds	1
  1109                           	global	??___fttol
  1110  002C                     ??___fttol:	; 0 bytes @ 0xC
  1111                           	global	readDistance@readVal
  1112  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1113  002C                     	ds	1
  1114                           	global	___lwdiv@counter
  1115  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1116  002D                     	ds	1
  1117                           	global	??_ADCconvert
  1118  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1119                           	global	?___lwmod
  1120  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1121                           	global	___lwmod@divisor
  1122  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1123  002E                     	ds	2
  1124                           	global	??_readAvgDistance
  1125  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1126                           	global	___fttol@sign1
  1127  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1128                           	global	readAvgDistance@fullval
  1129  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1130                           	global	___lwmod@dividend
  1131  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1132  0030                     	ds	1
  1133                           	global	___fttol@lval
  1134  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1135  0031                     	ds	1
  1136                           	global	??___lwmod
  1137  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1138                           	global	readAvgDistance@j
  1139  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1140  0032                     	ds	1
  1141                           	global	___lwmod@counter
  1142  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1143  0033                     	ds	1
  1144                           	global	?_sprintf
  1145  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1146                           	global	sprintf@f
  1147  0034                     sprintf@f:	; 1 bytes @ 0x14
  1148                           	global	readAvgDistance@tempIR
  1149  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1150  0034                     	ds	1
  1151                           	global	___fttol@exp1
  1152  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1153  0035                     	ds	1
  1154                           	global	?___ftdiv
  1155  0036                     ?___ftdiv:	; 3 bytes @ 0x16
  1156                           	global	?___awtoft
  1157  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1158                           	global	readAvgDistance@i
  1159  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1160                           	global	___awtoft@c
  1161  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1162                           	global	___ftdiv@f2
  1163  0036                     ___ftdiv@f2:	; 3 bytes @ 0x16
  1164  0036                     	ds	3
  1165                           	global	??_sprintf
  1166  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1167                           	global	??___awtoft
  1168  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1169                           	global	___ftdiv@f1
  1170  0039                     ___ftdiv@f1:	; 3 bytes @ 0x19
  1171  0039                     	ds	2
  1172                           	global	___awtoft@sign
  1173  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1174  003B                     	ds	1
  1175                           	global	??___ftdiv
  1176  003C                     ??___ftdiv:	; 0 bytes @ 0x1C
  1177                           	global	sprintf@ap
  1178  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1179  003C                     	ds	1
  1180                           	global	sprintf@flag
  1181  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1182  003D                     	ds	1
  1183                           	global	sprintf@prec
  1184  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1185  003E                     	ds	1
  1186                           	global	sprintf@_val
  1187  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1188  003F                     	ds	1
  1189                           	global	___ftdiv@cntr
  1190  0040                     ___ftdiv@cntr:	; 1 bytes @ 0x20
  1191  0040                     	ds	1
  1192                           	global	___ftdiv@f3
  1193  0041                     ___ftdiv@f3:	; 3 bytes @ 0x21
  1194  0041                     	ds	2
  1195                           	global	sprintf@sp
  1196  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1197  0043                     	ds	1
  1198                           	global	sprintf@c
  1199  0044                     sprintf@c:	; 1 bytes @ 0x24
  1200                           	global	___ftdiv@exp
  1201  0044                     ___ftdiv@exp:	; 1 bytes @ 0x24
  1202  0044                     	ds	1
  1203                           	global	??_UpdateDisplay
  1204  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1205                           	global	___ftdiv@sign
  1206  0045                     ___ftdiv@sign:	; 1 bytes @ 0x25
  1207  0045                     	ds	1
  1208                           	global	?___ftmul
  1209  0046                     ?___ftmul:	; 3 bytes @ 0x26
  1210                           	global	___ftmul@f1
  1211  0046                     ___ftmul@f1:	; 3 bytes @ 0x26
  1212  0046                     	ds	3
  1213                           	global	___ftmul@f2
  1214  0049                     ___ftmul@f2:	; 3 bytes @ 0x29
  1215                           	global	UpdateDisplay@LCDOutput
  1216  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1217  0049                     	ds	3
  1218                           	global	??___ftmul
  1219  004C                     ??___ftmul:	; 0 bytes @ 0x2C
  1220  004C                     	ds	4
  1221                           	global	___ftmul@exp
  1222  0050                     ___ftmul@exp:	; 1 bytes @ 0x30
  1223  0050                     	ds	1
  1224                           	global	___ftmul@f3_as_product
  1225  0051                     ___ftmul@f3_as_product:	; 3 bytes @ 0x31
  1226  0051                     	ds	3
  1227                           	global	___ftmul@cntr
  1228  0054                     ___ftmul@cntr:	; 1 bytes @ 0x34
  1229  0054                     	ds	1
  1230                           	global	___ftmul@sign
  1231  0055                     ___ftmul@sign:	; 1 bytes @ 0x35
  1232  0055                     	ds	1
  1233                           	global	?_RobotDrive
  1234  0056                     ?_RobotDrive:	; 0 bytes @ 0x36
  1235                           	global	RobotDrive@speed
  1236  0056                     RobotDrive@speed:	; 2 bytes @ 0x36
  1237  0056                     	ds	2
  1238                           	global	??_RobotDrive
  1239  0058                     ??_RobotDrive:	; 0 bytes @ 0x38
  1240  0058                     	ds	1
  1241                           	global	??_calibrateIR
  1242  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1243                           	global	?_robotTurnSpeed
  1244  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1245                           	global	??_ChargeMode
  1246  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1247                           	global	?_scan360
  1248  0059                     ?_scan360:	; 2 bytes @ 0x39
  1249                           	global	RobotDrive@speedlowByte
  1250  0059                     RobotDrive@speedlowByte:	; 1 bytes @ 0x39
  1251                           	global	robotTurnSpeed@angle
  1252  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1253  0059                     	ds	1
  1254                           	global	RobotDrive@speedhighByte
  1255  005A                     RobotDrive@speedhighByte:	; 1 bytes @ 0x3A
  1256  005A                     	ds	1
  1257                           	global	??_scan360
  1258  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1259                           	global	?_robotMoveSpeed
  1260  005B                     ?_robotMoveSpeed:	; 0 bytes @ 0x3B
  1261                           	global	scan360@lowestVal
  1262  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1263                           	global	robotMoveSpeed@distance
  1264  005B                     robotMoveSpeed@distance:	; 2 bytes @ 0x3B
  1265                           	global	robotTurnSpeed@speed
  1266  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1267  005B                     	ds	2
  1268                           	global	??_robotTurnSpeed
  1269  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1270                           	global	scan360@lowestSteps
  1271  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1272                           	global	robotMoveSpeed@speed
  1273  005D                     robotMoveSpeed@speed:	; 2 bytes @ 0x3D
  1274  005D                     	ds	2
  1275                           	global	??_robotMoveSpeed
  1276  005F                     ??_robotMoveSpeed:	; 0 bytes @ 0x3F
  1277                           	global	scan360@steps
  1278  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1279  005F                     	ds	1
  1280                           	global	robotTurnSpeed@temp1
  1281  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1282  0060                     	ds	2
  1283                           	global	robotMoveSpeed@remaining
  1284  0062                     robotMoveSpeed@remaining:	; 3 bytes @ 0x42
  1285  0062                     	ds	3
  1286                           	global	robotMoveSpeed@temp1
  1287  0065                     robotMoveSpeed@temp1:	; 2 bytes @ 0x45
  1288  0065                     	ds	2
  1289                           	global	??_main
  1290  0067                     ??_main:	; 0 bytes @ 0x47
  1291  0067                     	ds	3
  1292 ;;Data sizes: Strings 147, constant 10, data 13, bss 93, persistent 0 stack 0
  1293 ;;Auto spaces:   Size  Autos    Used
  1294 ;; COMMON          14     11      14
  1295 ;; BANK0           80     74      80
  1296 ;; BANK1           80     11      78
  1297 ;; BANK3           96      0      32
  1298 ;; BANK2           96      0       0
  1299                           
  1300 ;;
  1301 ;; Pointer list with targets:
  1302                           
  1303 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1304 ;;
  1305 ;; ?___ftpack	float  size(1) Largest target is 2
  1306 ;;		 -> main@RT2P(BANK1[2]), 
  1307 ;;
  1308 ;; ?___ftdiv	float  size(1) Largest target is 0
  1309 ;;
  1310 ;; ?_abs	int  size(1) Largest target is 0
  1311 ;;
  1312 ;; ?___awmod	int  size(1) Largest target is 0
  1313 ;;
  1314 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1315 ;;
  1316 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1317 ;;
  1318 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1319 ;;
  1320 ;; ?_scan360	int  size(1) Largest target is 0
  1321 ;;
  1322 ;; ?___fttol	long  size(1) Largest target is 0
  1323 ;;
  1324 ;; ?___ftmul	float  size(1) Largest target is 0
  1325 ;;
  1326 ;; ?___awtoft	float  size(1) Largest target is 0
  1327 ;;
  1328 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1329 ;;
  1330 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1331 ;;
  1332 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1333 ;;		 -> STR_13(CODE[13]), 
  1334 ;;
  1335 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1336 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1337 ;;
  1338 ;; ?_sprintf	int  size(1) Largest target is 0
  1339 ;;
  1340 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1341 ;;		 -> ?_sprintf(BANK0[2]), 
  1342 ;;
  1343 ;; S8196$_cp	PTR const unsigned char  size(1) Largest target is 0
  1344 ;;
  1345 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1346 ;;
  1347 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1348 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1349 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1350 ;;
  1351 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1352 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1353 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1354 ;;
  1355 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1356 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1357 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), 
  1358 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1359 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1360 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1361 ;;
  1362                           
  1363                           
  1364 ;;
  1365 ;; Critical Paths under _main in COMMON
  1366 ;;
  1367 ;;   None.
  1368 ;;
  1369 ;; Critical Paths under _isr1 in COMMON
  1370 ;;
  1371 ;;   _isr1->i1___lwmod
  1372 ;;   _ReadButtons->_Debounce
  1373 ;;
  1374 ;; Critical Paths under _main in BANK0
  1375 ;;
  1376 ;;   _main->_robotMoveSpeed
  1377 ;;   _ChargeMode->_UpdateDisplay
  1378 ;;   _robotTurnSpeed->_UpdateDisplay
  1379 ;;   _robotMoveSpeed->_RobotDrive
  1380 ;;   _scan360->_UpdateDisplay
  1381 ;;   _calibrateIR->_UpdateDisplay
  1382 ;;   _UpdateDisplay->_sprintf
  1383 ;;   _readAvgDistance->_ADCconvert
  1384 ;;   _readDistance->_adc_read_channel
  1385 ;;   _robot_read->_ser_putch
  1386 ;;   _robot_read->_ser_getch
  1387 ;;   _lcd_init->_lcd_write_control
  1388 ;;   _lcd_write_string->___awmod
  1389 ;;   _lcd_set_cursor->_lcd_write_control
  1390 ;;   ___awtoft->___fttol
  1391 ;;   ___ftmul->___ftdiv
  1392 ;;   ___ftdiv->___fttol
  1393 ;;   _abs->___wmul
  1394 ;;   _RobotDrive->___ftmul
  1395 ;;   _sprintf->___lwmod
  1396 ;;   _ADCconvert->___lwdiv
  1397 ;;   _robotTurn->_ser_putch
  1398 ;;   _rotate->_spi_transfer
  1399 ;;   _robo_init->_ser_putch
  1400 ;;   _adc_read_channel->_adc_read
  1401 ;;   ___fttol->___ftpack
  1402 ;;   ___lwmod->___lwdiv
  1403 ;;   ___lwdiv->___wmul
  1404 ;;
  1405 ;; Critical Paths under _isr1 in BANK0
  1406 ;;
  1407 ;;   None.
  1408 ;;
  1409 ;; Critical Paths under _main in BANK1
  1410 ;;
  1411 ;;   None.
  1412 ;;
  1413 ;; Critical Paths under _isr1 in BANK1
  1414 ;;
  1415 ;;   None.
  1416 ;;
  1417 ;; Critical Paths under _main in BANK3
  1418 ;;
  1419 ;;   None.
  1420 ;;
  1421 ;; Critical Paths under _isr1 in BANK3
  1422 ;;
  1423 ;;   None.
  1424 ;;
  1425 ;; Critical Paths under _main in BANK2
  1426 ;;
  1427 ;;   None.
  1428 ;;
  1429 ;; Critical Paths under _isr1 in BANK2
  1430 ;;
  1431 ;;   None.
  1432                           
  1433 ;;
  1434 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1435 ;;
  1436                           
  1437 ;;
  1438 ;;Call Graph Tables:
  1439 ;;
  1440 ;; ---------------------------------------------------------------------------------
  1441 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1442 ;; ---------------------------------------------------------------------------------
  1443 ;; (0) _main                                                14    14      0   13956
  1444 ;;                                             71 BANK0      3     3      0
  1445 ;;                                              0 BANK1     11    11      0
  1446 ;;                               _init
  1447 ;;                         _robot_read
  1448 ;;                    _readAvgDistance
  1449 ;;                      _UpdateDisplay
  1450 ;;                               _Menu
  1451 ;;                        _calibrateIR
  1452 ;;                            _scan360
  1453 ;;                             _rotate
  1454 ;;                     _robotMoveSpeed
  1455 ;;                     _robotTurnSpeed
  1456 ;;                           ___awtoft
  1457 ;;                            ___ftmul
  1458 ;;                            ___fttol
  1459 ;;                          _robotTurn
  1460 ;;                         _ChargeMode
  1461 ;; ---------------------------------------------------------------------------------
  1462 ;; (1) _ChargeMode                                           1     1      0    1305
  1463 ;;                                             57 BANK0      1     1      0
  1464 ;;                          _ser_putch
  1465 ;;                      _UpdateDisplay
  1466 ;; ---------------------------------------------------------------------------------
  1467 ;; (1) _robotTurnSpeed                                       9     5      4    1710
  1468 ;;                                             57 BANK0      9     5      4
  1469 ;;                          _robotTurn
  1470 ;;                         _robot_read
  1471 ;;                      _UpdateDisplay
  1472 ;;                                _abs
  1473 ;; ---------------------------------------------------------------------------------
  1474 ;; (1) _robotMoveSpeed                                      12     8      4    3578
  1475 ;;                                             59 BANK0     12     8      4
  1476 ;;                         _RobotDrive
  1477 ;;                         _robot_read
  1478 ;;                      _UpdateDisplay
  1479 ;;                                _abs
  1480 ;;                           ___awtoft
  1481 ;;                             ___ftge
  1482 ;;                            ___ftdiv
  1483 ;;                            ___ftmul
  1484 ;;                            ___fttol
  1485 ;; ---------------------------------------------------------------------------------
  1486 ;; (1) _scan360                                              8     6      2    2122
  1487 ;;                                             57 BANK0      8     6      2
  1488 ;;                    _readAvgDistance
  1489 ;;                             _rotate
  1490 ;;                      _UpdateDisplay
  1491 ;; ---------------------------------------------------------------------------------
  1492 ;; (1) _calibrateIR                                          0     0      0    1381
  1493 ;;                             _rotate
  1494 ;;                      _UpdateDisplay
  1495 ;; ---------------------------------------------------------------------------------
  1496 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1497 ;;                                             37 BANK0     20    20      0
  1498 ;;                  _lcd_write_control
  1499 ;;                            _sprintf
  1500 ;;                     _lcd_set_cursor
  1501 ;;                   _lcd_write_string
  1502 ;;                            ___awmod
  1503 ;; ---------------------------------------------------------------------------------
  1504 ;; (2) _readAvgDistance                                      8     8      0     625
  1505 ;;                                             16 BANK0      8     8      0
  1506 ;;                       _readDistance
  1507 ;;                            ___lwdiv
  1508 ;;                         _ADCconvert
  1509 ;; ---------------------------------------------------------------------------------
  1510 ;; (1) _init                                                 1     1      0      44
  1511 ;;                                              3 BANK0      1     1      0
  1512 ;;                           _ser_init
  1513 ;;                           _init_adc
  1514 ;;                           _lcd_init
  1515 ;;                          _robo_init
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (3) _readDistance                                         6     4      2      69
  1518 ;;                                              8 BANK0      6     4      2
  1519 ;;                   _adc_read_channel
  1520 ;; ---------------------------------------------------------------------------------
  1521 ;; (2) _robot_read                                           3     3      0     111
  1522 ;;                                              2 BANK0      3     3      0
  1523 ;;                          _ser_putch
  1524 ;;                          _ser_getch
  1525 ;; ---------------------------------------------------------------------------------
  1526 ;; (2) _lcd_init                                             0     0      0      22
  1527 ;;                  _lcd_write_control
  1528 ;; ---------------------------------------------------------------------------------
  1529 ;; (3) _lcd_write_string                                     2     0      2      67
  1530 ;;                                              7 BANK0      2     0      2
  1531 ;;                     _lcd_write_data
  1532 ;;                            ___awmod (ARG)
  1533 ;; ---------------------------------------------------------------------------------
  1534 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1535 ;;                                              3 BANK0      1     1      0
  1536 ;;                  _lcd_write_control
  1537 ;; ---------------------------------------------------------------------------------
  1538 ;; (1) ___awtoft                                             6     3      3     300
  1539 ;;                                             22 BANK0      6     3      3
  1540 ;;                           ___ftpack
  1541 ;;                            ___fttol (ARG)
  1542 ;;                                _abs (ARG)
  1543 ;; ---------------------------------------------------------------------------------
  1544 ;; (1) ___ftmul                                             16    10      6     535
  1545 ;;                                             38 BANK0     16    10      6
  1546 ;;                           ___ftpack
  1547 ;;                           ___awtoft (ARG)
  1548 ;;                            ___fttol (ARG)
  1549 ;;                            ___ftdiv (ARG)
  1550 ;; ---------------------------------------------------------------------------------
  1551 ;; (2) ___ftdiv                                             16    10      6     489
  1552 ;;                                             22 BANK0     16    10      6
  1553 ;;                           ___ftpack
  1554 ;;                            ___fttol (ARG)
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (2) _abs                                                  4     2      2     158
  1557 ;;                                              6 BANK0      4     2      2
  1558 ;;                             ___wmul
  1559 ;; ---------------------------------------------------------------------------------
  1560 ;; (2) _RobotDrive                                           5     3      2     112
  1561 ;;                                             54 BANK0      5     3      2
  1562 ;;                          _ser_putch
  1563 ;;                            ___fttol (ARG)
  1564 ;;                            ___ftmul (ARG)
  1565 ;;                           ___awtoft (ARG)
  1566 ;;                            ___ftdiv (ARG)
  1567 ;; ---------------------------------------------------------------------------------
  1568 ;; (3) _ser_getch                                            2     2      0      23
  1569 ;;                                              0 BANK0      2     2      0
  1570 ;;                           _ser_isrx
  1571 ;; ---------------------------------------------------------------------------------
  1572 ;; (3) _sprintf                                             17    12      5     798
  1573 ;;                                             20 BANK0     17    12      5
  1574 ;;                            ___lwdiv
  1575 ;;                            ___lwmod
  1576 ;; ---------------------------------------------------------------------------------
  1577 ;; (3) _ADCconvert                                           2     2      0     254
  1578 ;;                                             14 BANK0      2     2      0
  1579 ;;                             ___wmul
  1580 ;;                            ___lwdiv
  1581 ;; ---------------------------------------------------------------------------------
  1582 ;; (1) _robotTurn                                            2     0      2      66
  1583 ;;                                              2 BANK0      2     0      2
  1584 ;;                          _ser_putch
  1585 ;; ---------------------------------------------------------------------------------
  1586 ;; (1) _rotate                                               7     4      3      98
  1587 ;;                                              3 BANK0      7     4      3
  1588 ;;                       _spi_transfer
  1589 ;; ---------------------------------------------------------------------------------
  1590 ;; (2) _robo_init                                            0     0      0      22
  1591 ;;                          _ser_putch
  1592 ;; ---------------------------------------------------------------------------------
  1593 ;; (4) _lcd_write_data                                       3     3      0      22
  1594 ;;                                              0 BANK0      3     3      0
  1595 ;; ---------------------------------------------------------------------------------
  1596 ;; (4) _lcd_write_control                                    3     3      0      22
  1597 ;;                                              0 BANK0      3     3      0
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (2) _init_adc                                             1     1      0       0
  1600 ;;                                              0 BANK0      1     1      0
  1601 ;; ---------------------------------------------------------------------------------
  1602 ;; (4) _adc_read_channel                                     2     2      0      46
  1603 ;;                                              6 BANK0      2     2      0
  1604 ;;                           _adc_read
  1605 ;; ---------------------------------------------------------------------------------
  1606 ;; (3) ___awmod                                              7     3      4     296
  1607 ;;                                              0 BANK0      7     3      4
  1608 ;; ---------------------------------------------------------------------------------
  1609 ;; (2) ___ftge                                              12     6      6     136
  1610 ;;                                              0 BANK0     12     6      6
  1611 ;; ---------------------------------------------------------------------------------
  1612 ;; (1) ___fttol                                             14    10      4     252
  1613 ;;                                              8 BANK0     14    10      4
  1614 ;;                           ___ftpack (ARG)
  1615 ;; ---------------------------------------------------------------------------------
  1616 ;; (2) ___ftpack                                             8     3      5     209
  1617 ;;                                              0 BANK0      8     3      5
  1618 ;; ---------------------------------------------------------------------------------
  1619 ;; (4) ___lwmod                                              6     2      4     159
  1620 ;;                                             14 BANK0      6     2      4
  1621 ;;                            ___lwdiv (ARG)
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (4) ___lwdiv                                              8     4      4     162
  1624 ;;                                              6 BANK0      8     4      4
  1625 ;;                             ___wmul (ARG)
  1626 ;; ---------------------------------------------------------------------------------
  1627 ;; (3) ___wmul                                               6     2      4      92
  1628 ;;                                              0 BANK0      6     2      4
  1629 ;; ---------------------------------------------------------------------------------
  1630 ;; (4) _ser_isrx                                             0     0      0       0
  1631 ;; ---------------------------------------------------------------------------------
  1632 ;; (2) _spi_transfer                                         3     3      0      30
  1633 ;;                                              0 BANK0      3     3      0
  1634 ;; ---------------------------------------------------------------------------------
  1635 ;; (2) _ser_putch                                            2     2      0      22
  1636 ;;                                              0 BANK0      2     2      0
  1637 ;; ---------------------------------------------------------------------------------
  1638 ;; (1) _Menu                                                 1     1      0      22
  1639 ;;                                              0 BANK0      1     1      0
  1640 ;; ---------------------------------------------------------------------------------
  1641 ;; (2) _ser_init                                             1     1      0       0
  1642 ;;                                              0 BANK0      1     1      0
  1643 ;; ---------------------------------------------------------------------------------
  1644 ;; (5) _adc_read                                             6     4      2      24
  1645 ;;                                              0 BANK0      6     4      2
  1646 ;; ---------------------------------------------------------------------------------
  1647 ;; Estimated maximum stack depth 5
  1648 ;; ---------------------------------------------------------------------------------
  1649 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1650 ;; ---------------------------------------------------------------------------------
  1651 ;; (6) _isr1                                                 5     5      0     521
  1652 ;;                                              6 COMMON     5     5      0
  1653 ;;                          i1___lwmod
  1654 ;;                        _ReadButtons
  1655 ;; ---------------------------------------------------------------------------------
  1656 ;; (7) _ReadButtons                                          0     0      0       0
  1657 ;;                           _Debounce
  1658 ;; ---------------------------------------------------------------------------------
  1659 ;; (7) i1___lwmod                                            6     2      4     521
  1660 ;;                                              0 COMMON     6     2      4
  1661 ;; ---------------------------------------------------------------------------------
  1662 ;; (8) _Debounce                                             1     1      0       0
  1663 ;;                                              0 COMMON     1     1      0
  1664 ;; ---------------------------------------------------------------------------------
  1665 ;; Estimated maximum stack depth 8
  1666 ;; ---------------------------------------------------------------------------------
  1667                           
  1668 ;; Call Graph Graphs:
  1669                           
  1670 ;; _main (ROOT)
  1671 ;;   _init
  1672 ;;     _ser_init
  1673 ;;     _init_adc
  1674 ;;     _lcd_init
  1675 ;;       _lcd_write_control
  1676 ;;     _robo_init
  1677 ;;       _ser_putch
  1678 ;;   _robot_read
  1679 ;;     _ser_putch
  1680 ;;     _ser_getch
  1681 ;;       _ser_isrx
  1682 ;;   _readAvgDistance
  1683 ;;     _readDistance
  1684 ;;       _adc_read_channel
  1685 ;;         _adc_read
  1686 ;;     ___lwdiv
  1687 ;;       ___wmul (ARG)
  1688 ;;     _ADCconvert
  1689 ;;       ___wmul
  1690 ;;       ___lwdiv
  1691 ;;         ___wmul (ARG)
  1692 ;;   _UpdateDisplay
  1693 ;;     _lcd_write_control
  1694 ;;     _sprintf
  1695 ;;       ___lwdiv
  1696 ;;         ___wmul (ARG)
  1697 ;;       ___lwmod
  1698 ;;         ___lwdiv (ARG)
  1699 ;;           ___wmul (ARG)
  1700 ;;     _lcd_set_cursor
  1701 ;;       _lcd_write_control
  1702 ;;     _lcd_write_string
  1703 ;;       _lcd_write_data
  1704 ;;       ___awmod (ARG)
  1705 ;;     ___awmod
  1706 ;;   _Menu
  1707 ;;   _calibrateIR
  1708 ;;     _rotate
  1709 ;;       _spi_transfer
  1710 ;;     _UpdateDisplay
  1711 ;;       _lcd_write_control
  1712 ;;       _sprintf
  1713 ;;         ___lwdiv
  1714 ;;           ___wmul (ARG)
  1715 ;;         ___lwmod
  1716 ;;           ___lwdiv (ARG)
  1717 ;;             ___wmul (ARG)
  1718 ;;       _lcd_set_cursor
  1719 ;;         _lcd_write_control
  1720 ;;       _lcd_write_string
  1721 ;;         _lcd_write_data
  1722 ;;         ___awmod (ARG)
  1723 ;;       ___awmod
  1724 ;;   _scan360
  1725 ;;     _readAvgDistance
  1726 ;;       _readDistance
  1727 ;;         _adc_read_channel
  1728 ;;           _adc_read
  1729 ;;       ___lwdiv
  1730 ;;         ___wmul (ARG)
  1731 ;;       _ADCconvert
  1732 ;;         ___wmul
  1733 ;;         ___lwdiv
  1734 ;;           ___wmul (ARG)
  1735 ;;     _rotate
  1736 ;;       _spi_transfer
  1737 ;;     _UpdateDisplay
  1738 ;;       _lcd_write_control
  1739 ;;       _sprintf
  1740 ;;         ___lwdiv
  1741 ;;           ___wmul (ARG)
  1742 ;;         ___lwmod
  1743 ;;           ___lwdiv (ARG)
  1744 ;;             ___wmul (ARG)
  1745 ;;       _lcd_set_cursor
  1746 ;;         _lcd_write_control
  1747 ;;       _lcd_write_string
  1748 ;;         _lcd_write_data
  1749 ;;         ___awmod (ARG)
  1750 ;;       ___awmod
  1751 ;;   _rotate
  1752 ;;     _spi_transfer
  1753 ;;   _robotMoveSpeed
  1754 ;;     _RobotDrive
  1755 ;;       _ser_putch
  1756 ;;       ___fttol (ARG)
  1757 ;;         ___ftpack (ARG)
  1758 ;;       ___ftmul (ARG)
  1759 ;;         ___ftpack
  1760 ;;         ___awtoft (ARG)
  1761 ;;           ___ftpack
  1762 ;;           ___fttol (ARG)
  1763 ;;             ___ftpack (ARG)
  1764 ;;           _abs (ARG)
  1765 ;;             ___wmul
  1766 ;;         ___fttol (ARG)
  1767 ;;           ___ftpack (ARG)
  1768 ;;         ___ftdiv (ARG)
  1769 ;;           ___ftpack
  1770 ;;           ___fttol (ARG)
  1771 ;;             ___ftpack (ARG)
  1772 ;;       ___awtoft (ARG)
  1773 ;;         ___ftpack
  1774 ;;         ___fttol (ARG)
  1775 ;;           ___ftpack (ARG)
  1776 ;;         _abs (ARG)
  1777 ;;           ___wmul
  1778 ;;       ___ftdiv (ARG)
  1779 ;;         ___ftpack
  1780 ;;         ___fttol (ARG)
  1781 ;;           ___ftpack (ARG)
  1782 ;;     _robot_read
  1783 ;;       _ser_putch
  1784 ;;       _ser_getch
  1785 ;;         _ser_isrx
  1786 ;;     _UpdateDisplay
  1787 ;;       _lcd_write_control
  1788 ;;       _sprintf
  1789 ;;         ___lwdiv
  1790 ;;           ___wmul (ARG)
  1791 ;;         ___lwmod
  1792 ;;           ___lwdiv (ARG)
  1793 ;;             ___wmul (ARG)
  1794 ;;       _lcd_set_cursor
  1795 ;;         _lcd_write_control
  1796 ;;       _lcd_write_string
  1797 ;;         _lcd_write_data
  1798 ;;         ___awmod (ARG)
  1799 ;;       ___awmod
  1800 ;;     _abs
  1801 ;;       ___wmul
  1802 ;;     ___awtoft
  1803 ;;       ___ftpack
  1804 ;;       ___fttol (ARG)
  1805 ;;         ___ftpack (ARG)
  1806 ;;       _abs (ARG)
  1807 ;;         ___wmul
  1808 ;;     ___ftge
  1809 ;;     ___ftdiv
  1810 ;;       ___ftpack
  1811 ;;       ___fttol (ARG)
  1812 ;;         ___ftpack (ARG)
  1813 ;;     ___ftmul
  1814 ;;       ___ftpack
  1815 ;;       ___awtoft (ARG)
  1816 ;;         ___ftpack
  1817 ;;         ___fttol (ARG)
  1818 ;;           ___ftpack (ARG)
  1819 ;;         _abs (ARG)
  1820 ;;           ___wmul
  1821 ;;       ___fttol (ARG)
  1822 ;;         ___ftpack (ARG)
  1823 ;;       ___ftdiv (ARG)
  1824 ;;         ___ftpack
  1825 ;;         ___fttol (ARG)
  1826 ;;           ___ftpack (ARG)
  1827 ;;     ___fttol
  1828 ;;       ___ftpack (ARG)
  1829 ;;   _robotTurnSpeed
  1830 ;;     _robotTurn
  1831 ;;       _ser_putch
  1832 ;;     _robot_read
  1833 ;;       _ser_putch
  1834 ;;       _ser_getch
  1835 ;;         _ser_isrx
  1836 ;;     _UpdateDisplay
  1837 ;;       _lcd_write_control
  1838 ;;       _sprintf
  1839 ;;         ___lwdiv
  1840 ;;           ___wmul (ARG)
  1841 ;;         ___lwmod
  1842 ;;           ___lwdiv (ARG)
  1843 ;;             ___wmul (ARG)
  1844 ;;       _lcd_set_cursor
  1845 ;;         _lcd_write_control
  1846 ;;       _lcd_write_string
  1847 ;;         _lcd_write_data
  1848 ;;         ___awmod (ARG)
  1849 ;;       ___awmod
  1850 ;;     _abs
  1851 ;;       ___wmul
  1852 ;;   ___awtoft
  1853 ;;     ___ftpack
  1854 ;;     ___fttol (ARG)
  1855 ;;       ___ftpack (ARG)
  1856 ;;     _abs (ARG)
  1857 ;;       ___wmul
  1858 ;;   ___ftmul
  1859 ;;     ___ftpack
  1860 ;;     ___awtoft (ARG)
  1861 ;;       ___ftpack
  1862 ;;       ___fttol (ARG)
  1863 ;;         ___ftpack (ARG)
  1864 ;;       _abs (ARG)
  1865 ;;         ___wmul
  1866 ;;     ___fttol (ARG)
  1867 ;;       ___ftpack (ARG)
  1868 ;;     ___ftdiv (ARG)
  1869 ;;       ___ftpack
  1870 ;;       ___fttol (ARG)
  1871 ;;         ___ftpack (ARG)
  1872 ;;   ___fttol
  1873 ;;     ___ftpack (ARG)
  1874 ;;   _robotTurn
  1875 ;;     _ser_putch
  1876 ;;   _ChargeMode
  1877 ;;     _ser_putch
  1878 ;;     _UpdateDisplay
  1879 ;;       _lcd_write_control
  1880 ;;       _sprintf
  1881 ;;         ___lwdiv
  1882 ;;           ___wmul (ARG)
  1883 ;;         ___lwmod
  1884 ;;           ___lwdiv (ARG)
  1885 ;;             ___wmul (ARG)
  1886 ;;       _lcd_set_cursor
  1887 ;;         _lcd_write_control
  1888 ;;       _lcd_write_string
  1889 ;;         _lcd_write_data
  1890 ;;         ___awmod (ARG)
  1891 ;;       ___awmod
  1892 ;;
  1893 ;; _isr1 (ROOT)
  1894 ;;   i1___lwmod
  1895 ;;   _ReadButtons
  1896 ;;     _Debounce
  1897 ;;
  1898                           
  1899 ;; Address spaces:
  1900                           
  1901 ;;Name               Size   Autos  Total    Cost      Usage
  1902 ;;BANK3               60      0      20       9       33.3%
  1903 ;;BITBANK3            60      0       0       8        0.0%
  1904 ;;SFR3                 0      0       0       4        0.0%
  1905 ;;BITSFR3              0      0       0       4        0.0%
  1906 ;;BANK2               60      0       0      11        0.0%
  1907 ;;BITBANK2            60      0       0      10        0.0%
  1908 ;;SFR2                 0      0       0       5        0.0%
  1909 ;;BITSFR2              0      0       0       5        0.0%
  1910 ;;SFR1                 0      0       0       2        0.0%
  1911 ;;BITSFR1              0      0       0       2        0.0%
  1912 ;;BANK1               50      B      4E       7       97.5%
  1913 ;;BITBANK1            50      0       0       6        0.0%
  1914 ;;CODE                 0      0       0       0        0.0%
  1915 ;;DATA                 0      0      D7      12        0.0%
  1916 ;;ABS                  0      0      CC       3        0.0%
  1917 ;;NULL                 0      0       0       0        0.0%
  1918 ;;STACK                0      0       B       2        0.0%
  1919 ;;BANK0               50     4A      50       5      100.0%
  1920 ;;BITBANK0            50      0       0       4        0.0%
  1921 ;;SFR0                 0      0       0       1        0.0%
  1922 ;;BITSFR0              0      0       0       1        0.0%
  1923 ;;COMMON               E      B       E       1      100.0%
  1924 ;;BITCOMMON            E      0       2       0       14.3%
  1925 ;;EEDATA             100      0       0       0        0.0%
  1926                           
  1927                           	global	_main
  1928                           psect	maintext,global,class=CODE,delta=2
  1929                           global __pmaintext
  1930  0015                     __pmaintext:
  1931                           
  1932 ;; *************** function _main *****************
  1933 ;; Defined at:
  1934 ;;		line 172 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  RT2P            2    9[BANK1 ] int 
  1939 ;;  shortwall       2    7[BANK1 ] int 
  1940 ;;  RT2A            2    2[BANK1 ] int 
  1941 ;;  direction1      2    0[BANK1 ] int 
  1942 ;;  shortwall       2    4[BANK1 ] int 
  1943 ;;  choice          1    6[BANK1 ] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;		None               void
  1946 ;; Registers used:
  1947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 17F/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         0       0       0       0       0
  1954 ;;      Locals:         0       0      11       0       0
  1955 ;;      Temps:          0       3       0       0       0
  1956 ;;      Totals:         0       3      11       0       0
  1957 ;;Total ram usage:       14 bytes
  1958 ;; Hardware stack levels required when called:    8
  1959 ;; This function calls:
  1960 ;;		_init
  1961 ;;		_robot_read
  1962 ;;		_readAvgDistance
  1963 ;;		_UpdateDisplay
  1964 ;;		_Menu
  1965 ;;		_calibrateIR
  1966 ;;		_scan360
  1967 ;;		_rotate
  1968 ;;		_robotMoveSpeed
  1969 ;;		_robotTurnSpeed
  1970 ;;		___awtoft
  1971 ;;		___ftmul
  1972 ;;		___fttol
  1973 ;;		_robotTurn
  1974 ;;		_ChargeMode
  1975 ;; This function is called by:
  1976 ;;		Startup code after reset
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           psect	maintext
  1980                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1981                           	line	172
  1982                           	global	__size_of_main
  1983  0292                     	__size_of_main	equ	__end_of_main-_main
  1984                           	
  1985  0015                     _main:	
  1986                           	opt	stack 0
  1987                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1988                           	line	173
  1989                           	
  1990  0015                     l11681:	
  1991                           ;Main.c: 173: unsigned char choice = 255;
  1992  0015  30FF               	movlw	(0FFh)
  1993  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1994  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1995  0018  00E7               	movwf	(??_main+0)+0
  1996  0019  0867               	movf	(??_main+0)+0,w
  1997  001A  1683               	bsf	status, 5	;RP0=1, select bank1
  1998  001B  1303               	bcf	status, 6	;RP1=0, select bank1
  1999  001C  00E9               	movwf	(main@choice)^080h
  2000                           	line	174
  2001                           	
  2002  001D                     l11683:	
  2003                           ;Main.c: 174: int shortwall = 0;
  2004  001D  01E7               	clrf	(main@shortwall)^080h
  2005  001E  01E8               	clrf	(main@shortwall+1)^080h
  2006                           	line	177
  2007                           	
  2008  001F                     l11685:	
  2009                           ;Main.c: 177: init();
  2010  001F  160A  118A  23DA   	fcall	_init
              120A  118A         
  2011  0024  2825               	goto	l11687
  2012                           	line	180
  2013                           ;Main.c: 180: while(1)
  2014                           	
  2015  0025                     l2230:	
  2016                           	line	182
  2017                           	
  2018  0025                     l11687:	
  2019                           ;Main.c: 181: {
  2020                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  2021  0025  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2022  0026  2828               	goto	u5641
  2023  0027  2829               	goto	u5640
  2024  0028                     u5641:
  2025  0028  283B               	goto	l11697
  2026  0029                     u5640:
  2027                           	line	184
  2028                           	
  2029  0029                     l11689:	
  2030                           ;Main.c: 183: {
  2031                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  2032  0029  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2033                           	line	185
  2034                           	
  2035  002A                     l11691:	
  2036                           ;Main.c: 185: robot_read(2);
  2037  002A  3002               	movlw	(02h)
  2038  002B  120A  158A  26E0   	fcall	_robot_read
              120A  118A         
  2039                           	line	186
  2040                           	
  2041  0030                     l11693:	
  2042                           ;Main.c: 186: readAvgDistance();
  2043  0030  120A  158A  20BE   	fcall	_readAvgDistance
              120A  118A         
  2044                           	line	187
  2045                           	
  2046  0035                     l11695:	
  2047                           ;Main.c: 187: UpdateDisplay();
  2048  0035  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  118A         
  2049  003A  283B               	goto	l11697
  2050                           	line	188
  2051                           	
  2052  003B                     l2231:	
  2053                           	line	189
  2054                           	
  2055  003B                     l11697:	
  2056                           ;Main.c: 188: }
  2057                           ;Main.c: 189: if (buttonPressed)
  2058  003B  087D               	movf	(_buttonPressed),w	;volatile
  2059  003C  1D03               	skipz
  2060  003D  283F               	goto	u5650
  2061  003E  2A84               	goto	l11785
  2062  003F                     u5650:
  2063                           	line	192
  2064                           	
  2065  003F                     l11699:	
  2066                           ;Main.c: 191: {
  2067                           ;Main.c: 192: choice = Menu(buttonPressed);
  2068  003F  087D               	movf	(_buttonPressed),w	;volatile
  2069  0040  160A  118A  2579   	fcall	_Menu
              120A  118A         
  2070  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  2071  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  2072  0047  00E7               	movwf	(??_main+0)+0
  2073  0048  0867               	movf	(??_main+0)+0,w
  2074  0049  1683               	bsf	status, 5	;RP0=1, select bank1
  2075  004A  1303               	bcf	status, 6	;RP1=0, select bank1
  2076  004B  00E9               	movwf	(main@choice)^080h
  2077                           	line	193
  2078                           	
  2079  004C                     l11701:	
  2080                           ;Main.c: 193: buttonPressed = 0;
  2081  004C  01FD               	clrf	(_buttonPressed)	;volatile
  2082  004D  2A84               	goto	l11785
  2083                           	line	194
  2084                           	
  2085  004E                     l2232:	
  2086                           	line	198
  2087                           ;Main.c: 194: }
  2088                           ;Main.c: 198: switch (choice)
  2089  004E  2A84               	goto	l11785
  2090                           	line	200
  2091                           ;Main.c: 199: {
  2092                           ;Main.c: 200: case 0:
  2093                           	
  2094  004F                     l2234:	
  2095                           	line	201
  2096                           	
  2097  004F                     l11703:	
  2098                           ;Main.c: 201: calibrateIR();
  2099  004F  160A  118A  2660   	fcall	_calibrateIR
              120A  118A         
  2100                           	line	202
  2101                           ;Main.c: 202: break;
  2102  0054  2A9A               	goto	l11787
  2103                           	line	203
  2104                           ;Main.c: 203: case 1:
  2105                           	
  2106  0055                     l2236:	
  2107                           	line	204
  2108                           	
  2109  0055                     l11705:	
  2110                           ;Main.c: 204: shortwall = scan360();
  2111  0055  160A  118A  2726   	fcall	_scan360
              120A  118A         
  2112  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  2113  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  2114  005C  085A               	movf	(1+(?_scan360)),w
  2115  005D  1683               	bsf	status, 5	;RP0=1, select bank1
  2116  005E  1303               	bcf	status, 6	;RP1=0, select bank1
  2117  005F  01E8               	clrf	(main@shortwall+1)^080h
  2118  0060  07E8               	addwf	(main@shortwall+1)^080h
  2119  0061  1283               	bcf	status, 5	;RP0=0, select bank0
  2120  0062  1303               	bcf	status, 6	;RP1=0, select bank0
  2121  0063  0859               	movf	(0+(?_scan360)),w
  2122  0064  1683               	bsf	status, 5	;RP0=1, select bank1
  2123  0065  1303               	bcf	status, 6	;RP1=0, select bank1
  2124  0066  01E7               	clrf	(main@shortwall)^080h
  2125  0067  07E7               	addwf	(main@shortwall)^080h
  2126                           
  2127                           	line	205
  2128                           	
  2129  0068                     l11707:	
  2130                           ;Main.c: 205: rotate((200 - shortwall), 0);
  2131  0068  0967               	comf	(main@shortwall)^080h,w
  2132  0069  1283               	bcf	status, 5	;RP0=0, select bank0
  2133  006A  1303               	bcf	status, 6	;RP1=0, select bank0
  2134  006B  00E7               	movwf	(??_main+0)+0
  2135  006C  1683               	bsf	status, 5	;RP0=1, select bank1
  2136  006D  1303               	bcf	status, 6	;RP1=0, select bank1
  2137  006E  0968               	comf	(main@shortwall+1)^080h,w
  2138  006F  1283               	bcf	status, 5	;RP0=0, select bank0
  2139  0070  1303               	bcf	status, 6	;RP1=0, select bank0
  2140  0071  00E8               	movwf	((??_main+0)+0+1)
  2141  0072  0AE7               	incf	(??_main+0)+0,f
  2142  0073  1903               	skipnz
  2143  0074  0AE8               	incf	((??_main+0)+0+1),f
  2144  0075  0867               	movf	0+(??_main+0)+0,w
  2145  0076  3EC8               	addlw	low(0C8h)
  2146  0077  00A3               	movwf	(?_rotate)
  2147  0078  0868               	movf	1+(??_main+0)+0,w
  2148  0079  1803               	skipnc
  2149  007A  3E01               	addlw	1
  2150  007B  3E00               	addlw	high(0C8h)
  2151  007C  00A4               	movwf	1+(?_rotate)
  2152  007D  01A5               	clrf	0+(?_rotate)+02h
  2153  007E  160A  118A  2610   	fcall	_rotate
              120A  118A         
  2154                           	line	206
  2155                           ;Main.c: 206: break;
  2156  0083  2A9A               	goto	l11787
  2157                           	line	207
  2158                           ;Main.c: 207: case 2:
  2159                           	
  2160  0084                     l2237:	
  2161                           	line	209
  2162                           	
  2163  0084                     l11709:	
  2164                           ;Main.c: 209: robotMoveSpeed(1000, 400);
  2165  0084  30E8               	movlw	low(03E8h)
  2166  0085  1283               	bcf	status, 5	;RP0=0, select bank0
  2167  0086  1303               	bcf	status, 6	;RP1=0, select bank0
  2168  0087  00DB               	movwf	(?_robotMoveSpeed)
  2169  0088  3003               	movlw	high(03E8h)
  2170  0089  00DC               	movwf	((?_robotMoveSpeed))+1
  2171  008A  3090               	movlw	low(0190h)
  2172  008B  00DD               	movwf	0+(?_robotMoveSpeed)+02h
  2173  008C  3001               	movlw	high(0190h)
  2174  008D  00DE               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2175  008E  120A  118A  2629   	fcall	_robotMoveSpeed
              120A  118A         
  2176                           	line	210
  2177                           ;Main.c: 210: break;
  2178  0093  2A9A               	goto	l11787
  2179                           	line	211
  2180                           ;Main.c: 211: case 3:
  2181                           	
  2182  0094                     l2238:	
  2183                           	line	212
  2184                           	
  2185  0094                     l11711:	
  2186                           ;Main.c: 212: robotTurnSpeed(90, 1);
  2187  0094  305A               	movlw	low(05Ah)
  2188  0095  1283               	bcf	status, 5	;RP0=0, select bank0
  2189  0096  1303               	bcf	status, 6	;RP1=0, select bank0
  2190  0097  00D9               	movwf	(?_robotTurnSpeed)
  2191  0098  3000               	movlw	high(05Ah)
  2192  0099  00DA               	movwf	((?_robotTurnSpeed))+1
  2193  009A  3001               	movlw	low(01h)
  2194  009B  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2195  009C  3000               	movlw	high(01h)
  2196  009D  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2197  009E  120A  158A  223A   	fcall	_robotTurnSpeed
              120A  118A         
  2198                           	line	213
  2199                           ;Main.c: 213: break;
  2200  00A3  2A9A               	goto	l11787
  2201                           	line	214
  2202                           ;Main.c: 214: case 4:
  2203                           	
  2204  00A4                     l2239:	
  2205                           	line	215
  2206                           	
  2207  00A4                     l11713:	
  2208                           ;Main.c: 215: TotalDistTravelled = 0;
  2209  00A4  1683               	bsf	status, 5	;RP0=1, select bank1
  2210  00A5  1303               	bcf	status, 6	;RP1=0, select bank1
  2211  00A6  01B4               	clrf	(_TotalDistTravelled)^080h
  2212  00A7  01B5               	clrf	(_TotalDistTravelled+1)^080h
  2213                           	line	216
  2214                           ;Main.c: 216: while(!ROBOTerror)
  2215  00A8  2A74               	goto	l11779
  2216                           	
  2217  00A9                     l2241:	
  2218                           	line	218
  2219                           	
  2220  00A9                     l11715:	
  2221                           ;Main.c: 217: {
  2222                           ;Main.c: 218: int shortwall = scan360();
  2223  00A9  160A  118A  2726   	fcall	_scan360
              120A  118A         
  2224  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  2225  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  2226  00B0  085A               	movf	(1+(?_scan360)),w
  2227  00B1  1683               	bsf	status, 5	;RP0=1, select bank1
  2228  00B2  1303               	bcf	status, 6	;RP1=0, select bank1
  2229  00B3  01EB               	clrf	(main@shortwall_3022+1)^080h
  2230  00B4  07EB               	addwf	(main@shortwall_3022+1)^080h
  2231  00B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2232  00B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2233  00B7  0859               	movf	(0+(?_scan360)),w
  2234  00B8  1683               	bsf	status, 5	;RP0=1, select bank1
  2235  00B9  1303               	bcf	status, 6	;RP1=0, select bank1
  2236  00BA  01EA               	clrf	(main@shortwall_3022)^080h
  2237  00BB  07EA               	addwf	(main@shortwall_3022)^080h
  2238                           
  2239                           	line	219
  2240                           	
  2241  00BC                     l11717:	
  2242                           ;Main.c: 219: int RT2P = 0;
  2243  00BC  01EC               	clrf	(main@RT2P)^080h
  2244  00BD  01ED               	clrf	(main@RT2P+1)^080h
  2245                           	line	220
  2246                           	
  2247  00BE                     l11719:	
  2248                           ;Main.c: 220: int direction1 = 0;
  2249  00BE  01E3               	clrf	(main@direction1)^080h
  2250  00BF  01E4               	clrf	(main@direction1+1)^080h
  2251                           	line	221
  2252                           	
  2253  00C0                     l11721:	
  2254                           ;Main.c: 221: if (shortwall > 200)
  2255  00C0  086B               	movf	(main@shortwall_3022+1)^080h,w
  2256  00C1  3A80               	xorlw	80h
  2257  00C2  00FF               	movwf	btemp+1
  2258  00C3  3080               	movlw	(high(0C9h))^80h
  2259  00C4  027F               	subwf	btemp+1,w
  2260  00C5  1D03               	skipz
  2261  00C6  28C9               	goto	u5665
  2262  00C7  30C9               	movlw	low(0C9h)
  2263  00C8  026A               	subwf	(main@shortwall_3022)^080h,w
  2264  00C9                     u5665:
  2265                           
  2266  00C9  1C03               	skipc
  2267  00CA  28CC               	goto	u5661
  2268  00CB  28CD               	goto	u5660
  2269  00CC                     u5661:
  2270  00CC  28D8               	goto	l11725
  2271  00CD                     u5660:
  2272                           	line	222
  2273                           	
  2274  00CD                     l11723:	
  2275                           ;Main.c: 222: RT2P = shortwall + 100;
  2276  00CD  1683               	bsf	status, 5	;RP0=1, select bank1
  2277  00CE  1303               	bcf	status, 6	;RP1=0, select bank1
  2278  00CF  086A               	movf	(main@shortwall_3022)^080h,w
  2279  00D0  3E64               	addlw	low(064h)
  2280  00D1  00EC               	movwf	(main@RT2P)^080h
  2281  00D2  086B               	movf	(main@shortwall_3022+1)^080h,w
  2282  00D3  1803               	skipnc
  2283  00D4  3E01               	addlw	1
  2284  00D5  3E00               	addlw	high(064h)
  2285  00D6  00ED               	movwf	1+(main@RT2P)^080h
  2286  00D7  28D8               	goto	l11725
  2287                           	
  2288  00D8                     l2242:	
  2289                           	line	223
  2290                           	
  2291  00D8                     l11725:	
  2292                           ;Main.c: 223: if (shortwall < 200)
  2293  00D8  1683               	bsf	status, 5	;RP0=1, select bank1
  2294  00D9  1303               	bcf	status, 6	;RP1=0, select bank1
  2295  00DA  086B               	movf	(main@shortwall_3022+1)^080h,w
  2296  00DB  3A80               	xorlw	80h
  2297  00DC  00FF               	movwf	btemp+1
  2298  00DD  3080               	movlw	(high(0C8h))^80h
  2299  00DE  027F               	subwf	btemp+1,w
  2300  00DF  1D03               	skipz
  2301  00E0  28E3               	goto	u5675
  2302  00E1  30C8               	movlw	low(0C8h)
  2303  00E2  026A               	subwf	(main@shortwall_3022)^080h,w
  2304  00E3                     u5675:
  2305                           
  2306  00E3  1803               	skipnc
  2307  00E4  28E6               	goto	u5671
  2308  00E5  28E7               	goto	u5670
  2309  00E6                     u5671:
  2310  00E6  28F2               	goto	l11729
  2311  00E7                     u5670:
  2312                           	line	224
  2313                           	
  2314  00E7                     l11727:	
  2315                           ;Main.c: 224: RT2P = shortwall - 100;
  2316  00E7  1683               	bsf	status, 5	;RP0=1, select bank1
  2317  00E8  1303               	bcf	status, 6	;RP1=0, select bank1
  2318  00E9  086A               	movf	(main@shortwall_3022)^080h,w
  2319  00EA  3E9C               	addlw	low(-100)
  2320  00EB  00EC               	movwf	(main@RT2P)^080h
  2321  00EC  086B               	movf	(main@shortwall_3022+1)^080h,w
  2322  00ED  1803               	skipnc
  2323  00EE  3E01               	addlw	1
  2324  00EF  3EFF               	addlw	high(-100)
  2325  00F0  00ED               	movwf	1+(main@RT2P)^080h
  2326  00F1  28F2               	goto	l11729
  2327                           	
  2328  00F2                     l2243:	
  2329                           	line	226
  2330                           	
  2331  00F2                     l11729:	
  2332                           ;Main.c: 226: if (RT2P >= 400 && RT2P < 500 )
  2333  00F2  1683               	bsf	status, 5	;RP0=1, select bank1
  2334  00F3  1303               	bcf	status, 6	;RP1=0, select bank1
  2335  00F4  086D               	movf	(main@RT2P+1)^080h,w
  2336  00F5  3A80               	xorlw	80h
  2337  00F6  00FF               	movwf	btemp+1
  2338  00F7  3081               	movlw	(high(0190h))^80h
  2339  00F8  027F               	subwf	btemp+1,w
  2340  00F9  1D03               	skipz
  2341  00FA  28FD               	goto	u5685
  2342  00FB  3090               	movlw	low(0190h)
  2343  00FC  026C               	subwf	(main@RT2P)^080h,w
  2344  00FD                     u5685:
  2345                           
  2346  00FD  1C03               	skipc
  2347  00FE  2900               	goto	u5681
  2348  00FF  2901               	goto	u5680
  2349  0100                     u5681:
  2350  0100  291F               	goto	l11737
  2351  0101                     u5680:
  2352                           	
  2353  0101                     l11731:	
  2354  0101  1683               	bsf	status, 5	;RP0=1, select bank1
  2355  0102  1303               	bcf	status, 6	;RP1=0, select bank1
  2356  0103  086D               	movf	(main@RT2P+1)^080h,w
  2357  0104  3A80               	xorlw	80h
  2358  0105  00FF               	movwf	btemp+1
  2359  0106  3081               	movlw	(high(01F4h))^80h
  2360  0107  027F               	subwf	btemp+1,w
  2361  0108  1D03               	skipz
  2362  0109  290C               	goto	u5695
  2363  010A  30F4               	movlw	low(01F4h)
  2364  010B  026C               	subwf	(main@RT2P)^080h,w
  2365  010C                     u5695:
  2366                           
  2367  010C  1803               	skipnc
  2368  010D  290F               	goto	u5691
  2369  010E  2910               	goto	u5690
  2370  010F                     u5691:
  2371  010F  291F               	goto	l11737
  2372  0110                     u5690:
  2373                           	line	228
  2374                           	
  2375  0110                     l11733:	
  2376                           ;Main.c: 227: {
  2377                           ;Main.c: 228: RT2P = RT2P - 400;
  2378  0110  1683               	bsf	status, 5	;RP0=1, select bank1
  2379  0111  1303               	bcf	status, 6	;RP1=0, select bank1
  2380  0112  086C               	movf	(main@RT2P)^080h,w
  2381  0113  3E70               	addlw	low(-400)
  2382  0114  00EC               	movwf	(main@RT2P)^080h
  2383  0115  086D               	movf	(main@RT2P+1)^080h,w
  2384  0116  1803               	skipnc
  2385  0117  3E01               	addlw	1
  2386  0118  3EFE               	addlw	high(-400)
  2387  0119  00ED               	movwf	1+(main@RT2P)^080h
  2388                           	line	229
  2389                           	
  2390  011A                     l11735:	
  2391                           ;Main.c: 229: direction1 = 1;
  2392  011A  3001               	movlw	low(01h)
  2393  011B  00E3               	movwf	(main@direction1)^080h
  2394  011C  3000               	movlw	high(01h)
  2395  011D  00E4               	movwf	((main@direction1)^080h)+1
  2396  011E  291F               	goto	l11737
  2397                           	line	230
  2398                           	
  2399  011F                     l2244:	
  2400                           	line	231
  2401                           	
  2402  011F                     l11737:	
  2403                           ;Main.c: 230: }
  2404                           ;Main.c: 231: if (RT2P >= 200 && RT2P < 400)
  2405  011F  1683               	bsf	status, 5	;RP0=1, select bank1
  2406  0120  1303               	bcf	status, 6	;RP1=0, select bank1
  2407  0121  086D               	movf	(main@RT2P+1)^080h,w
  2408  0122  3A80               	xorlw	80h
  2409  0123  00FF               	movwf	btemp+1
  2410  0124  3080               	movlw	(high(0C8h))^80h
  2411  0125  027F               	subwf	btemp+1,w
  2412  0126  1D03               	skipz
  2413  0127  292A               	goto	u5705
  2414  0128  30C8               	movlw	low(0C8h)
  2415  0129  026C               	subwf	(main@RT2P)^080h,w
  2416  012A                     u5705:
  2417                           
  2418  012A  1C03               	skipc
  2419  012B  292D               	goto	u5701
  2420  012C  292E               	goto	u5700
  2421  012D                     u5701:
  2422  012D  2962               	goto	l11747
  2423  012E                     u5700:
  2424                           	
  2425  012E                     l11739:	
  2426  012E  1683               	bsf	status, 5	;RP0=1, select bank1
  2427  012F  1303               	bcf	status, 6	;RP1=0, select bank1
  2428  0130  086D               	movf	(main@RT2P+1)^080h,w
  2429  0131  3A80               	xorlw	80h
  2430  0132  00FF               	movwf	btemp+1
  2431  0133  3081               	movlw	(high(0190h))^80h
  2432  0134  027F               	subwf	btemp+1,w
  2433  0135  1D03               	skipz
  2434  0136  2939               	goto	u5715
  2435  0137  3090               	movlw	low(0190h)
  2436  0138  026C               	subwf	(main@RT2P)^080h,w
  2437  0139                     u5715:
  2438                           
  2439  0139  1803               	skipnc
  2440  013A  293C               	goto	u5711
  2441  013B  293D               	goto	u5710
  2442  013C                     u5711:
  2443  013C  2962               	goto	l11747
  2444  013D                     u5710:
  2445                           	line	233
  2446                           	
  2447  013D                     l11741:	
  2448                           ;Main.c: 232: {
  2449                           ;Main.c: 233: RT2P = 400 - RT2P;
  2450  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  2451  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  2452  013F  096C               	comf	(main@RT2P)^080h,w
  2453  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  2454  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  2455  0142  00E7               	movwf	(??_main+0)+0
  2456  0143  1683               	bsf	status, 5	;RP0=1, select bank1
  2457  0144  1303               	bcf	status, 6	;RP1=0, select bank1
  2458  0145  096D               	comf	(main@RT2P+1)^080h,w
  2459  0146  1283               	bcf	status, 5	;RP0=0, select bank0
  2460  0147  1303               	bcf	status, 6	;RP1=0, select bank0
  2461  0148  00E8               	movwf	((??_main+0)+0+1)
  2462  0149  0AE7               	incf	(??_main+0)+0,f
  2463  014A  1903               	skipnz
  2464  014B  0AE8               	incf	((??_main+0)+0+1),f
  2465  014C  0867               	movf	0+(??_main+0)+0,w
  2466  014D  3E90               	addlw	low(0190h)
  2467  014E  1683               	bsf	status, 5	;RP0=1, select bank1
  2468  014F  1303               	bcf	status, 6	;RP1=0, select bank1
  2469  0150  00EC               	movwf	(main@RT2P)^080h
  2470  0151  1283               	bcf	status, 5	;RP0=0, select bank0
  2471  0152  1303               	bcf	status, 6	;RP1=0, select bank0
  2472  0153  0868               	movf	1+(??_main+0)+0,w
  2473  0154  1803               	skipnc
  2474  0155  3E01               	addlw	1
  2475  0156  3E01               	addlw	high(0190h)
  2476  0157  1683               	bsf	status, 5	;RP0=1, select bank1
  2477  0158  1303               	bcf	status, 6	;RP1=0, select bank1
  2478  0159  00ED               	movwf	1+(main@RT2P)^080h
  2479                           	line	234
  2480                           	
  2481  015A                     l11743:	
  2482                           ;Main.c: 234: RT2P = RT2P * -1;
  2483  015A  09EC               	comf	(main@RT2P)^080h,f
  2484  015B  09ED               	comf	(main@RT2P+1)^080h,f
  2485  015C  0AEC               	incf	(main@RT2P)^080h,f
  2486  015D  1903               	skipnz
  2487  015E  0AED               	incf	(main@RT2P+1)^080h,f
  2488                           	line	235
  2489                           	
  2490  015F                     l11745:	
  2491                           ;Main.c: 235: direction1 = 0;
  2492  015F  01E3               	clrf	(main@direction1)^080h
  2493  0160  01E4               	clrf	(main@direction1+1)^080h
  2494  0161  2962               	goto	l11747
  2495                           	line	236
  2496                           	
  2497  0162                     l2245:	
  2498                           	line	237
  2499                           	
  2500  0162                     l11747:	
  2501                           ;Main.c: 236: }
  2502                           ;Main.c: 237: if (RT2P < 200 && RT2P >= 0)
  2503  0162  1683               	bsf	status, 5	;RP0=1, select bank1
  2504  0163  1303               	bcf	status, 6	;RP1=0, select bank1
  2505  0164  086D               	movf	(main@RT2P+1)^080h,w
  2506  0165  3A80               	xorlw	80h
  2507  0166  00FF               	movwf	btemp+1
  2508  0167  3080               	movlw	(high(0C8h))^80h
  2509  0168  027F               	subwf	btemp+1,w
  2510  0169  1D03               	skipz
  2511  016A  296D               	goto	u5725
  2512  016B  30C8               	movlw	low(0C8h)
  2513  016C  026C               	subwf	(main@RT2P)^080h,w
  2514  016D                     u5725:
  2515                           
  2516  016D  1803               	skipnc
  2517  016E  2970               	goto	u5721
  2518  016F  2971               	goto	u5720
  2519  0170                     u5721:
  2520  0170  297C               	goto	l11753
  2521  0171                     u5720:
  2522                           	
  2523  0171                     l11749:	
  2524  0171  1683               	bsf	status, 5	;RP0=1, select bank1
  2525  0172  1303               	bcf	status, 6	;RP1=0, select bank1
  2526  0173  1BED               	btfsc	(main@RT2P+1)^080h,7
  2527  0174  2976               	goto	u5731
  2528  0175  2977               	goto	u5730
  2529  0176                     u5731:
  2530  0176  297C               	goto	l11753
  2531  0177                     u5730:
  2532                           	line	239
  2533                           	
  2534  0177                     l11751:	
  2535                           ;Main.c: 238: {
  2536                           ;Main.c: 239: direction1 = 1;
  2537  0177  3001               	movlw	low(01h)
  2538  0178  00E3               	movwf	(main@direction1)^080h
  2539  0179  3000               	movlw	high(01h)
  2540  017A  00E4               	movwf	((main@direction1)^080h)+1
  2541  017B  297C               	goto	l11753
  2542                           	line	240
  2543                           	
  2544  017C                     l2246:	
  2545                           	line	241
  2546                           	
  2547  017C                     l11753:	
  2548                           ;Main.c: 240: }
  2549                           ;Main.c: 241: if (RT2P < 0 && RT2P >= -200)
  2550  017C  1683               	bsf	status, 5	;RP0=1, select bank1
  2551  017D  1303               	bcf	status, 6	;RP1=0, select bank1
  2552  017E  1FED               	btfss	(main@RT2P+1)^080h,7
  2553  017F  2981               	goto	u5741
  2554  0180  2982               	goto	u5740
  2555  0181                     u5741:
  2556  0181  2994               	goto	l11759
  2557  0182                     u5740:
  2558                           	
  2559  0182                     l11755:	
  2560  0182  086D               	movf	(main@RT2P+1)^080h,w
  2561  0183  3A80               	xorlw	80h
  2562  0184  00FF               	movwf	btemp+1
  2563  0185  307F               	movlw	(high(-200))^80h
  2564  0186  027F               	subwf	btemp+1,w
  2565  0187  1D03               	skipz
  2566  0188  298B               	goto	u5755
  2567  0189  3038               	movlw	low(-200)
  2568  018A  026C               	subwf	(main@RT2P)^080h,w
  2569  018B                     u5755:
  2570                           
  2571  018B  1C03               	skipc
  2572  018C  298E               	goto	u5751
  2573  018D  298F               	goto	u5750
  2574  018E                     u5751:
  2575  018E  2994               	goto	l11759
  2576  018F                     u5750:
  2577                           	line	243
  2578                           	
  2579  018F                     l11757:	
  2580                           ;Main.c: 242: {
  2581                           ;Main.c: 243: direction1 = 0;
  2582  018F  1683               	bsf	status, 5	;RP0=1, select bank1
  2583  0190  1303               	bcf	status, 6	;RP1=0, select bank1
  2584  0191  01E3               	clrf	(main@direction1)^080h
  2585  0192  01E4               	clrf	(main@direction1+1)^080h
  2586  0193  2994               	goto	l11759
  2587                           	line	244
  2588                           	
  2589  0194                     l2247:	
  2590                           	line	245
  2591                           	
  2592  0194                     l11759:	
  2593                           ;Main.c: 244: }
  2594                           ;Main.c: 245: if(RT2P < -200 || RT2P >500)
  2595  0194  1683               	bsf	status, 5	;RP0=1, select bank1
  2596  0195  1303               	bcf	status, 6	;RP1=0, select bank1
  2597  0196  086D               	movf	(main@RT2P+1)^080h,w
  2598  0197  3A80               	xorlw	80h
  2599  0198  00FF               	movwf	btemp+1
  2600  0199  307F               	movlw	(high(-200))^80h
  2601  019A  027F               	subwf	btemp+1,w
  2602  019B  1D03               	skipz
  2603  019C  299F               	goto	u5765
  2604  019D  3038               	movlw	low(-200)
  2605  019E  026C               	subwf	(main@RT2P)^080h,w
  2606  019F                     u5765:
  2607                           
  2608  019F  1C03               	skipc
  2609  01A0  29A2               	goto	u5761
  2610  01A1  29A3               	goto	u5760
  2611  01A2                     u5761:
  2612  01A2  2A9A               	goto	l11787
  2613  01A3                     u5760:
  2614                           	
  2615  01A3                     l11761:	
  2616  01A3  1683               	bsf	status, 5	;RP0=1, select bank1
  2617  01A4  1303               	bcf	status, 6	;RP1=0, select bank1
  2618  01A5  086D               	movf	(main@RT2P+1)^080h,w
  2619  01A6  3A80               	xorlw	80h
  2620  01A7  00FF               	movwf	btemp+1
  2621  01A8  3081               	movlw	(high(01F5h))^80h
  2622  01A9  027F               	subwf	btemp+1,w
  2623  01AA  1D03               	skipz
  2624  01AB  29AE               	goto	u5775
  2625  01AC  30F5               	movlw	low(01F5h)
  2626  01AD  026C               	subwf	(main@RT2P)^080h,w
  2627  01AE                     u5775:
  2628                           
  2629  01AE  1C03               	skipc
  2630  01AF  29B1               	goto	u5771
  2631  01B0  29B2               	goto	u5770
  2632  01B1                     u5771:
  2633  01B1  29B4               	goto	l11763
  2634  01B2                     u5770:
  2635  01B2  2A9A               	goto	l11787
  2636                           	
  2637  01B3                     l2250:	
  2638                           	line	247
  2639                           ;Main.c: 246: {
  2640                           ;Main.c: 247: break;
  2641  01B3  2A9A               	goto	l11787
  2642                           	line	248
  2643                           	
  2644  01B4                     l2248:	
  2645                           	line	250
  2646                           	
  2647  01B4                     l11763:	
  2648                           ;Main.c: 248: }
  2649                           ;Main.c: 250: rotate((400 - shortwall ), 0);
  2650  01B4  1683               	bsf	status, 5	;RP0=1, select bank1
  2651  01B5  1303               	bcf	status, 6	;RP1=0, select bank1
  2652  01B6  096A               	comf	(main@shortwall_3022)^080h,w
  2653  01B7  1283               	bcf	status, 5	;RP0=0, select bank0
  2654  01B8  1303               	bcf	status, 6	;RP1=0, select bank0
  2655  01B9  00E7               	movwf	(??_main+0)+0
  2656  01BA  1683               	bsf	status, 5	;RP0=1, select bank1
  2657  01BB  1303               	bcf	status, 6	;RP1=0, select bank1
  2658  01BC  096B               	comf	(main@shortwall_3022+1)^080h,w
  2659  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2660  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2661  01BF  00E8               	movwf	((??_main+0)+0+1)
  2662  01C0  0AE7               	incf	(??_main+0)+0,f
  2663  01C1  1903               	skipnz
  2664  01C2  0AE8               	incf	((??_main+0)+0+1),f
  2665  01C3  0867               	movf	0+(??_main+0)+0,w
  2666  01C4  3E90               	addlw	low(0190h)
  2667  01C5  00A3               	movwf	(?_rotate)
  2668  01C6  0868               	movf	1+(??_main+0)+0,w
  2669  01C7  1803               	skipnc
  2670  01C8  3E01               	addlw	1
  2671  01C9  3E01               	addlw	high(0190h)
  2672  01CA  00A4               	movwf	1+(?_rotate)
  2673  01CB  01A5               	clrf	0+(?_rotate)+02h
  2674  01CC  160A  118A  2610   	fcall	_rotate
              120A  118A         
  2675                           	line	251
  2676                           	
  2677  01D1                     l11765:	
  2678                           ;Main.c: 251: _delay((unsigned long)((100)*(20000000/4000.0)));
  2679                           	opt asmopt_off
  2680  01D1  3003               movlw  3
  2681  01D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2682  01D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2683  01D4  00E9               movwf	((??_main+0)+0+2),f
  2684  01D5  308A               movlw	138
  2685  01D6  00E8               movwf	((??_main+0)+0+1),f
  2686  01D7  3056               	movlw	86
  2687  01D8  00E7               movwf	((??_main+0)+0),f
  2688  01D9                     u5797:
  2689  01D9  0BE7               	decfsz	((??_main+0)+0),f
  2690  01DA  29D9               	goto	u5797
  2691  01DB  0BE8               	decfsz	((??_main+0)+0+1),f
  2692  01DC  29D9               	goto	u5797
  2693  01DD  0BE9               	decfsz	((??_main+0)+0+2),f
  2694  01DE  29D9               	goto	u5797
  2695  01DF  29E0               	nop2
  2696                           opt asmopt_on
  2697                           
  2698                           	line	254
  2699                           	
  2700  01E0                     l11767:	
  2701                           ;Main.c: 254: int RT2A= RT2P * (36.0/40.0);
  2702  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  2703  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  2704  01E2  086D               	movf	(main@RT2P+1)^080h,w
  2705  01E3  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  01E4  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  01E5  01B7               	clrf	(?___awtoft+1)
  2708  01E6  07B7               	addwf	(?___awtoft+1)
  2709  01E7  1683               	bsf	status, 5	;RP0=1, select bank1
  2710  01E8  1303               	bcf	status, 6	;RP1=0, select bank1
  2711  01E9  086C               	movf	(main@RT2P)^080h,w
  2712  01EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2713  01EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2714  01EC  01B6               	clrf	(?___awtoft)
  2715  01ED  07B6               	addwf	(?___awtoft)
  2716                           
  2717  01EE  160A  118A  2328   	fcall	___awtoft
              120A  118A         
  2718  01F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2719  01F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2720  01F5  0836               	movf	(0+(?___awtoft)),w
  2721  01F6  00C9               	movwf	0+(?___ftmul)+03h
  2722  01F7  0837               	movf	(1+(?___awtoft)),w
  2723  01F8  00CA               	movwf	1+(?___ftmul)+03h
  2724  01F9  0838               	movf	(2+(?___awtoft)),w
  2725  01FA  00CB               	movwf	2+(?___ftmul)+03h
  2726  01FB  3066               	movlw	0x66
  2727  01FC  00C6               	movwf	(?___ftmul)
  2728  01FD  3066               	movlw	0x66
  2729  01FE  00C7               	movwf	(?___ftmul+1)
  2730  01FF  303F               	movlw	0x3f
  2731  0200  00C8               	movwf	(?___ftmul+2)
  2732  0201  120A  158A  24F2   	fcall	___ftmul
              120A  118A         
  2733  0206  1283               	bcf	status, 5	;RP0=0, select bank0
  2734  0207  1303               	bcf	status, 6	;RP1=0, select bank0
  2735  0208  0846               	movf	(0+(?___ftmul)),w
  2736  0209  00A8               	movwf	(?___fttol)
  2737  020A  0847               	movf	(1+(?___ftmul)),w
  2738  020B  00A9               	movwf	(?___fttol+1)
  2739  020C  0848               	movf	(2+(?___ftmul)),w
  2740  020D  00AA               	movwf	(?___fttol+2)
  2741  020E  120A  158A  22D8   	fcall	___fttol
              120A  118A         
  2742  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  2743  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  2744  0215  0829               	movf	1+(((0+(?___fttol)))),w
  2745  0216  1683               	bsf	status, 5	;RP0=1, select bank1
  2746  0217  1303               	bcf	status, 6	;RP1=0, select bank1
  2747  0218  01E6               	clrf	(main@RT2A+1)^080h
  2748  0219  07E6               	addwf	(main@RT2A+1)^080h
  2749  021A  1283               	bcf	status, 5	;RP0=0, select bank0
  2750  021B  1303               	bcf	status, 6	;RP1=0, select bank0
  2751  021C  0828               	movf	0+(((0+(?___fttol)))),w
  2752  021D  1683               	bsf	status, 5	;RP0=1, select bank1
  2753  021E  1303               	bcf	status, 6	;RP1=0, select bank1
  2754  021F  01E5               	clrf	(main@RT2A)^080h
  2755  0220  07E5               	addwf	(main@RT2A)^080h
  2756                           
  2757                           	line	255
  2758                           	
  2759  0221                     l11769:	
  2760                           ;Main.c: 255: robotTurn(RT2A);
  2761  0221  0866               	movf	(main@RT2A+1)^080h,w
  2762  0222  1283               	bcf	status, 5	;RP0=0, select bank0
  2763  0223  1303               	bcf	status, 6	;RP1=0, select bank0
  2764  0224  01A3               	clrf	(?_robotTurn+1)
  2765  0225  07A3               	addwf	(?_robotTurn+1)
  2766  0226  1683               	bsf	status, 5	;RP0=1, select bank1
  2767  0227  1303               	bcf	status, 6	;RP1=0, select bank1
  2768  0228  0865               	movf	(main@RT2A)^080h,w
  2769  0229  1283               	bcf	status, 5	;RP0=0, select bank0
  2770  022A  1303               	bcf	status, 6	;RP1=0, select bank0
  2771  022B  01A2               	clrf	(?_robotTurn)
  2772  022C  07A2               	addwf	(?_robotTurn)
  2773                           
  2774  022D  120A  158A  212E   	fcall	_robotTurn
              120A  118A         
  2775                           	line	256
  2776                           	
  2777  0232                     l11771:	
  2778                           ;Main.c: 256: _delay((unsigned long)((100)*(20000000/4000.0)));
  2779                           	opt asmopt_off
  2780  0232  3003               movlw  3
  2781  0233  1283               	bcf	status, 5	;RP0=0, select bank0
  2782  0234  1303               	bcf	status, 6	;RP1=0, select bank0
  2783  0235  00E9               movwf	((??_main+0)+0+2),f
  2784  0236  308A               movlw	138
  2785  0237  00E8               movwf	((??_main+0)+0+1),f
  2786  0238  3056               	movlw	86
  2787  0239  00E7               movwf	((??_main+0)+0),f
  2788  023A                     u5807:
  2789  023A  0BE7               	decfsz	((??_main+0)+0),f
  2790  023B  2A3A               	goto	u5807
  2791  023C  0BE8               	decfsz	((??_main+0)+0+1),f
  2792  023D  2A3A               	goto	u5807
  2793  023E  0BE9               	decfsz	((??_main+0)+0+2),f
  2794  023F  2A3A               	goto	u5807
  2795  0240  2A41               	nop2
  2796                           opt asmopt_on
  2797                           
  2798                           	line	257
  2799                           	
  2800  0241                     l11773:	
  2801                           ;Main.c: 257: rotate(shortwall,0);
  2802  0241  1683               	bsf	status, 5	;RP0=1, select bank1
  2803  0242  1303               	bcf	status, 6	;RP1=0, select bank1
  2804  0243  086B               	movf	(main@shortwall_3022+1)^080h,w
  2805  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  2806  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  2807  0246  01A4               	clrf	(?_rotate+1)
  2808  0247  07A4               	addwf	(?_rotate+1)
  2809  0248  1683               	bsf	status, 5	;RP0=1, select bank1
  2810  0249  1303               	bcf	status, 6	;RP1=0, select bank1
  2811  024A  086A               	movf	(main@shortwall_3022)^080h,w
  2812  024B  1283               	bcf	status, 5	;RP0=0, select bank0
  2813  024C  1303               	bcf	status, 6	;RP1=0, select bank0
  2814  024D  01A3               	clrf	(?_rotate)
  2815  024E  07A3               	addwf	(?_rotate)
  2816                           
  2817  024F  01A5               	clrf	0+(?_rotate)+02h
  2818  0250  160A  118A  2610   	fcall	_rotate
              120A  118A         
  2819                           	line	258
  2820                           	
  2821  0255                     l11775:	
  2822                           ;Main.c: 258: _delay((unsigned long)((100)*(20000000/4000.0)));
  2823                           	opt asmopt_off
  2824  0255  3003               movlw  3
  2825  0256  1283               	bcf	status, 5	;RP0=0, select bank0
  2826  0257  1303               	bcf	status, 6	;RP1=0, select bank0
  2827  0258  00E9               movwf	((??_main+0)+0+2),f
  2828  0259  308A               movlw	138
  2829  025A  00E8               movwf	((??_main+0)+0+1),f
  2830  025B  3056               	movlw	86
  2831  025C  00E7               movwf	((??_main+0)+0),f
  2832  025D                     u5817:
  2833  025D  0BE7               	decfsz	((??_main+0)+0),f
  2834  025E  2A5D               	goto	u5817
  2835  025F  0BE8               	decfsz	((??_main+0)+0+1),f
  2836  0260  2A5D               	goto	u5817
  2837  0261  0BE9               	decfsz	((??_main+0)+0+2),f
  2838  0262  2A5D               	goto	u5817
  2839  0263  2A64               	nop2
  2840                           opt asmopt_on
  2841                           
  2842                           	line	259
  2843                           	
  2844  0264                     l11777:	
  2845                           ;Main.c: 259: robotMoveSpeed(500, 200);
  2846  0264  30F4               	movlw	low(01F4h)
  2847  0265  1283               	bcf	status, 5	;RP0=0, select bank0
  2848  0266  1303               	bcf	status, 6	;RP1=0, select bank0
  2849  0267  00DB               	movwf	(?_robotMoveSpeed)
  2850  0268  3001               	movlw	high(01F4h)
  2851  0269  00DC               	movwf	((?_robotMoveSpeed))+1
  2852  026A  30C8               	movlw	low(0C8h)
  2853  026B  00DD               	movwf	0+(?_robotMoveSpeed)+02h
  2854  026C  3000               	movlw	high(0C8h)
  2855  026D  00DE               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2856  026E  120A  118A  2629   	fcall	_robotMoveSpeed
              120A  118A         
  2857  0273  2A74               	goto	l11779
  2858                           	line	260
  2859                           	
  2860  0274                     l2240:	
  2861                           	line	216
  2862                           	
  2863  0274                     l11779:	
  2864  0274  1683               	bsf	status, 5	;RP0=1, select bank1
  2865  0275  1303               	bcf	status, 6	;RP1=0, select bank1
  2866  0276  084C               	movf	(_ROBOTerror)^080h,w
  2867  0277  1D03               	skipz
  2868  0278  2A7A               	goto	u5780
  2869  0279  28A9               	goto	l11715
  2870  027A                     u5780:
  2871  027A  2A9A               	goto	l11787
  2872                           	
  2873  027B                     l2251:	
  2874                           	line	262
  2875                           ;Main.c: 260: }
  2876                           ;Main.c: 262: break;
  2877  027B  2A9A               	goto	l11787
  2878                           	line	264
  2879                           ;Main.c: 264: case 5:
  2880                           	
  2881  027C                     l2252:	
  2882                           	line	265
  2883                           	
  2884  027C                     l11781:	
  2885                           ;Main.c: 265: ChargeMode();
  2886  027C  160A  118A  2533   	fcall	_ChargeMode
              120A  118A         
  2887                           	line	266
  2888                           ;Main.c: 266: break;
  2889  0281  2A9A               	goto	l11787
  2890                           	line	267
  2891                           ;Main.c: 267: default:
  2892                           	
  2893  0282                     l2253:	
  2894                           	line	269
  2895                           ;Main.c: 269: break;
  2896  0282  2A9A               	goto	l11787
  2897                           	line	270
  2898                           	
  2899  0283                     l11783:	
  2900                           ;Main.c: 270: }
  2901  0283  2A9A               	goto	l11787
  2902                           	line	198
  2903                           	
  2904  0284                     l2233:	
  2905                           	
  2906  0284                     l11785:	
  2907  0284  1683               	bsf	status, 5	;RP0=1, select bank1
  2908  0285  1303               	bcf	status, 6	;RP1=0, select bank1
  2909  0286  0869               	movf	(main@choice)^080h,w
  2910                           	; Switch size 1, requested type "space"
  2911                           ; Number of cases is 6, Range of values is 0 to 5
  2912                           ; switch strategies available:
  2913                           ; Name         Instructions Cycles
  2914                           ; simple_byte           19    10 (average)
  2915                           ; direct_byte           26     8 (fixed)
  2916                           ; jumptable            260     6 (fixed)
  2917                           ; rangetable            10     6 (fixed)
  2918                           ; spacedrange           18     9 (fixed)
  2919                           ; locatedrange           6     3 (fixed)
  2920                           ;	Chosen strategy is simple_byte
  2921                           
  2922                           	opt asmopt_off
  2923  0287  3A00               	xorlw	0^0	; case 0
  2924  0288  1903               	skipnz
  2925  0289  284F               	goto	l11703
  2926  028A  3A01               	xorlw	1^0	; case 1
  2927  028B  1903               	skipnz
  2928  028C  2855               	goto	l11705
  2929  028D  3A03               	xorlw	2^1	; case 2
  2930  028E  1903               	skipnz
  2931  028F  2884               	goto	l11709
  2932  0290  3A01               	xorlw	3^2	; case 3
  2933  0291  1903               	skipnz
  2934  0292  2894               	goto	l11711
  2935  0293  3A07               	xorlw	4^3	; case 4
  2936  0294  1903               	skipnz
  2937  0295  28A4               	goto	l11713
  2938  0296  3A01               	xorlw	5^4	; case 5
  2939  0297  1903               	skipnz
  2940  0298  2A7C               	goto	l11781
  2941  0299  2A9A               	goto	l11787
  2942                           	opt asmopt_on
  2943                           
  2944                           	line	270
  2945                           	
  2946  029A                     l2235:	
  2947                           	line	271
  2948                           	
  2949  029A                     l11787:	
  2950                           ;Main.c: 271: choice = 255;
  2951  029A  30FF               	movlw	(0FFh)
  2952  029B  1283               	bcf	status, 5	;RP0=0, select bank0
  2953  029C  1303               	bcf	status, 6	;RP1=0, select bank0
  2954  029D  00E7               	movwf	(??_main+0)+0
  2955  029E  0867               	movf	(??_main+0)+0,w
  2956  029F  1683               	bsf	status, 5	;RP0=1, select bank1
  2957  02A0  1303               	bcf	status, 6	;RP1=0, select bank1
  2958  02A1  00E9               	movwf	(main@choice)^080h
  2959  02A2  2825               	goto	l11687
  2960                           	line	272
  2961                           	
  2962  02A3                     l2254:	
  2963                           	line	180
  2964  02A3  2825               	goto	l11687
  2965                           	
  2966  02A4                     l2255:	
  2967                           	line	273
  2968                           	
  2969  02A4                     l2256:	
  2970                           	global	start
  2971  02A4  120A  118A  2812   	ljmp	start
  2972                           	opt stack 0
  2973                           GLOBAL	__end_of_main
  2974  02A7                     	__end_of_main:
  2975 ;; =============== function _main ends ============
  2976                           
  2977                           	signat	_main,88
  2978                           	global	_ChargeMode
  2979                           psect	text1117,local,class=CODE,delta=2
  2980                           global __ptext1117
  2981  1533                     __ptext1117:
  2982                           
  2983 ;; *************** function _ChargeMode *****************
  2984 ;; Defined at:
  2985 ;;		line 319 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;		None               void
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0
  3001 ;;      Temps:          0       1       0       0       0
  3002 ;;      Totals:         0       1       0       0       0
  3003 ;;Total ram usage:        1 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    6
  3006 ;; This function calls:
  3007 ;;		_ser_putch
  3008 ;;		_UpdateDisplay
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           psect	text1117
  3014                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3015                           	line	319
  3016                           	global	__size_of_ChargeMode
  3017  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3018                           	
  3019  1533                     _ChargeMode:	
  3020                           	opt	stack 1
  3021                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3022                           	line	321
  3023                           	
  3024  1533                     l11659:	
  3025                           ;Main.c: 321: currentMenu = 2;
  3026  1533  3002               	movlw	(02h)
  3027  1534  1283               	bcf	status, 5	;RP0=0, select bank0
  3028  1535  1303               	bcf	status, 6	;RP1=0, select bank0
  3029  1536  00D9               	movwf	(??_ChargeMode+0)+0
  3030  1537  0859               	movf	(??_ChargeMode+0)+0,w
  3031  1538  1683               	bsf	status, 5	;RP0=1, select bank1
  3032  1539  1303               	bcf	status, 6	;RP1=0, select bank1
  3033  153A  00D0               	movwf	(_currentMenu)^080h	;volatile
  3034                           	line	322
  3035                           	
  3036  153B                     l11661:	
  3037                           ;Main.c: 322: ser_putch(128);
  3038  153B  3080               	movlw	(080h)
  3039  153C  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  3040  1541  2D42               	goto	l11663
  3041                           	line	324
  3042                           ;Main.c: 324: while (1)
  3043                           	
  3044  1542                     l2274:	
  3045                           	line	326
  3046                           	
  3047  1542                     l11663:	
  3048                           ;Main.c: 325: {
  3049                           ;Main.c: 326: if (RTC_FLAG_250MS == 1)
  3050  1542  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3051  1543  2D45               	goto	u5631
  3052  1544  2D46               	goto	u5630
  3053  1545                     u5631:
  3054  1545  2D65               	goto	l11679
  3055  1546                     u5630:
  3056                           	line	328
  3057                           	
  3058  1546                     l11665:	
  3059                           ;Main.c: 327: {
  3060                           ;Main.c: 328: RTC_FLAG_250MS = 0;
  3061  1546  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3062                           	line	329
  3063                           	
  3064  1547                     l11667:	
  3065                           ;Main.c: 329: UpdateDisplay();
  3066  1547  120A  118A  24CA   	fcall	_UpdateDisplay
              160A  118A         
  3067  154C  2D65               	goto	l11679
  3068                           	line	330
  3069                           	
  3070  154D                     l2275:	
  3071                           	line	331
  3072                           ;Main.c: 330: }
  3073                           ;Main.c: 331: switch (buttonPressed)
  3074  154D  2D65               	goto	l11679
  3075                           	line	333
  3076                           ;Main.c: 332: {
  3077                           ;Main.c: 333: case 1:
  3078                           	
  3079  154E                     l2277:	
  3080                           	line	334
  3081                           ;Main.c: 334: buttonPressed = 0;
  3082  154E  01FD               	clrf	(_buttonPressed)	;volatile
  3083                           	line	335
  3084                           ;Main.c: 335: break;
  3085  154F  2D42               	goto	l11663
  3086                           	line	336
  3087                           ;Main.c: 336: case 2:
  3088                           	
  3089  1550                     l2279:	
  3090                           	line	337
  3091                           ;Main.c: 337: buttonPressed = 0;
  3092  1550  01FD               	clrf	(_buttonPressed)	;volatile
  3093                           	line	338
  3094                           ;Main.c: 338: break;
  3095  1551  2D42               	goto	l11663
  3096                           	line	339
  3097                           ;Main.c: 339: case 3:
  3098                           	
  3099  1552                     l2280:	
  3100                           	line	340
  3101                           ;Main.c: 340: buttonPressed = 0;
  3102  1552  01FD               	clrf	(_buttonPressed)	;volatile
  3103                           	line	341
  3104                           ;Main.c: 341: break;
  3105  1553  2D42               	goto	l11663
  3106                           	line	342
  3107                           ;Main.c: 342: case 4:
  3108                           	
  3109  1554                     l2281:	
  3110                           	line	343
  3111                           ;Main.c: 343: buttonPressed = 0;
  3112  1554  01FD               	clrf	(_buttonPressed)	;volatile
  3113                           	line	344
  3114                           ;Main.c: 344: break;
  3115  1555  2D42               	goto	l11663
  3116                           	line	345
  3117                           ;Main.c: 345: case 5:
  3118                           	
  3119  1556                     l2282:	
  3120                           	line	346
  3121                           	
  3122  1556                     l11669:	
  3123                           ;Main.c: 346: ser_putch(132);
  3124  1556  3084               	movlw	(084h)
  3125  1557  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  3126                           	line	347
  3127                           	
  3128  155C                     l11671:	
  3129                           ;Main.c: 347: buttonPressed = 0;
  3130  155C  01FD               	clrf	(_buttonPressed)	;volatile
  3131                           	line	348
  3132                           	
  3133  155D                     l11673:	
  3134                           ;Main.c: 348: currentMenu = 0;
  3135  155D  1683               	bsf	status, 5	;RP0=1, select bank1
  3136  155E  1303               	bcf	status, 6	;RP1=0, select bank1
  3137  155F  01D0               	clrf	(_currentMenu)^080h	;volatile
  3138  1560  2D78               	goto	l2283
  3139                           	line	349
  3140                           	
  3141  1561                     l11675:	
  3142                           ;Main.c: 349: return;
  3143  1561  2D78               	goto	l2283
  3144                           	line	350
  3145                           ;Main.c: 350: default:
  3146                           	
  3147  1562                     l2284:	
  3148                           	line	351
  3149                           ;Main.c: 351: buttonPressed = 0;
  3150  1562  01FD               	clrf	(_buttonPressed)	;volatile
  3151                           	line	352
  3152                           ;Main.c: 352: break;
  3153  1563  2D42               	goto	l11663
  3154                           	line	353
  3155                           	
  3156  1564                     l11677:	
  3157                           ;Main.c: 353: }
  3158  1564  2D42               	goto	l11663
  3159                           	line	331
  3160                           	
  3161  1565                     l2276:	
  3162                           	
  3163  1565                     l11679:	
  3164  1565  087D               	movf	(_buttonPressed),w	;volatile
  3165                           	; Switch size 1, requested type "space"
  3166                           ; Number of cases is 5, Range of values is 1 to 5
  3167                           ; switch strategies available:
  3168                           ; Name         Instructions Cycles
  3169                           ; simple_byte           16     9 (average)
  3170                           ; direct_byte           26    11 (fixed)
  3171                           ; jumptable            263     9 (fixed)
  3172                           ;	Chosen strategy is simple_byte
  3173                           
  3174                           	opt asmopt_off
  3175  1566  3A01               	xorlw	1^0	; case 1
  3176  1567  1903               	skipnz
  3177  1568  2D4E               	goto	l2277
  3178  1569  3A03               	xorlw	2^1	; case 2
  3179  156A  1903               	skipnz
  3180  156B  2D50               	goto	l2279
  3181  156C  3A01               	xorlw	3^2	; case 3
  3182  156D  1903               	skipnz
  3183  156E  2D52               	goto	l2280
  3184  156F  3A07               	xorlw	4^3	; case 4
  3185  1570  1903               	skipnz
  3186  1571  2D54               	goto	l2281
  3187  1572  3A01               	xorlw	5^4	; case 5
  3188  1573  1903               	skipnz
  3189  1574  2D56               	goto	l11669
  3190  1575  2D62               	goto	l2284
  3191                           	opt asmopt_on
  3192                           
  3193                           	line	353
  3194                           	
  3195  1576                     l2278:	
  3196  1576  2D42               	goto	l11663
  3197                           	line	354
  3198                           	
  3199  1577                     l2285:	
  3200                           	line	324
  3201  1577  2D42               	goto	l11663
  3202                           	
  3203  1578                     l2286:	
  3204                           	line	355
  3205                           	
  3206  1578                     l2283:	
  3207  1578  0008               	return
  3208                           	opt stack 0
  3209                           GLOBAL	__end_of_ChargeMode
  3210  1579                     	__end_of_ChargeMode:
  3211 ;; =============== function _ChargeMode ends ============
  3212                           
  3213                           	signat	_ChargeMode,88
  3214                           	global	_robotTurnSpeed
  3215                           psect	text1118,local,class=CODE,delta=2
  3216                           global __ptext1118
  3217  0A3A                     __ptext1118:
  3218                           
  3219 ;; *************** function _robotTurnSpeed *****************
  3220 ;; Defined at:
  3221 ;;		line 183 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  angle           2   57[BANK0 ] int 
  3224 ;;  speed           2   59[BANK0 ] int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  temp1           2   64[BANK0 ] int 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;		None               void
  3229 ;; Registers used:
  3230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       4       0       0       0
  3237 ;;      Locals:         0       2       0       0       0
  3238 ;;      Temps:          0       3       0       0       0
  3239 ;;      Totals:         0       9       0       0       0
  3240 ;;Total ram usage:        9 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    6
  3243 ;; This function calls:
  3244 ;;		_robotTurn
  3245 ;;		_robot_read
  3246 ;;		_UpdateDisplay
  3247 ;;		_abs
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           psect	text1118
  3253                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3254                           	line	183
  3255                           	global	__size_of_robotTurnSpeed
  3256  009E                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  3257                           	
  3258  0A3A                     _robotTurnSpeed:	
  3259                           	opt	stack 1
  3260                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3261                           	line	184
  3262                           	
  3263  0A3A                     l11633:	
  3264                           ;robot.c: 184: angleTurned = 0;
  3265  0A3A  1683               	bsf	status, 5	;RP0=1, select bank1
  3266  0A3B  1303               	bcf	status, 6	;RP1=0, select bank1
  3267  0A3C  01B6               	clrf	(_angleTurned)^080h
  3268  0A3D  01B7               	clrf	(_angleTurned+1)^080h
  3269                           	line	185
  3270                           ;robot.c: 185: int temp1 = 0;
  3271  0A3E  1283               	bcf	status, 5	;RP0=0, select bank0
  3272  0A3F  1303               	bcf	status, 6	;RP1=0, select bank0
  3273  0A40  01E0               	clrf	(robotTurnSpeed@temp1)
  3274  0A41  01E1               	clrf	(robotTurnSpeed@temp1+1)
  3275                           	line	187
  3276                           	
  3277  0A42                     l11635:	
  3278                           ;robot.c: 187: robotTurn(angle);
  3279  0A42  085A               	movf	(robotTurnSpeed@angle+1),w
  3280  0A43  01A3               	clrf	(?_robotTurn+1)
  3281  0A44  07A3               	addwf	(?_robotTurn+1)
  3282  0A45  0859               	movf	(robotTurnSpeed@angle),w
  3283  0A46  01A2               	clrf	(?_robotTurn)
  3284  0A47  07A2               	addwf	(?_robotTurn)
  3285                           
  3286  0A48  120A  158A  212E   	fcall	_robotTurn
              120A  158A         
  3287                           	line	190
  3288                           ;robot.c: 190: while (abs(angleTurned) < abs(angle))
  3289  0A4D  2A97               	goto	l11655
  3290                           	
  3291  0A4E                     l6042:	
  3292                           	line	192
  3293                           	
  3294  0A4E                     l11637:	
  3295                           ;robot.c: 191: {
  3296                           ;robot.c: 192: robot_read(1);
  3297  0A4E  3001               	movlw	(01h)
  3298  0A4F  120A  158A  26E0   	fcall	_robot_read
              120A  158A         
  3299                           	line	193
  3300                           	
  3301  0A54                     l11639:	
  3302                           ;robot.c: 193: if (BumpSensors || VwallSensor)
  3303  0A54  1683               	bsf	status, 5	;RP0=1, select bank1
  3304  0A55  1303               	bcf	status, 6	;RP1=0, select bank1
  3305  0A56  08C6               	movf	(_BumpSensors)^080h,f
  3306  0A57  1D03               	skipz	;volatile
  3307  0A58  2A5A               	goto	u5601
  3308  0A59  2A5B               	goto	u5600
  3309  0A5A                     u5601:
  3310  0A5A  2A60               	goto	l11643
  3311  0A5B                     u5600:
  3312                           	
  3313  0A5B                     l11641:	
  3314  0A5B  084F               	movf	(_VwallSensor)^080h,w	;volatile
  3315  0A5C  1D03               	skipz
  3316  0A5D  2A5F               	goto	u5610
  3317  0A5E  2A64               	goto	l11645
  3318  0A5F                     u5610:
  3319  0A5F  2A60               	goto	l11643
  3320                           	
  3321  0A60                     l6045:	
  3322                           	line	195
  3323                           	
  3324  0A60                     l11643:	
  3325                           ;robot.c: 194: {
  3326                           ;robot.c: 195: ROBOTerror = 1;
  3327  0A60  01CC               	clrf	(_ROBOTerror)^080h
  3328  0A61  1403               	bsf	status,0
  3329  0A62  0DCC               	rlf	(_ROBOTerror)^080h,f
  3330                           	line	196
  3331                           ;robot.c: 196: break;
  3332  0A63  2ACC               	goto	l11657
  3333                           	line	197
  3334                           	
  3335  0A64                     l6043:	
  3336                           	line	198
  3337                           	
  3338  0A64                     l11645:	
  3339                           ;robot.c: 197: }
  3340                           ;robot.c: 198: temp1 = AngleHighByte;
  3341  0A64  0844               	movf	(_AngleHighByte)^080h,w	;volatile
  3342  0A65  1283               	bcf	status, 5	;RP0=0, select bank0
  3343  0A66  1303               	bcf	status, 6	;RP1=0, select bank0
  3344  0A67  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3345  0A68  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3346  0A69  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3347  0A6A  00E0               	movwf	(robotTurnSpeed@temp1)
  3348  0A6B  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3349  0A6C  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3350                           	line	199
  3351                           	
  3352  0A6D                     l11647:	
  3353                           ;robot.c: 199: temp1 = temp1 << 8;
  3354  0A6D  0861               	movf	(robotTurnSpeed@temp1+1),w
  3355  0A6E  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  3356  0A6F  0860               	movf	(robotTurnSpeed@temp1),w
  3357  0A70  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3358  0A71  085D               	movf	(??_robotTurnSpeed+0)+0,w
  3359  0A72  00DE               	movwf	(??_robotTurnSpeed+0)+1
  3360  0A73  01DD               	clrf	(??_robotTurnSpeed+0)+0
  3361  0A74  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3362  0A75  00E0               	movwf	(robotTurnSpeed@temp1)
  3363  0A76  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3364  0A77  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3365                           	line	200
  3366                           	
  3367  0A78                     l11649:	
  3368                           ;robot.c: 200: temp1 += AngleLowByte;
  3369  0A78  1683               	bsf	status, 5	;RP0=1, select bank1
  3370  0A79  1303               	bcf	status, 6	;RP1=0, select bank1
  3371  0A7A  0845               	movf	(_AngleLowByte)^080h,w	;volatile
  3372  0A7B  1283               	bcf	status, 5	;RP0=0, select bank0
  3373  0A7C  1303               	bcf	status, 6	;RP1=0, select bank0
  3374  0A7D  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3375  0A7E  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3376  0A7F  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3377  0A80  07E0               	addwf	(robotTurnSpeed@temp1),f
  3378  0A81  1803               	skipnc
  3379  0A82  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  3380  0A83  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3381  0A84  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  3382                           	line	201
  3383                           	
  3384  0A85                     l11651:	
  3385                           ;robot.c: 201: angleTurned += temp1;
  3386  0A85  0860               	movf	(robotTurnSpeed@temp1),w
  3387  0A86  1683               	bsf	status, 5	;RP0=1, select bank1
  3388  0A87  1303               	bcf	status, 6	;RP1=0, select bank1
  3389  0A88  07B6               	addwf	(_angleTurned)^080h,f
  3390  0A89  1803               	skipnc
  3391  0A8A  0AB7               	incf	(_angleTurned+1)^080h,f
  3392  0A8B  1283               	bcf	status, 5	;RP0=0, select bank0
  3393  0A8C  1303               	bcf	status, 6	;RP1=0, select bank0
  3394  0A8D  0861               	movf	(robotTurnSpeed@temp1+1),w
  3395  0A8E  1683               	bsf	status, 5	;RP0=1, select bank1
  3396  0A8F  1303               	bcf	status, 6	;RP1=0, select bank1
  3397  0A90  07B7               	addwf	(_angleTurned+1)^080h,f
  3398                           	line	202
  3399                           	
  3400  0A91                     l11653:	
  3401                           ;robot.c: 202: UpdateDisplay();
  3402  0A91  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3403  0A96  2A97               	goto	l11655
  3404                           	line	203
  3405                           	
  3406  0A97                     l6041:	
  3407                           	line	190
  3408                           	
  3409  0A97                     l11655:	
  3410  0A97  1683               	bsf	status, 5	;RP0=1, select bank1
  3411  0A98  1303               	bcf	status, 6	;RP1=0, select bank1
  3412  0A99  0837               	movf	(_angleTurned+1)^080h,w
  3413  0A9A  1283               	bcf	status, 5	;RP0=0, select bank0
  3414  0A9B  1303               	bcf	status, 6	;RP1=0, select bank0
  3415  0A9C  01A7               	clrf	(?_abs+1)
  3416  0A9D  07A7               	addwf	(?_abs+1)
  3417  0A9E  1683               	bsf	status, 5	;RP0=1, select bank1
  3418  0A9F  1303               	bcf	status, 6	;RP1=0, select bank1
  3419  0AA0  0836               	movf	(_angleTurned)^080h,w
  3420  0AA1  1283               	bcf	status, 5	;RP0=0, select bank0
  3421  0AA2  1303               	bcf	status, 6	;RP1=0, select bank0
  3422  0AA3  01A6               	clrf	(?_abs)
  3423  0AA4  07A6               	addwf	(?_abs)
  3424                           
  3425  0AA5  160A  118A  2439   	fcall	_abs
              120A  158A         
  3426  0AAA  1283               	bcf	status, 5	;RP0=0, select bank0
  3427  0AAB  1303               	bcf	status, 6	;RP1=0, select bank0
  3428  0AAC  0826               	movf	(0+?_abs),w
  3429  0AAD  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3430  0AAE  0827               	movf	(1+?_abs),w
  3431  0AAF  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  3432  0AB0  085A               	movf	(robotTurnSpeed@angle+1),w
  3433  0AB1  01A7               	clrf	(?_abs+1)
  3434  0AB2  07A7               	addwf	(?_abs+1)
  3435  0AB3  0859               	movf	(robotTurnSpeed@angle),w
  3436  0AB4  01A6               	clrf	(?_abs)
  3437  0AB5  07A6               	addwf	(?_abs)
  3438                           
  3439  0AB6  160A  118A  2439   	fcall	_abs
              120A  158A         
  3440  0ABB  1283               	bcf	status, 5	;RP0=0, select bank0
  3441  0ABC  1303               	bcf	status, 6	;RP1=0, select bank0
  3442  0ABD  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3443  0ABE  3A80               	xorlw	80h
  3444  0ABF  00DF               	movwf	(??_robotTurnSpeed+2)+0
  3445  0AC0  0827               	movf	(1+(?_abs)),w
  3446  0AC1  3A80               	xorlw	80h
  3447  0AC2  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  3448  0AC3  1D03               	skipz
  3449  0AC4  2AC7               	goto	u5625
  3450  0AC5  0826               	movf	(0+(?_abs)),w
  3451  0AC6  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  3452  0AC7                     u5625:
  3453                           
  3454  0AC7  1C03               	skipc
  3455  0AC8  2ACA               	goto	u5621
  3456  0AC9  2ACB               	goto	u5620
  3457  0ACA                     u5621:
  3458  0ACA  2A4E               	goto	l11637
  3459  0ACB                     u5620:
  3460  0ACB  2ACC               	goto	l11657
  3461                           	
  3462  0ACC                     l6046:	
  3463                           	line	205
  3464                           	
  3465  0ACC                     l11657:	
  3466                           ;robot.c: 203: }
  3467                           ;robot.c: 205: robotTurn(0);
  3468  0ACC  3000               	movlw	low(0)
  3469  0ACD  1283               	bcf	status, 5	;RP0=0, select bank0
  3470  0ACE  1303               	bcf	status, 6	;RP1=0, select bank0
  3471  0ACF  00A2               	movwf	(?_robotTurn)
  3472  0AD0  3000               	movlw	high(0)
  3473  0AD1  00A3               	movwf	((?_robotTurn))+1
  3474  0AD2  120A  158A  212E   	fcall	_robotTurn
              120A  158A         
  3475                           	line	206
  3476                           	
  3477  0AD7                     l6047:	
  3478  0AD7  0008               	return
  3479                           	opt stack 0
  3480                           GLOBAL	__end_of_robotTurnSpeed
  3481  0AD8                     	__end_of_robotTurnSpeed:
  3482 ;; =============== function _robotTurnSpeed ends ============
  3483                           
  3484                           	signat	_robotTurnSpeed,8312
  3485                           	global	_robotMoveSpeed
  3486                           psect	text1119,local,class=CODE,delta=2
  3487                           global __ptext1119
  3488  0629                     __ptext1119:
  3489                           
  3490 ;; *************** function _robotMoveSpeed *****************
  3491 ;; Defined at:
  3492 ;;		line 147 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  distance        2   59[BANK0 ] int 
  3495 ;;  speed           2   61[BANK0 ] int 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  remaining       3   66[BANK0 ] float 
  3498 ;;  temp1           2   69[BANK0 ] int 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         0       4       0       0       0
  3509 ;;      Locals:         0       5       0       0       0
  3510 ;;      Temps:          0       3       0       0       0
  3511 ;;      Totals:         0      12       0       0       0
  3512 ;;Total ram usage:       12 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    6
  3515 ;; This function calls:
  3516 ;;		_RobotDrive
  3517 ;;		_robot_read
  3518 ;;		_UpdateDisplay
  3519 ;;		_abs
  3520 ;;		___awtoft
  3521 ;;		___ftge
  3522 ;;		___ftdiv
  3523 ;;		___ftmul
  3524 ;;		___fttol
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           psect	text1119
  3530                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3531                           	line	147
  3532                           	global	__size_of_robotMoveSpeed
  3533  014B                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3534                           	
  3535  0629                     _robotMoveSpeed:	
  3536                           	opt	stack 1
  3537                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3538                           	line	148
  3539                           	
  3540  0629                     l11599:	
  3541                           ;robot.c: 148: distTravelled = 0;
  3542  0629  1683               	bsf	status, 5	;RP0=1, select bank1
  3543  062A  1303               	bcf	status, 6	;RP1=0, select bank1
  3544  062B  01B8               	clrf	(_distTravelled)^080h
  3545  062C  01B9               	clrf	(_distTravelled+1)^080h
  3546                           	line	150
  3547                           	
  3548  062D                     l11601:	
  3549                           ;robot.c: 149: int temp1;
  3550                           ;robot.c: 150: RobotDrive(speed);
  3551  062D  1283               	bcf	status, 5	;RP0=0, select bank0
  3552  062E  1303               	bcf	status, 6	;RP1=0, select bank0
  3553  062F  085E               	movf	(robotMoveSpeed@speed+1),w
  3554  0630  01D7               	clrf	(?_RobotDrive+1)
  3555  0631  07D7               	addwf	(?_RobotDrive+1)
  3556  0632  085D               	movf	(robotMoveSpeed@speed),w
  3557  0633  01D6               	clrf	(?_RobotDrive)
  3558  0634  07D6               	addwf	(?_RobotDrive)
  3559                           
  3560  0635  160A  118A  2380   	fcall	_RobotDrive
              120A  118A         
  3561                           	line	153
  3562                           ;robot.c: 153: while (abs(distTravelled) < abs(distance))
  3563  063A  2F33               	goto	l11629
  3564                           	
  3565  063B                     l6032:	
  3566                           	line	155
  3567                           	
  3568  063B                     l11603:	
  3569                           ;robot.c: 154: {
  3570                           ;robot.c: 155: robot_read(0);
  3571  063B  3000               	movlw	(0)
  3572  063C  120A  158A  26E0   	fcall	_robot_read
              120A  118A         
  3573                           	line	156
  3574                           	
  3575  0641                     l11605:	
  3576                           ;robot.c: 156: if (BumpSensors || VwallSensor)
  3577  0641  1683               	bsf	status, 5	;RP0=1, select bank1
  3578  0642  1303               	bcf	status, 6	;RP1=0, select bank1
  3579  0643  08C6               	movf	(_BumpSensors)^080h,f
  3580  0644  1D03               	skipz	;volatile
  3581  0645  2E47               	goto	u5561
  3582  0646  2E48               	goto	u5560
  3583  0647                     u5561:
  3584  0647  2E4D               	goto	l11609
  3585  0648                     u5560:
  3586                           	
  3587  0648                     l11607:	
  3588  0648  084F               	movf	(_VwallSensor)^080h,w	;volatile
  3589  0649  1D03               	skipz
  3590  064A  2E4C               	goto	u5570
  3591  064B  2E51               	goto	l11611
  3592  064C                     u5570:
  3593  064C  2E4D               	goto	l11609
  3594                           	
  3595  064D                     l6035:	
  3596                           	line	158
  3597                           	
  3598  064D                     l11609:	
  3599                           ;robot.c: 157: {
  3600                           ;robot.c: 158: ROBOTerror = 1;
  3601  064D  01CC               	clrf	(_ROBOTerror)^080h
  3602  064E  1403               	bsf	status,0
  3603  064F  0DCC               	rlf	(_ROBOTerror)^080h,f
  3604                           	line	159
  3605                           ;robot.c: 159: break;
  3606  0650  2F68               	goto	l11631
  3607                           	line	160
  3608                           	
  3609  0651                     l6033:	
  3610                           	line	161
  3611                           	
  3612  0651                     l11611:	
  3613                           ;robot.c: 160: }
  3614                           ;robot.c: 161: temp1 = DistHighByte;
  3615  0651  0848               	movf	(_DistHighByte)^080h,w	;volatile
  3616  0652  1283               	bcf	status, 5	;RP0=0, select bank0
  3617  0653  1303               	bcf	status, 6	;RP1=0, select bank0
  3618  0654  00DF               	movwf	(??_robotMoveSpeed+0)+0
  3619  0655  01E0               	clrf	(??_robotMoveSpeed+0)+0+1
  3620  0656  085F               	movf	0+(??_robotMoveSpeed+0)+0,w
  3621  0657  00E5               	movwf	(robotMoveSpeed@temp1)
  3622  0658  0860               	movf	1+(??_robotMoveSpeed+0)+0,w
  3623  0659  00E6               	movwf	(robotMoveSpeed@temp1+1)
  3624                           	line	162
  3625                           	
  3626  065A                     l11613:	
  3627                           ;robot.c: 162: temp1 = temp1 << 8;
  3628  065A  0866               	movf	(robotMoveSpeed@temp1+1),w
  3629  065B  00E0               	movwf	(??_robotMoveSpeed+0)+0+1
  3630  065C  0865               	movf	(robotMoveSpeed@temp1),w
  3631  065D  00DF               	movwf	(??_robotMoveSpeed+0)+0
  3632  065E  085F               	movf	(??_robotMoveSpeed+0)+0,w
  3633  065F  00E0               	movwf	(??_robotMoveSpeed+0)+1
  3634  0660  01DF               	clrf	(??_robotMoveSpeed+0)+0
  3635  0661  085F               	movf	0+(??_robotMoveSpeed+0)+0,w
  3636  0662  00E5               	movwf	(robotMoveSpeed@temp1)
  3637  0663  0860               	movf	1+(??_robotMoveSpeed+0)+0,w
  3638  0664  00E6               	movwf	(robotMoveSpeed@temp1+1)
  3639                           	line	163
  3640                           	
  3641  0665                     l11615:	
  3642                           ;robot.c: 163: temp1 += DistLowByte;
  3643  0665  1683               	bsf	status, 5	;RP0=1, select bank1
  3644  0666  1303               	bcf	status, 6	;RP1=0, select bank1
  3645  0667  0849               	movf	(_DistLowByte)^080h,w	;volatile
  3646  0668  1283               	bcf	status, 5	;RP0=0, select bank0
  3647  0669  1303               	bcf	status, 6	;RP1=0, select bank0
  3648  066A  00DF               	movwf	(??_robotMoveSpeed+0)+0
  3649  066B  01E0               	clrf	(??_robotMoveSpeed+0)+0+1
  3650  066C  085F               	movf	0+(??_robotMoveSpeed+0)+0,w
  3651  066D  07E5               	addwf	(robotMoveSpeed@temp1),f
  3652  066E  1803               	skipnc
  3653  066F  0AE6               	incf	(robotMoveSpeed@temp1+1),f
  3654  0670  0860               	movf	1+(??_robotMoveSpeed+0)+0,w
  3655  0671  07E6               	addwf	(robotMoveSpeed@temp1+1),f
  3656                           	line	164
  3657                           	
  3658  0672                     l11617:	
  3659                           ;robot.c: 164: distTravelled += temp1;
  3660  0672  0865               	movf	(robotMoveSpeed@temp1),w
  3661  0673  1683               	bsf	status, 5	;RP0=1, select bank1
  3662  0674  1303               	bcf	status, 6	;RP1=0, select bank1
  3663  0675  07B8               	addwf	(_distTravelled)^080h,f
  3664  0676  1803               	skipnc
  3665  0677  0AB9               	incf	(_distTravelled+1)^080h,f
  3666  0678  1283               	bcf	status, 5	;RP0=0, select bank0
  3667  0679  1303               	bcf	status, 6	;RP1=0, select bank0
  3668  067A  0866               	movf	(robotMoveSpeed@temp1+1),w
  3669  067B  1683               	bsf	status, 5	;RP0=1, select bank1
  3670  067C  1303               	bcf	status, 6	;RP1=0, select bank1
  3671  067D  07B9               	addwf	(_distTravelled+1)^080h,f
  3672                           	line	165
  3673                           	
  3674  067E                     l11619:	
  3675                           ;robot.c: 165: TotalDistTravelled += temp1;
  3676  067E  1283               	bcf	status, 5	;RP0=0, select bank0
  3677  067F  1303               	bcf	status, 6	;RP1=0, select bank0
  3678  0680  0865               	movf	(robotMoveSpeed@temp1),w
  3679  0681  1683               	bsf	status, 5	;RP0=1, select bank1
  3680  0682  1303               	bcf	status, 6	;RP1=0, select bank1
  3681  0683  07B4               	addwf	(_TotalDistTravelled)^080h,f
  3682  0684  1803               	skipnc
  3683  0685  0AB5               	incf	(_TotalDistTravelled+1)^080h,f
  3684  0686  1283               	bcf	status, 5	;RP0=0, select bank0
  3685  0687  1303               	bcf	status, 6	;RP1=0, select bank0
  3686  0688  0866               	movf	(robotMoveSpeed@temp1+1),w
  3687  0689  1683               	bsf	status, 5	;RP0=1, select bank1
  3688  068A  1303               	bcf	status, 6	;RP1=0, select bank1
  3689  068B  07B5               	addwf	(_TotalDistTravelled+1)^080h,f
  3690                           	line	166
  3691                           	
  3692  068C                     l11621:	
  3693                           ;robot.c: 166: UpdateDisplay();
  3694  068C  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  118A         
  3695                           	line	167
  3696                           	
  3697  0691                     l11623:	
  3698                           ;robot.c: 167: float remaining = abs(distance) - abs(distTravelled) ;
  3699  0691  1683               	bsf	status, 5	;RP0=1, select bank1
  3700  0692  1303               	bcf	status, 6	;RP1=0, select bank1
  3701  0693  0839               	movf	(_distTravelled+1)^080h,w
  3702  0694  1283               	bcf	status, 5	;RP0=0, select bank0
  3703  0695  1303               	bcf	status, 6	;RP1=0, select bank0
  3704  0696  01A7               	clrf	(?_abs+1)
  3705  0697  07A7               	addwf	(?_abs+1)
  3706  0698  1683               	bsf	status, 5	;RP0=1, select bank1
  3707  0699  1303               	bcf	status, 6	;RP1=0, select bank1
  3708  069A  0838               	movf	(_distTravelled)^080h,w
  3709  069B  1283               	bcf	status, 5	;RP0=0, select bank0
  3710  069C  1303               	bcf	status, 6	;RP1=0, select bank0
  3711  069D  01A6               	clrf	(?_abs)
  3712  069E  07A6               	addwf	(?_abs)
  3713                           
  3714  069F  160A  118A  2439   	fcall	_abs
              120A  118A         
  3715  06A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3716  06A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3717  06A6  0926               	comf	(0+(?_abs)),w
  3718  06A7  00DF               	movwf	(??_robotMoveSpeed+0)+0
  3719  06A8  0927               	comf	(1+(?_abs)),w
  3720  06A9  00E0               	movwf	((??_robotMoveSpeed+0)+0+1)
  3721  06AA  0ADF               	incf	(??_robotMoveSpeed+0)+0,f
  3722  06AB  1903               	skipnz
  3723  06AC  0AE0               	incf	((??_robotMoveSpeed+0)+0+1),f
  3724  06AD  085C               	movf	(robotMoveSpeed@distance+1),w
  3725  06AE  01A7               	clrf	(?_abs+1)
  3726  06AF  07A7               	addwf	(?_abs+1)
  3727  06B0  085B               	movf	(robotMoveSpeed@distance),w
  3728  06B1  01A6               	clrf	(?_abs)
  3729  06B2  07A6               	addwf	(?_abs)
  3730                           
  3731  06B3  160A  118A  2439   	fcall	_abs
              120A  118A         
  3732  06B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3733  06B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3734  06BA  085F               	movf	0+(??_robotMoveSpeed+0)+0,w
  3735  06BB  0726               	addwf	(0+(?_abs)),w
  3736  06BC  00B6               	movwf	(?___awtoft)
  3737  06BD  0860               	movf	1+(??_robotMoveSpeed+0)+0,w
  3738  06BE  1803               	skipnc
  3739  06BF  0A60               	incf	1+(??_robotMoveSpeed+0)+0,w
  3740  06C0  0727               	addwf	(1+(?_abs)),w
  3741  06C1  00B7               	movwf	1+(?___awtoft)
  3742  06C2  160A  118A  2328   	fcall	___awtoft
              120A  118A         
  3743  06C7  1283               	bcf	status, 5	;RP0=0, select bank0
  3744  06C8  1303               	bcf	status, 6	;RP1=0, select bank0
  3745  06C9  0836               	movf	(0+(?___awtoft)),w
  3746  06CA  00E2               	movwf	(robotMoveSpeed@remaining)
  3747  06CB  0837               	movf	(1+(?___awtoft)),w
  3748  06CC  00E3               	movwf	(robotMoveSpeed@remaining+1)
  3749  06CD  0838               	movf	(2+(?___awtoft)),w
  3750  06CE  00E4               	movwf	(robotMoveSpeed@remaining+2)
  3751                           	line	168
  3752                           	
  3753  06CF                     l11625:	
  3754                           ;robot.c: 168: if ( remaining < 100)
  3755  06CF  0862               	movf	(robotMoveSpeed@remaining),w
  3756  06D0  00A0               	movwf	(?___ftge)
  3757  06D1  0863               	movf	(robotMoveSpeed@remaining+1),w
  3758  06D2  00A1               	movwf	(?___ftge+1)
  3759  06D3  0864               	movf	(robotMoveSpeed@remaining+2),w
  3760  06D4  00A2               	movwf	(?___ftge+2)
  3761  06D5  3000               	movlw	0x0
  3762  06D6  00A3               	movwf	0+(?___ftge)+03h
  3763  06D7  30C8               	movlw	0xc8
  3764  06D8  00A4               	movwf	1+(?___ftge)+03h
  3765  06D9  3042               	movlw	0x42
  3766  06DA  00A5               	movwf	2+(?___ftge)+03h
  3767  06DB  160A  118A  2792   	fcall	___ftge
              120A  118A         
  3768  06E0  1803               	btfsc	status,0
  3769  06E1  2EE3               	goto	u5581
  3770  06E2  2EE4               	goto	u5580
  3771  06E3                     u5581:
  3772  06E3  2F33               	goto	l11629
  3773  06E4                     u5580:
  3774                           	line	170
  3775                           	
  3776  06E4                     l11627:	
  3777                           ;robot.c: 169: {
  3778                           ;robot.c: 170: RobotDrive(speed * (remaining/100.0));
  3779  06E4  1283               	bcf	status, 5	;RP0=0, select bank0
  3780  06E5  1303               	bcf	status, 6	;RP1=0, select bank0
  3781  06E6  085E               	movf	(robotMoveSpeed@speed+1),w
  3782  06E7  01B7               	clrf	(?___awtoft+1)
  3783  06E8  07B7               	addwf	(?___awtoft+1)
  3784  06E9  085D               	movf	(robotMoveSpeed@speed),w
  3785  06EA  01B6               	clrf	(?___awtoft)
  3786  06EB  07B6               	addwf	(?___awtoft)
  3787                           
  3788  06EC  160A  118A  2328   	fcall	___awtoft
              120A  118A         
  3789  06F1  1283               	bcf	status, 5	;RP0=0, select bank0
  3790  06F2  1303               	bcf	status, 6	;RP1=0, select bank0
  3791  06F3  0836               	movf	(0+(?___awtoft)),w
  3792  06F4  00C9               	movwf	0+(?___ftmul)+03h
  3793  06F5  0837               	movf	(1+(?___awtoft)),w
  3794  06F6  00CA               	movwf	1+(?___ftmul)+03h
  3795  06F7  0838               	movf	(2+(?___awtoft)),w
  3796  06F8  00CB               	movwf	2+(?___ftmul)+03h
  3797  06F9  0862               	movf	(robotMoveSpeed@remaining),w
  3798  06FA  00B9               	movwf	0+(?___ftdiv)+03h
  3799  06FB  0863               	movf	(robotMoveSpeed@remaining+1),w
  3800  06FC  00BA               	movwf	1+(?___ftdiv)+03h
  3801  06FD  0864               	movf	(robotMoveSpeed@remaining+2),w
  3802  06FE  00BB               	movwf	2+(?___ftdiv)+03h
  3803  06FF  3000               	movlw	0x0
  3804  0700  00B6               	movwf	(?___ftdiv)
  3805  0701  30C8               	movlw	0xc8
  3806  0702  00B7               	movwf	(?___ftdiv+1)
  3807  0703  3042               	movlw	0x42
  3808  0704  00B8               	movwf	(?___ftdiv+2)
  3809  0705  120A  158A  242A   	fcall	___ftdiv
              120A  118A         
  3810  070A  1283               	bcf	status, 5	;RP0=0, select bank0
  3811  070B  1303               	bcf	status, 6	;RP1=0, select bank0
  3812  070C  0836               	movf	(0+(?___ftdiv)),w
  3813  070D  00C6               	movwf	(?___ftmul)
  3814  070E  0837               	movf	(1+(?___ftdiv)),w
  3815  070F  00C7               	movwf	(?___ftmul+1)
  3816  0710  0838               	movf	(2+(?___ftdiv)),w
  3817  0711  00C8               	movwf	(?___ftmul+2)
  3818  0712  120A  158A  24F2   	fcall	___ftmul
              120A  118A         
  3819  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  3820  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  3821  0719  0846               	movf	(0+(?___ftmul)),w
  3822  071A  00A8               	movwf	(?___fttol)
  3823  071B  0847               	movf	(1+(?___ftmul)),w
  3824  071C  00A9               	movwf	(?___fttol+1)
  3825  071D  0848               	movf	(2+(?___ftmul)),w
  3826  071E  00AA               	movwf	(?___fttol+2)
  3827  071F  120A  158A  22D8   	fcall	___fttol
              120A  118A         
  3828  0724  1283               	bcf	status, 5	;RP0=0, select bank0
  3829  0725  1303               	bcf	status, 6	;RP1=0, select bank0
  3830  0726  0829               	movf	1+(((0+(?___fttol)))),w
  3831  0727  01D7               	clrf	(?_RobotDrive+1)
  3832  0728  07D7               	addwf	(?_RobotDrive+1)
  3833  0729  0828               	movf	0+(((0+(?___fttol)))),w
  3834  072A  01D6               	clrf	(?_RobotDrive)
  3835  072B  07D6               	addwf	(?_RobotDrive)
  3836                           
  3837  072C  160A  118A  2380   	fcall	_RobotDrive
              120A  118A         
  3838  0731  2F33               	goto	l11629
  3839                           	line	171
  3840                           	
  3841  0732                     l6037:	
  3842  0732  2F33               	goto	l11629
  3843                           	line	172
  3844                           	
  3845  0733                     l6031:	
  3846                           	line	153
  3847                           	
  3848  0733                     l11629:	
  3849  0733  1683               	bsf	status, 5	;RP0=1, select bank1
  3850  0734  1303               	bcf	status, 6	;RP1=0, select bank1
  3851  0735  0839               	movf	(_distTravelled+1)^080h,w
  3852  0736  1283               	bcf	status, 5	;RP0=0, select bank0
  3853  0737  1303               	bcf	status, 6	;RP1=0, select bank0
  3854  0738  01A7               	clrf	(?_abs+1)
  3855  0739  07A7               	addwf	(?_abs+1)
  3856  073A  1683               	bsf	status, 5	;RP0=1, select bank1
  3857  073B  1303               	bcf	status, 6	;RP1=0, select bank1
  3858  073C  0838               	movf	(_distTravelled)^080h,w
  3859  073D  1283               	bcf	status, 5	;RP0=0, select bank0
  3860  073E  1303               	bcf	status, 6	;RP1=0, select bank0
  3861  073F  01A6               	clrf	(?_abs)
  3862  0740  07A6               	addwf	(?_abs)
  3863                           
  3864  0741  160A  118A  2439   	fcall	_abs
              120A  118A         
  3865  0746  1283               	bcf	status, 5	;RP0=0, select bank0
  3866  0747  1303               	bcf	status, 6	;RP1=0, select bank0
  3867  0748  0826               	movf	(0+?_abs),w
  3868  0749  00DF               	movwf	(??_robotMoveSpeed+0)+0
  3869  074A  0827               	movf	(1+?_abs),w
  3870  074B  00E0               	movwf	((??_robotMoveSpeed+0)+0+1)
  3871  074C  085C               	movf	(robotMoveSpeed@distance+1),w
  3872  074D  01A7               	clrf	(?_abs+1)
  3873  074E  07A7               	addwf	(?_abs+1)
  3874  074F  085B               	movf	(robotMoveSpeed@distance),w
  3875  0750  01A6               	clrf	(?_abs)
  3876  0751  07A6               	addwf	(?_abs)
  3877                           
  3878  0752  160A  118A  2439   	fcall	_abs
              120A  118A         
  3879  0757  1283               	bcf	status, 5	;RP0=0, select bank0
  3880  0758  1303               	bcf	status, 6	;RP1=0, select bank0
  3881  0759  0860               	movf	1+(??_robotMoveSpeed+0)+0,w
  3882  075A  3A80               	xorlw	80h
  3883  075B  00E1               	movwf	(??_robotMoveSpeed+2)+0
  3884  075C  0827               	movf	(1+(?_abs)),w
  3885  075D  3A80               	xorlw	80h
  3886  075E  0261               	subwf	(??_robotMoveSpeed+2)+0,w
  3887  075F  1D03               	skipz
  3888  0760  2F63               	goto	u5595
  3889  0761  0826               	movf	(0+(?_abs)),w
  3890  0762  025F               	subwf	0+(??_robotMoveSpeed+0)+0,w
  3891  0763                     u5595:
  3892                           
  3893  0763  1C03               	skipc
  3894  0764  2F66               	goto	u5591
  3895  0765  2F67               	goto	u5590
  3896  0766                     u5591:
  3897  0766  2E3B               	goto	l11603
  3898  0767                     u5590:
  3899  0767  2F68               	goto	l11631
  3900                           	
  3901  0768                     l6036:	
  3902                           	line	174
  3903                           	
  3904  0768                     l11631:	
  3905                           ;robot.c: 171: }
  3906                           ;robot.c: 172: }
  3907                           ;robot.c: 174: RobotDrive(0);
  3908  0768  3000               	movlw	low(0)
  3909  0769  1283               	bcf	status, 5	;RP0=0, select bank0
  3910  076A  1303               	bcf	status, 6	;RP1=0, select bank0
  3911  076B  00D6               	movwf	(?_RobotDrive)
  3912  076C  3000               	movlw	high(0)
  3913  076D  00D7               	movwf	((?_RobotDrive))+1
  3914  076E  160A  118A  2380   	fcall	_RobotDrive
              120A  118A         
  3915                           	line	176
  3916                           	
  3917  0773                     l6038:	
  3918  0773  0008               	return
  3919                           	opt stack 0
  3920                           GLOBAL	__end_of_robotMoveSpeed
  3921  0774                     	__end_of_robotMoveSpeed:
  3922 ;; =============== function _robotMoveSpeed ends ============
  3923                           
  3924                           	signat	_robotMoveSpeed,8312
  3925                           	global	_scan360
  3926                           psect	text1120,local,class=CODE,delta=2
  3927                           global __ptext1120
  3928  1726                     __ptext1120:
  3929                           
  3930 ;; *************** function _scan360 *****************
  3931 ;; Defined at:
  3932 ;;		line 360 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  steps           2   63[BANK0 ] int 
  3937 ;;  lowestSteps     2   61[BANK0 ] int 
  3938 ;;  lowestVal       2   59[BANK0 ] int 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2   57[BANK0 ] int 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       2       0       0       0
  3949 ;;      Locals:         0       6       0       0       0
  3950 ;;      Temps:          0       0       0       0       0
  3951 ;;      Totals:         0       8       0       0       0
  3952 ;;Total ram usage:        8 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    7
  3955 ;; This function calls:
  3956 ;;		_readAvgDistance
  3957 ;;		_rotate
  3958 ;;		_UpdateDisplay
  3959 ;; This function is called by:
  3960 ;;		_main
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           psect	text1120
  3964                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3965                           	line	360
  3966                           	global	__size_of_scan360
  3967  006C                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3968                           	
  3969  1726                     _scan360:	
  3970                           	opt	stack 0
  3971                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3972                           	line	361
  3973                           	
  3974  1726                     l11571:	
  3975                           ;Main.c: 361: int lowestVal = 0, lowestSteps = 0;
  3976  1726  1283               	bcf	status, 5	;RP0=0, select bank0
  3977  1727  1303               	bcf	status, 6	;RP1=0, select bank0
  3978  1728  01DB               	clrf	(scan360@lowestVal)
  3979  1729  01DC               	clrf	(scan360@lowestVal+1)
  3980  172A  01DD               	clrf	(scan360@lowestSteps)
  3981  172B  01DE               	clrf	(scan360@lowestSteps+1)
  3982                           	line	363
  3983                           ;Main.c: 363: for (int steps = 0; steps < 200; steps+= 2)
  3984  172C  01DF               	clrf	(scan360@steps)
  3985  172D  01E0               	clrf	(scan360@steps+1)
  3986                           	
  3987  172E                     l11573:	
  3988  172E  0860               	movf	(scan360@steps+1),w
  3989  172F  3A80               	xorlw	80h
  3990  1730  00FF               	movwf	btemp+1
  3991  1731  3080               	movlw	(high(0C8h))^80h
  3992  1732  027F               	subwf	btemp+1,w
  3993  1733  1D03               	skipz
  3994  1734  2F37               	goto	u5525
  3995  1735  30C8               	movlw	low(0C8h)
  3996  1736  025F               	subwf	(scan360@steps),w
  3997  1737                     u5525:
  3998                           
  3999  1737  1C03               	skipc
  4000  1738  2F3A               	goto	u5521
  4001  1739  2F3B               	goto	u5520
  4002  173A                     u5521:
  4003  173A  2F3D               	goto	l11577
  4004  173B                     u5520:
  4005  173B  2F88               	goto	l11595
  4006                           	
  4007  173C                     l11575:	
  4008  173C  2F88               	goto	l11595
  4009                           	line	364
  4010                           	
  4011  173D                     l2289:	
  4012                           	line	365
  4013                           	
  4014  173D                     l11577:	
  4015                           ;Main.c: 364: {
  4016                           ;Main.c: 365: readAvgDistance();
  4017  173D  120A  158A  20BE   	fcall	_readAvgDistance
              160A  118A         
  4018                           	line	366
  4019                           	
  4020  1742                     l11579:	
  4021                           ;Main.c: 366: if (adcVal > lowestVal)
  4022  1742  1283               	bcf	status, 5	;RP0=0, select bank0
  4023  1743  1303               	bcf	status, 6	;RP1=0, select bank0
  4024  1744  086B               	movf	(_adcVal+1),w	;volatile
  4025  1745  025C               	subwf	(scan360@lowestVal+1),w
  4026  1746  1D03               	skipz
  4027  1747  2F4A               	goto	u5535
  4028  1748  086A               	movf	(_adcVal),w	;volatile
  4029  1749  025B               	subwf	(scan360@lowestVal),w
  4030  174A                     u5535:
  4031  174A  1803               	skipnc
  4032  174B  2F4D               	goto	u5531
  4033  174C  2F4E               	goto	u5530
  4034  174D                     u5531:
  4035  174D  2F5B               	goto	l11583
  4036  174E                     u5530:
  4037                           	line	368
  4038                           	
  4039  174E                     l11581:	
  4040                           ;Main.c: 367: {
  4041                           ;Main.c: 368: lowestVal = adcVal;
  4042  174E  086B               	movf	(_adcVal+1),w	;volatile
  4043  174F  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  4044  1750  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  4045  1751  086A               	movf	(_adcVal),w	;volatile
  4046  1752  01DB               	clrf	(scan360@lowestVal)	;volatile
  4047  1753  07DB               	addwf	(scan360@lowestVal)	;volatile
  4048                           
  4049                           	line	369
  4050                           ;Main.c: 369: lowestSteps = steps;
  4051  1754  0860               	movf	(scan360@steps+1),w
  4052  1755  01DE               	clrf	(scan360@lowestSteps+1)
  4053  1756  07DE               	addwf	(scan360@lowestSteps+1)
  4054  1757  085F               	movf	(scan360@steps),w
  4055  1758  01DD               	clrf	(scan360@lowestSteps)
  4056  1759  07DD               	addwf	(scan360@lowestSteps)
  4057                           
  4058  175A  2F5B               	goto	l11583
  4059                           	line	371
  4060                           	
  4061  175B                     l2291:	
  4062                           	line	372
  4063                           	
  4064  175B                     l11583:	
  4065                           ;Main.c: 371: }
  4066                           ;Main.c: 372: rotate(2, 1);
  4067  175B  3002               	movlw	low(02h)
  4068  175C  00A3               	movwf	(?_rotate)
  4069  175D  3000               	movlw	high(02h)
  4070  175E  00A4               	movwf	((?_rotate))+1
  4071  175F  01A5               	clrf	0+(?_rotate)+02h
  4072  1760  1403               	bsf	status,0
  4073  1761  0DA5               	rlf	0+(?_rotate)+02h,f
  4074  1762  160A  118A  2610   	fcall	_rotate
              160A  118A         
  4075                           	line	374
  4076                           	
  4077  1767                     l11585:	
  4078                           ;Main.c: 374: if (RTC_FLAG_250MS == 1)
  4079  1767  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4080  1768  2F6A               	goto	u5541
  4081  1769  2F6B               	goto	u5540
  4082  176A                     u5541:
  4083  176A  2F72               	goto	l11591
  4084  176B                     u5540:
  4085                           	line	376
  4086                           	
  4087  176B                     l11587:	
  4088                           ;Main.c: 375: {
  4089                           ;Main.c: 376: RTC_FLAG_250MS = 0;
  4090  176B  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4091                           	line	377
  4092                           	
  4093  176C                     l11589:	
  4094                           ;Main.c: 377: UpdateDisplay();
  4095  176C  120A  118A  24CA   	fcall	_UpdateDisplay
              160A  118A         
  4096  1771  2F72               	goto	l11591
  4097                           	line	378
  4098                           	
  4099  1772                     l2292:	
  4100                           	line	363
  4101                           	
  4102  1772                     l11591:	
  4103  1772  3002               	movlw	low(02h)
  4104  1773  1283               	bcf	status, 5	;RP0=0, select bank0
  4105  1774  1303               	bcf	status, 6	;RP1=0, select bank0
  4106  1775  07DF               	addwf	(scan360@steps),f
  4107  1776  1803               	skipnc
  4108  1777  0AE0               	incf	(scan360@steps+1),f
  4109  1778  3000               	movlw	high(02h)
  4110  1779  07E0               	addwf	(scan360@steps+1),f
  4111                           	
  4112  177A                     l11593:	
  4113  177A  0860               	movf	(scan360@steps+1),w
  4114  177B  3A80               	xorlw	80h
  4115  177C  00FF               	movwf	btemp+1
  4116  177D  3080               	movlw	(high(0C8h))^80h
  4117  177E  027F               	subwf	btemp+1,w
  4118  177F  1D03               	skipz
  4119  1780  2F83               	goto	u5555
  4120  1781  30C8               	movlw	low(0C8h)
  4121  1782  025F               	subwf	(scan360@steps),w
  4122  1783                     u5555:
  4123                           
  4124  1783  1C03               	skipc
  4125  1784  2F86               	goto	u5551
  4126  1785  2F87               	goto	u5550
  4127  1786                     u5551:
  4128  1786  2F3D               	goto	l11577
  4129  1787                     u5550:
  4130  1787  2F88               	goto	l11595
  4131                           	
  4132  1788                     l2290:	
  4133                           	line	381
  4134                           	
  4135  1788                     l11595:	
  4136                           ;Main.c: 378: }
  4137                           ;Main.c: 379: }
  4138                           ;Main.c: 381: return lowestSteps;
  4139  1788  1283               	bcf	status, 5	;RP0=0, select bank0
  4140  1789  1303               	bcf	status, 6	;RP1=0, select bank0
  4141  178A  085E               	movf	(scan360@lowestSteps+1),w
  4142  178B  01DA               	clrf	(?_scan360+1)
  4143  178C  07DA               	addwf	(?_scan360+1)
  4144  178D  085D               	movf	(scan360@lowestSteps),w
  4145  178E  01D9               	clrf	(?_scan360)
  4146  178F  07D9               	addwf	(?_scan360)
  4147                           
  4148  1790  2F91               	goto	l2293
  4149                           	
  4150  1791                     l11597:	
  4151                           	line	382
  4152                           	
  4153  1791                     l2293:	
  4154  1791  0008               	return
  4155                           	opt stack 0
  4156                           GLOBAL	__end_of_scan360
  4157  1792                     	__end_of_scan360:
  4158 ;; =============== function _scan360 ends ============
  4159                           
  4160                           	signat	_scan360,90
  4161                           	global	_calibrateIR
  4162                           psect	text1121,local,class=CODE,delta=2
  4163                           global __ptext1121
  4164  1660                     __ptext1121:
  4165                           
  4166 ;; *************** function _calibrateIR *****************
  4167 ;; Defined at:
  4168 ;;		line 279 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;		None               void
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    6
  4189 ;; This function calls:
  4190 ;;		_rotate
  4191 ;;		_UpdateDisplay
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           psect	text1121
  4197                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4198                           	line	279
  4199                           	global	__size_of_calibrateIR
  4200  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  4201                           	
  4202  1660                     _calibrateIR:	
  4203                           	opt	stack 1
  4204                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4205                           	line	280
  4206                           	
  4207  1660                     l11541:	
  4208                           ;Main.c: 280: currentMenu = 1;
  4209  1660  1683               	bsf	status, 5	;RP0=1, select bank1
  4210  1661  1303               	bcf	status, 6	;RP1=0, select bank1
  4211  1662  01D0               	clrf	(_currentMenu)^080h	;volatile
  4212  1663  1403               	bsf	status,0
  4213  1664  0DD0               	rlf	(_currentMenu)^080h,f	;volatile
  4214                           	line	281
  4215                           	
  4216  1665                     l11543:	
  4217                           ;Main.c: 281: rotate(8, 0);
  4218  1665  3008               	movlw	low(08h)
  4219  1666  1283               	bcf	status, 5	;RP0=0, select bank0
  4220  1667  1303               	bcf	status, 6	;RP1=0, select bank0
  4221  1668  00A3               	movwf	(?_rotate)
  4222  1669  3000               	movlw	high(08h)
  4223  166A  00A4               	movwf	((?_rotate))+1
  4224  166B  01A5               	clrf	0+(?_rotate)+02h
  4225  166C  160A  118A  2610   	fcall	_rotate
              160A  118A         
  4226  1671  2E72               	goto	l11545
  4227                           	line	282
  4228                           ;Main.c: 282: while (1)
  4229                           	
  4230  1672                     l2259:	
  4231                           	line	284
  4232                           	
  4233  1672                     l11545:	
  4234                           ;Main.c: 283: {
  4235                           ;Main.c: 284: if (RTC_FLAG_250MS == 1)
  4236  1672  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4237  1673  2E75               	goto	u5511
  4238  1674  2E76               	goto	u5510
  4239  1675                     u5511:
  4240  1675  2EAA               	goto	l11569
  4241  1676                     u5510:
  4242                           	line	286
  4243                           	
  4244  1676                     l11547:	
  4245                           ;Main.c: 285: {
  4246                           ;Main.c: 286: RTC_FLAG_250MS = 0;
  4247  1676  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4248                           	line	287
  4249                           	
  4250  1677                     l11549:	
  4251                           ;Main.c: 287: UpdateDisplay();
  4252  1677  120A  118A  24CA   	fcall	_UpdateDisplay
              160A  118A         
  4253  167C  2EAA               	goto	l11569
  4254                           	line	288
  4255                           	
  4256  167D                     l2260:	
  4257                           	line	289
  4258                           ;Main.c: 288: }
  4259                           ;Main.c: 289: switch (buttonPressed)
  4260  167D  2EAA               	goto	l11569
  4261                           	line	291
  4262                           ;Main.c: 290: {
  4263                           ;Main.c: 291: case 1:
  4264                           	
  4265  167E                     l2262:	
  4266                           	line	292
  4267                           ;Main.c: 292: buttonPressed = 0;
  4268  167E  01FD               	clrf	(_buttonPressed)	;volatile
  4269                           	line	293
  4270                           ;Main.c: 293: break;
  4271  167F  2E72               	goto	l11545
  4272                           	line	294
  4273                           ;Main.c: 294: case 2:
  4274                           	
  4275  1680                     l2264:	
  4276                           	line	295
  4277                           ;Main.c: 295: buttonPressed = 0;
  4278  1680  01FD               	clrf	(_buttonPressed)	;volatile
  4279                           	line	296
  4280                           ;Main.c: 296: break;
  4281  1681  2E72               	goto	l11545
  4282                           	line	297
  4283                           ;Main.c: 297: case 3:
  4284                           	
  4285  1682                     l2265:	
  4286                           	line	298
  4287                           	
  4288  1682                     l11551:	
  4289                           ;Main.c: 298: rotate(1, 1);
  4290  1682  3001               	movlw	low(01h)
  4291  1683  1283               	bcf	status, 5	;RP0=0, select bank0
  4292  1684  1303               	bcf	status, 6	;RP1=0, select bank0
  4293  1685  00A3               	movwf	(?_rotate)
  4294  1686  3000               	movlw	high(01h)
  4295  1687  00A4               	movwf	((?_rotate))+1
  4296  1688  01A5               	clrf	0+(?_rotate)+02h
  4297  1689  1403               	bsf	status,0
  4298  168A  0DA5               	rlf	0+(?_rotate)+02h,f
  4299  168B  160A  118A  2610   	fcall	_rotate
              160A  118A         
  4300                           	line	299
  4301                           	
  4302  1690                     l11553:	
  4303                           ;Main.c: 299: buttonPressed = 0;
  4304  1690  01FD               	clrf	(_buttonPressed)	;volatile
  4305                           	line	300
  4306                           ;Main.c: 300: break;
  4307  1691  2E72               	goto	l11545
  4308                           	line	301
  4309                           ;Main.c: 301: case 4:
  4310                           	
  4311  1692                     l2266:	
  4312                           	line	302
  4313                           	
  4314  1692                     l11555:	
  4315                           ;Main.c: 302: rotate(1, 0);
  4316  1692  3001               	movlw	low(01h)
  4317  1693  1283               	bcf	status, 5	;RP0=0, select bank0
  4318  1694  1303               	bcf	status, 6	;RP1=0, select bank0
  4319  1695  00A3               	movwf	(?_rotate)
  4320  1696  3000               	movlw	high(01h)
  4321  1697  00A4               	movwf	((?_rotate))+1
  4322  1698  01A5               	clrf	0+(?_rotate)+02h
  4323  1699  160A  118A  2610   	fcall	_rotate
              160A  118A         
  4324                           	line	303
  4325                           	
  4326  169E                     l11557:	
  4327                           ;Main.c: 303: buttonPressed = 0;
  4328  169E  01FD               	clrf	(_buttonPressed)	;volatile
  4329                           	line	304
  4330                           ;Main.c: 304: break;
  4331  169F  2E72               	goto	l11545
  4332                           	line	305
  4333                           ;Main.c: 305: case 5:
  4334                           	
  4335  16A0                     l2267:	
  4336                           	line	306
  4337                           	
  4338  16A0                     l11559:	
  4339                           ;Main.c: 306: totalSteps = 0;
  4340  16A0  1683               	bsf	status, 5	;RP0=1, select bank1
  4341  16A1  1303               	bcf	status, 6	;RP1=0, select bank1
  4342  16A2  01C2               	clrf	(_totalSteps)^080h
  4343  16A3  01C3               	clrf	(_totalSteps+1)^080h
  4344                           	line	307
  4345                           	
  4346  16A4                     l11561:	
  4347                           ;Main.c: 307: buttonPressed = 0;
  4348  16A4  01FD               	clrf	(_buttonPressed)	;volatile
  4349                           	line	308
  4350                           	
  4351  16A5                     l11563:	
  4352                           ;Main.c: 308: currentMenu = 0;
  4353  16A5  01D0               	clrf	(_currentMenu)^080h	;volatile
  4354  16A6  2EBD               	goto	l2268
  4355                           	line	309
  4356                           	
  4357  16A7                     l11565:	
  4358                           ;Main.c: 309: return;
  4359  16A7  2EBD               	goto	l2268
  4360                           	line	310
  4361                           ;Main.c: 310: default:
  4362                           	
  4363  16A8                     l2269:	
  4364                           	line	311
  4365                           ;Main.c: 311: break;
  4366  16A8  2E72               	goto	l11545
  4367                           	line	312
  4368                           	
  4369  16A9                     l11567:	
  4370                           ;Main.c: 312: }
  4371  16A9  2E72               	goto	l11545
  4372                           	line	289
  4373                           	
  4374  16AA                     l2261:	
  4375                           	
  4376  16AA                     l11569:	
  4377  16AA  087D               	movf	(_buttonPressed),w	;volatile
  4378                           	; Switch size 1, requested type "space"
  4379                           ; Number of cases is 5, Range of values is 1 to 5
  4380                           ; switch strategies available:
  4381                           ; Name         Instructions Cycles
  4382                           ; simple_byte           16     9 (average)
  4383                           ; direct_byte           26    11 (fixed)
  4384                           ; jumptable            263     9 (fixed)
  4385                           ;	Chosen strategy is simple_byte
  4386                           
  4387                           	opt asmopt_off
  4388  16AB  3A01               	xorlw	1^0	; case 1
  4389  16AC  1903               	skipnz
  4390  16AD  2E7E               	goto	l2262
  4391  16AE  3A03               	xorlw	2^1	; case 2
  4392  16AF  1903               	skipnz
  4393  16B0  2E80               	goto	l2264
  4394  16B1  3A01               	xorlw	3^2	; case 3
  4395  16B2  1903               	skipnz
  4396  16B3  2E82               	goto	l11551
  4397  16B4  3A07               	xorlw	4^3	; case 4
  4398  16B5  1903               	skipnz
  4399  16B6  2E92               	goto	l11555
  4400  16B7  3A01               	xorlw	5^4	; case 5
  4401  16B8  1903               	skipnz
  4402  16B9  2EA0               	goto	l11559
  4403  16BA  2E72               	goto	l11545
  4404                           	opt asmopt_on
  4405                           
  4406                           	line	312
  4407                           	
  4408  16BB                     l2263:	
  4409  16BB  2E72               	goto	l11545
  4410                           	line	313
  4411                           	
  4412  16BC                     l2270:	
  4413                           	line	282
  4414  16BC  2E72               	goto	l11545
  4415                           	
  4416  16BD                     l2271:	
  4417                           	line	314
  4418                           	
  4419  16BD                     l2268:	
  4420  16BD  0008               	return
  4421                           	opt stack 0
  4422                           GLOBAL	__end_of_calibrateIR
  4423  16BE                     	__end_of_calibrateIR:
  4424 ;; =============== function _calibrateIR ends ============
  4425                           
  4426                           	signat	_calibrateIR,88
  4427                           	global	_UpdateDisplay
  4428                           psect	text1122,local,class=CODE,delta=2
  4429                           global __ptext1122
  4430  04CA                     __ptext1122:
  4431                           
  4432 ;; *************** function _UpdateDisplay *****************
  4433 ;; Defined at:
  4434 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  4439 ;; Return value:  Size  Location     Type
  4440 ;;		None               void
  4441 ;; Registers used:
  4442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         0       0       0       0       0
  4449 ;;      Locals:         0      16       0       0       0
  4450 ;;      Temps:          0       4       0       0       0
  4451 ;;      Totals:         0      20       0       0       0
  4452 ;;Total ram usage:       20 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    5
  4455 ;; This function calls:
  4456 ;;		_lcd_write_control
  4457 ;;		_sprintf
  4458 ;;		_lcd_set_cursor
  4459 ;;		_lcd_write_string
  4460 ;;		___awmod
  4461 ;; This function is called by:
  4462 ;;		_main
  4463 ;;		_calibrateIR
  4464 ;;		_ChargeMode
  4465 ;;		_scan360
  4466 ;;		_robotMoveSpeed
  4467 ;;		_robotTurnSpeed
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           psect	text1122
  4471                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4472                           	line	236
  4473                           	global	__size_of_UpdateDisplay
  4474  015F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4475                           	
  4476  04CA                     _UpdateDisplay:	
  4477                           	opt	stack 1
  4478                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4479                           	line	237
  4480                           	
  4481  04CA                     l11497:	
  4482                           ;HMI.c: 237: char LCDOutput[16] = "";
  4483  04CA  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4484  04CB  0084               	movwf	fsr0
  4485  04CC  3090               	movlw	low(UpdateDisplay@F1242)
  4486  04CD  1283               	bcf	status, 5	;RP0=0, select bank0
  4487  04CE  1303               	bcf	status, 6	;RP1=0, select bank0
  4488  04CF  00C5               	movwf	(??_UpdateDisplay+0)+0
  4489  04D0  0804               	movf	fsr0,w
  4490  04D1  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4491  04D2  3010               	movlw	16
  4492  04D3  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4493  04D4                     u5490:
  4494  04D4  0845               	movf	(??_UpdateDisplay+0)+0,w
  4495  04D5  0084               	movwf	fsr0
  4496  04D6  1783               	bsf	status, 7	;select IRP bank3
  4497                           	
  4498  04D7  0800               	movf	indf,w
  4499  04D8  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4500  04D9  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4501  04DA  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4502  04DB  0084               	movwf	fsr0
  4503  04DC  1383               	bcf	status, 7	;select IRP bank0
  4504                           	
  4505  04DD  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4506  04DE  0080               	movwf	indf
  4507  04DF  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4508  04E0  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4509  04E1  2CD4               	goto	u5490
  4510                           	line	238
  4511                           ;HMI.c: 238: switch (currentMenu)
  4512  04E2  2E1B               	goto	l11539
  4513                           	line	240
  4514                           ;HMI.c: 239: {
  4515                           ;HMI.c: 240: case 0:
  4516                           	
  4517  04E3                     l4533:	
  4518                           	line	241
  4519                           	
  4520  04E3                     l11499:	
  4521                           ;HMI.c: 241: lcd_write_control(0b00000001);
  4522  04E3  3001               	movlw	(01h)
  4523  04E4  160A  118A  21CD   	fcall	_lcd_write_control
              120A  118A         
  4524                           	line	242
  4525                           	
  4526  04E9                     l11501:	
  4527                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",IRdistance, angleTurned);
  4528  04E9  302B               	movlw	((STR_13-__stringbase))&0ffh
  4529  04EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4530  04EB  1303               	bcf	status, 6	;RP1=0, select bank0
  4531  04EC  00C5               	movwf	(??_UpdateDisplay+0)+0
  4532  04ED  0845               	movf	(??_UpdateDisplay+0)+0,w
  4533  04EE  00B4               	movwf	(?_sprintf)
  4534  04EF  1683               	bsf	status, 5	;RP0=1, select bank1
  4535  04F0  1303               	bcf	status, 6	;RP1=0, select bank1
  4536  04F1  0831               	movf	(_IRdistance+1)^080h,w	;volatile
  4537  04F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4538  04F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4539  04F4  01B6               	clrf	1+(?_sprintf)+01h
  4540  04F5  07B6               	addwf	1+(?_sprintf)+01h
  4541  04F6  1683               	bsf	status, 5	;RP0=1, select bank1
  4542  04F7  1303               	bcf	status, 6	;RP1=0, select bank1
  4543  04F8  0830               	movf	(_IRdistance)^080h,w	;volatile
  4544  04F9  1283               	bcf	status, 5	;RP0=0, select bank0
  4545  04FA  1303               	bcf	status, 6	;RP1=0, select bank0
  4546  04FB  01B5               	clrf	0+(?_sprintf)+01h
  4547  04FC  07B5               	addwf	0+(?_sprintf)+01h
  4548                           
  4549  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  4550  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  4551  04FF  0837               	movf	(_angleTurned+1)^080h,w
  4552  0500  1283               	bcf	status, 5	;RP0=0, select bank0
  4553  0501  1303               	bcf	status, 6	;RP1=0, select bank0
  4554  0502  01B8               	clrf	1+(?_sprintf)+03h
  4555  0503  07B8               	addwf	1+(?_sprintf)+03h
  4556  0504  1683               	bsf	status, 5	;RP0=1, select bank1
  4557  0505  1303               	bcf	status, 6	;RP1=0, select bank1
  4558  0506  0836               	movf	(_angleTurned)^080h,w
  4559  0507  1283               	bcf	status, 5	;RP0=0, select bank0
  4560  0508  1303               	bcf	status, 6	;RP1=0, select bank0
  4561  0509  01B7               	clrf	0+(?_sprintf)+03h
  4562  050A  07B7               	addwf	0+(?_sprintf)+03h
  4563                           
  4564  050B  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4565  050C  120A  158A  25E0   	fcall	_sprintf
              120A  118A         
  4566                           	line	243
  4567                           	
  4568  0511                     l11503:	
  4569                           ;HMI.c: 243: lcd_set_cursor(0x00);
  4570  0511  3000               	movlw	(0)
  4571  0512  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4572                           	line	244
  4573                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  4574  0517  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  4575  0518  1283               	bcf	status, 5	;RP0=0, select bank0
  4576  0519  1303               	bcf	status, 6	;RP1=0, select bank0
  4577  051A  00A7               	movwf	(?_lcd_write_string)
  4578  051B  3000               	movlw	(0x0/2)
  4579  051C  00A8               	movwf	(?_lcd_write_string+1)
  4580  051D  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4581                           	line	245
  4582                           	
  4583  0522                     l11505:	
  4584                           ;HMI.c: 245: lcd_set_cursor(0x40);
  4585  0522  3040               	movlw	(040h)
  4586  0523  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4587                           	line	246
  4588                           	
  4589  0528                     l11507:	
  4590                           ;HMI.c: 246: if (pos > 0)
  4591  0528  1683               	bsf	status, 5	;RP0=1, select bank1
  4592  0529  1303               	bcf	status, 6	;RP1=0, select bank1
  4593  052A  083F               	movf	(_pos+1)^080h,w
  4594  052B  3A80               	xorlw	80h
  4595  052C  00FF               	movwf	btemp+1
  4596  052D  3080               	movlw	(high(01h))^80h
  4597  052E  027F               	subwf	btemp+1,w
  4598  052F  1D03               	skipz
  4599  0530  2D33               	goto	u5505
  4600  0531  3001               	movlw	low(01h)
  4601  0532  023E               	subwf	(_pos)^080h,w
  4602  0533                     u5505:
  4603                           
  4604  0533  1C03               	skipc
  4605  0534  2D36               	goto	u5501
  4606  0535  2D37               	goto	u5500
  4607  0536                     u5501:
  4608  0536  2D4A               	goto	l11511
  4609  0537                     u5500:
  4610                           	line	247
  4611                           	
  4612  0537                     l11509:	
  4613                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  4614  0537  1683               	bsf	status, 5	;RP0=1, select bank1
  4615  0538  1303               	bcf	status, 6	;RP1=0, select bank1
  4616  0539  083E               	movf	(_pos)^080h,w
  4617  053A  3EFF               	addlw	0FFh
  4618  053B  3EDC               	addlw	_shortMenuStrings&0ffh
  4619  053C  0084               	movwf	fsr0
  4620  053D  1383               	bcf	status, 7	;select IRP bank1
  4621  053E  0800               	movf	indf,w
  4622  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  4623  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  4624  0541  00A7               	movwf	(?_lcd_write_string)
  4625  0542  3080               	movlw	80h
  4626  0543  00A8               	movwf	(?_lcd_write_string+1)
  4627  0544  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4628  0549  2D5D               	goto	l11513
  4629                           	line	248
  4630                           	
  4631  054A                     l4534:	
  4632                           	line	249
  4633                           	
  4634  054A                     l11511:	
  4635                           ;HMI.c: 248: else
  4636                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4637  054A  1683               	bsf	status, 5	;RP0=1, select bank1
  4638  054B  1303               	bcf	status, 6	;RP1=0, select bank1
  4639  054C  083E               	movf	(_pos)^080h,w
  4640  054D  3E05               	addlw	05h
  4641  054E  3EDC               	addlw	_shortMenuStrings&0ffh
  4642  054F  0084               	movwf	fsr0
  4643  0550  1383               	bcf	status, 7	;select IRP bank1
  4644  0551  0800               	movf	indf,w
  4645  0552  1283               	bcf	status, 5	;RP0=0, select bank0
  4646  0553  1303               	bcf	status, 6	;RP1=0, select bank0
  4647  0554  00A7               	movwf	(?_lcd_write_string)
  4648  0555  3080               	movlw	80h
  4649  0556  00A8               	movwf	(?_lcd_write_string+1)
  4650  0557  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4651  055C  2D5D               	goto	l11513
  4652                           	
  4653  055D                     l4535:	
  4654                           	line	250
  4655                           	
  4656  055D                     l11513:	
  4657                           ;HMI.c: 250: lcd_set_cursor(0x44);
  4658  055D  3044               	movlw	(044h)
  4659  055E  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4660                           	line	251
  4661                           	
  4662  0563                     l11515:	
  4663                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  4664  0563  1683               	bsf	status, 5	;RP0=1, select bank1
  4665  0564  1303               	bcf	status, 6	;RP1=0, select bank1
  4666  0565  083E               	movf	(_pos)^080h,w
  4667  0566  3ED6               	addlw	_menuStrings&0ffh
  4668  0567  0084               	movwf	fsr0
  4669  0568  1383               	bcf	status, 7	;select IRP bank1
  4670  0569  0800               	movf	indf,w
  4671  056A  1283               	bcf	status, 5	;RP0=0, select bank0
  4672  056B  1303               	bcf	status, 6	;RP1=0, select bank0
  4673  056C  00A7               	movwf	(?_lcd_write_string)
  4674  056D  3080               	movlw	80h
  4675  056E  00A8               	movwf	(?_lcd_write_string+1)
  4676  056F  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4677                           	line	252
  4678                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  4679  0574  304D               	movlw	(04Dh)
  4680  0575  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4681                           	line	253
  4682                           	
  4683  057A                     l11517:	
  4684                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4685  057A  3006               	movlw	low(06h)
  4686  057B  1283               	bcf	status, 5	;RP0=0, select bank0
  4687  057C  1303               	bcf	status, 6	;RP1=0, select bank0
  4688  057D  00A0               	movwf	(?___awmod)
  4689  057E  3000               	movlw	high(06h)
  4690  057F  00A1               	movwf	((?___awmod))+1
  4691  0580  1683               	bsf	status, 5	;RP0=1, select bank1
  4692  0581  1303               	bcf	status, 6	;RP1=0, select bank1
  4693  0582  083E               	movf	(_pos)^080h,w
  4694  0583  3E01               	addlw	low(01h)
  4695  0584  1283               	bcf	status, 5	;RP0=0, select bank0
  4696  0585  1303               	bcf	status, 6	;RP1=0, select bank0
  4697  0586  00A2               	movwf	0+(?___awmod)+02h
  4698  0587  1683               	bsf	status, 5	;RP0=1, select bank1
  4699  0588  1303               	bcf	status, 6	;RP1=0, select bank1
  4700  0589  083F               	movf	(_pos+1)^080h,w
  4701  058A  1803               	skipnc
  4702  058B  3E01               	addlw	1
  4703  058C  3E00               	addlw	high(01h)
  4704  058D  1283               	bcf	status, 5	;RP0=0, select bank0
  4705  058E  1303               	bcf	status, 6	;RP1=0, select bank0
  4706  058F  00A3               	movwf	1+0+(?___awmod)+02h
  4707  0590  160A  118A  26BE   	fcall	___awmod
              120A  118A         
  4708  0595  1283               	bcf	status, 5	;RP0=0, select bank0
  4709  0596  1303               	bcf	status, 6	;RP1=0, select bank0
  4710  0597  0820               	movf	(0+(?___awmod)),w
  4711  0598  3EDC               	addlw	_shortMenuStrings&0ffh
  4712  0599  0084               	movwf	fsr0
  4713  059A  1383               	bcf	status, 7	;select IRP bank1
  4714  059B  0800               	movf	indf,w
  4715  059C  00A7               	movwf	(?_lcd_write_string)
  4716  059D  3080               	movlw	80h
  4717  059E  00A8               	movwf	(?_lcd_write_string+1)
  4718  059F  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4719                           	line	254
  4720                           ;HMI.c: 254: break;
  4721  05A4  2E28               	goto	l4540
  4722                           	line	255
  4723                           ;HMI.c: 255: case 1:
  4724                           	
  4725  05A5                     l4537:	
  4726                           	line	256
  4727                           	
  4728  05A5                     l11519:	
  4729                           ;HMI.c: 256: lcd_write_control(0b00000001);
  4730  05A5  3001               	movlw	(01h)
  4731  05A6  160A  118A  21CD   	fcall	_lcd_write_control
              120A  118A         
  4732                           	line	257
  4733                           ;HMI.c: 257: lcd_set_cursor(0x00);
  4734  05AB  3000               	movlw	(0)
  4735  05AC  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4736                           	line	258
  4737                           	
  4738  05B1                     l11521:	
  4739                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  4740  05B1  301B               	movlw	low((STR_14-__stringbase))
  4741  05B2  1283               	bcf	status, 5	;RP0=0, select bank0
  4742  05B3  1303               	bcf	status, 6	;RP1=0, select bank0
  4743  05B4  00A7               	movwf	(?_lcd_write_string)
  4744  05B5  3080               	movlw	80h
  4745  05B6  00A8               	movwf	(?_lcd_write_string+1)
  4746  05B7  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4747                           	line	259
  4748                           	
  4749  05BC                     l11523:	
  4750                           ;HMI.c: 259: lcd_set_cursor(0x40);
  4751  05BC  3040               	movlw	(040h)
  4752  05BD  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4753                           	line	260
  4754                           ;HMI.c: 260: lcd_write_string("<<<");
  4755  05C2  3082               	movlw	low((STR_15-__stringbase))
  4756  05C3  1283               	bcf	status, 5	;RP0=0, select bank0
  4757  05C4  1303               	bcf	status, 6	;RP1=0, select bank0
  4758  05C5  00A7               	movwf	(?_lcd_write_string)
  4759  05C6  3080               	movlw	80h
  4760  05C7  00A8               	movwf	(?_lcd_write_string+1)
  4761  05C8  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4762                           	line	261
  4763                           	
  4764  05CD                     l11525:	
  4765                           ;HMI.c: 261: lcd_set_cursor(0x44);
  4766  05CD  3044               	movlw	(044h)
  4767  05CE  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4768                           	line	262
  4769                           	
  4770  05D3                     l11527:	
  4771                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  4772  05D3  3076               	movlw	low((STR_16-__stringbase))
  4773  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  4774  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  4775  05D6  00A7               	movwf	(?_lcd_write_string)
  4776  05D7  3080               	movlw	80h
  4777  05D8  00A8               	movwf	(?_lcd_write_string+1)
  4778  05D9  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4779                           	line	263
  4780                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  4781  05DE  304D               	movlw	(04Dh)
  4782  05DF  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4783                           	line	264
  4784                           	
  4785  05E4                     l11529:	
  4786                           ;HMI.c: 264: lcd_write_string(">>>");
  4787  05E4  3086               	movlw	low((STR_17-__stringbase))
  4788  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4789  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4790  05E7  00A7               	movwf	(?_lcd_write_string)
  4791  05E8  3080               	movlw	80h
  4792  05E9  00A8               	movwf	(?_lcd_write_string+1)
  4793  05EA  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4794                           	line	265
  4795                           ;HMI.c: 265: break;
  4796  05EF  2E28               	goto	l4540
  4797                           	line	266
  4798                           ;HMI.c: 266: case 2:
  4799                           	
  4800  05F0                     l4538:	
  4801                           	line	267
  4802                           	
  4803  05F0                     l11531:	
  4804                           ;HMI.c: 267: lcd_write_control(0b00000001);
  4805  05F0  3001               	movlw	(01h)
  4806  05F1  160A  118A  21CD   	fcall	_lcd_write_control
              120A  118A         
  4807                           	line	268
  4808                           ;HMI.c: 268: lcd_set_cursor(0x00);
  4809  05F6  3000               	movlw	(0)
  4810  05F7  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4811                           	line	269
  4812                           	
  4813  05FC                     l11533:	
  4814                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  4815  05FC  300B               	movlw	low((STR_18-__stringbase))
  4816  05FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4817  05FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4818  05FF  00A7               	movwf	(?_lcd_write_string)
  4819  0600  3080               	movlw	80h
  4820  0601  00A8               	movwf	(?_lcd_write_string+1)
  4821  0602  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4822                           	line	270
  4823                           	
  4824  0607                     l11535:	
  4825                           ;HMI.c: 270: lcd_set_cursor(0x44);
  4826  0607  3044               	movlw	(044h)
  4827  0608  120A  158A  20B3   	fcall	_lcd_set_cursor
              120A  118A         
  4828                           	line	271
  4829                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  4830  060D  3038               	movlw	low((STR_19-__stringbase))
  4831  060E  1283               	bcf	status, 5	;RP0=0, select bank0
  4832  060F  1303               	bcf	status, 6	;RP1=0, select bank0
  4833  0610  00A7               	movwf	(?_lcd_write_string)
  4834  0611  3080               	movlw	80h
  4835  0612  00A8               	movwf	(?_lcd_write_string+1)
  4836  0613  160A  118A  2354   	fcall	_lcd_write_string
              120A  118A         
  4837                           	line	272
  4838                           ;HMI.c: 272: break;
  4839  0618  2E28               	goto	l4540
  4840                           	line	273
  4841                           ;HMI.c: 273: default:
  4842                           	
  4843  0619                     l4539:	
  4844                           	line	274
  4845                           ;HMI.c: 274: break;
  4846  0619  2E28               	goto	l4540
  4847                           	line	275
  4848                           	
  4849  061A                     l11537:	
  4850                           ;HMI.c: 275: }
  4851  061A  2E28               	goto	l4540
  4852                           	line	238
  4853                           	
  4854  061B                     l4532:	
  4855                           	
  4856  061B                     l11539:	
  4857  061B  1683               	bsf	status, 5	;RP0=1, select bank1
  4858  061C  1303               	bcf	status, 6	;RP1=0, select bank1
  4859  061D  0850               	movf	(_currentMenu)^080h,w	;volatile
  4860                           	; Switch size 1, requested type "space"
  4861                           ; Number of cases is 3, Range of values is 0 to 2
  4862                           ; switch strategies available:
  4863                           ; Name         Instructions Cycles
  4864                           ; simple_byte           10     6 (average)
  4865                           ; direct_byte           17     8 (fixed)
  4866                           ; jumptable            260     6 (fixed)
  4867                           ; rangetable             7     6 (fixed)
  4868                           ; spacedrange           12     9 (fixed)
  4869                           ; locatedrange           3     3 (fixed)
  4870                           ;	Chosen strategy is simple_byte
  4871                           
  4872                           	opt asmopt_off
  4873  061E  3A00               	xorlw	0^0	; case 0
  4874  061F  1903               	skipnz
  4875  0620  2CE3               	goto	l11499
  4876  0621  3A01               	xorlw	1^0	; case 1
  4877  0622  1903               	skipnz
  4878  0623  2DA5               	goto	l11519
  4879  0624  3A03               	xorlw	2^1	; case 2
  4880  0625  1903               	skipnz
  4881  0626  2DF0               	goto	l11531
  4882  0627  2E28               	goto	l4540
  4883                           	opt asmopt_on
  4884                           
  4885                           	line	275
  4886                           	
  4887  0628                     l4536:	
  4888                           	line	276
  4889                           	
  4890  0628                     l4540:	
  4891  0628  0008               	return
  4892                           	opt stack 0
  4893                           GLOBAL	__end_of_UpdateDisplay
  4894  0629                     	__end_of_UpdateDisplay:
  4895 ;; =============== function _UpdateDisplay ends ============
  4896                           
  4897                           	signat	_UpdateDisplay,88
  4898                           	global	_readAvgDistance
  4899                           psect	text1123,local,class=CODE,delta=2
  4900                           global __ptext1123
  4901  08BE                     __ptext1123:
  4902                           
  4903 ;; *************** function _readAvgDistance *****************
  4904 ;; Defined at:
  4905 ;;		line 27 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  i               2   22[BANK0 ] int 
  4910 ;;  tempIR          2   20[BANK0 ] unsigned int 
  4911 ;;  j               2   18[BANK0 ] int 
  4912 ;;  fullval         2   16[BANK0 ] unsigned int 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;		None               void
  4915 ;; Registers used:
  4916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4922 ;;      Params:         0       0       0       0       0
  4923 ;;      Locals:         0       8       0       0       0
  4924 ;;      Temps:          0       0       0       0       0
  4925 ;;      Totals:         0       8       0       0       0
  4926 ;;Total ram usage:        8 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    6
  4929 ;; This function calls:
  4930 ;;		_readDistance
  4931 ;;		___lwdiv
  4932 ;;		_ADCconvert
  4933 ;; This function is called by:
  4934 ;;		_main
  4935 ;;		_scan360
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           psect	text1123
  4939                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4940                           	line	27
  4941                           	global	__size_of_readAvgDistance
  4942  0070                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4943                           	
  4944  08BE                     _readAvgDistance:	
  4945                           	opt	stack 0
  4946                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4947                           	line	28
  4948                           	
  4949  08BE                     l11481:	
  4950                           ;infrared.c: 28: unsigned int fullval = 0, tempIR = 0;
  4951  08BE  1283               	bcf	status, 5	;RP0=0, select bank0
  4952  08BF  1303               	bcf	status, 6	;RP1=0, select bank0
  4953  08C0  01B0               	clrf	(readAvgDistance@fullval)
  4954  08C1  01B1               	clrf	(readAvgDistance@fullval+1)
  4955  08C2  01B4               	clrf	(readAvgDistance@tempIR)
  4956  08C3  01B5               	clrf	(readAvgDistance@tempIR+1)
  4957                           	line	29
  4958                           ;infrared.c: 29: int j = 0;
  4959  08C4  01B2               	clrf	(readAvgDistance@j)
  4960  08C5  01B3               	clrf	(readAvgDistance@j+1)
  4961                           	line	31
  4962                           ;infrared.c: 31: for (int i = 0; i < 8; i++)
  4963  08C6  01B6               	clrf	(readAvgDistance@i)
  4964  08C7  01B7               	clrf	(readAvgDistance@i+1)
  4965                           	
  4966  08C8                     l11483:	
  4967  08C8  0837               	movf	(readAvgDistance@i+1),w
  4968  08C9  3A80               	xorlw	80h
  4969  08CA  00FF               	movwf	btemp+1
  4970  08CB  3080               	movlw	(high(08h))^80h
  4971  08CC  027F               	subwf	btemp+1,w
  4972  08CD  1D03               	skipz
  4973  08CE  28D1               	goto	u5465
  4974  08CF  3008               	movlw	low(08h)
  4975  08D0  0236               	subwf	(readAvgDistance@i),w
  4976  08D1                     u5465:
  4977                           
  4978  08D1  1C03               	skipc
  4979  08D2  28D4               	goto	u5461
  4980  08D3  28D5               	goto	u5460
  4981  08D4                     u5461:
  4982  08D4  28D7               	goto	l11487
  4983  08D5                     u5460:
  4984  08D5  290D               	goto	l11495
  4985                           	
  4986  08D6                     l11485:	
  4987  08D6  290D               	goto	l11495
  4988                           	line	32
  4989                           	
  4990  08D7                     l2994:	
  4991                           	line	33
  4992                           	
  4993  08D7                     l11487:	
  4994                           ;infrared.c: 32: {
  4995                           ;infrared.c: 33: tempIR = readDistance();
  4996  08D7  160A  118A  21F7   	fcall	_readDistance
              120A  158A         
  4997  08DC  1283               	bcf	status, 5	;RP0=0, select bank0
  4998  08DD  1303               	bcf	status, 6	;RP1=0, select bank0
  4999  08DE  0829               	movf	(1+(?_readDistance)),w
  5000  08DF  01B5               	clrf	(readAvgDistance@tempIR+1)
  5001  08E0  07B5               	addwf	(readAvgDistance@tempIR+1)
  5002  08E1  0828               	movf	(0+(?_readDistance)),w
  5003  08E2  01B4               	clrf	(readAvgDistance@tempIR)
  5004  08E3  07B4               	addwf	(readAvgDistance@tempIR)
  5005                           
  5006                           	line	34
  5007                           	
  5008  08E4                     l11489:	
  5009                           ;infrared.c: 34: if (tempIR <= 1000)
  5010  08E4  3003               	movlw	high(03E9h)
  5011  08E5  0235               	subwf	(readAvgDistance@tempIR+1),w
  5012  08E6  30E9               	movlw	low(03E9h)
  5013  08E7  1903               	skipnz
  5014  08E8  0234               	subwf	(readAvgDistance@tempIR),w
  5015  08E9  1803               	skipnc
  5016  08EA  28EC               	goto	u5471
  5017  08EB  28ED               	goto	u5470
  5018  08EC                     u5471:
  5019  08EC  28F9               	goto	l2996
  5020  08ED                     u5470:
  5021                           	line	36
  5022                           	
  5023  08ED                     l11491:	
  5024                           ;infrared.c: 35: {
  5025                           ;infrared.c: 36: fullval += tempIR;
  5026  08ED  0834               	movf	(readAvgDistance@tempIR),w
  5027  08EE  07B0               	addwf	(readAvgDistance@fullval),f
  5028  08EF  1803               	skipnc
  5029  08F0  0AB1               	incf	(readAvgDistance@fullval+1),f
  5030  08F1  0835               	movf	(readAvgDistance@tempIR+1),w
  5031  08F2  07B1               	addwf	(readAvgDistance@fullval+1),f
  5032                           	line	37
  5033                           ;infrared.c: 37: j++;
  5034  08F3  3001               	movlw	low(01h)
  5035  08F4  07B2               	addwf	(readAvgDistance@j),f
  5036  08F5  1803               	skipnc
  5037  08F6  0AB3               	incf	(readAvgDistance@j+1),f
  5038  08F7  3000               	movlw	high(01h)
  5039  08F8  07B3               	addwf	(readAvgDistance@j+1),f
  5040                           	line	38
  5041                           	
  5042  08F9                     l2996:	
  5043                           	line	31
  5044  08F9  3001               	movlw	low(01h)
  5045  08FA  07B6               	addwf	(readAvgDistance@i),f
  5046  08FB  1803               	skipnc
  5047  08FC  0AB7               	incf	(readAvgDistance@i+1),f
  5048  08FD  3000               	movlw	high(01h)
  5049  08FE  07B7               	addwf	(readAvgDistance@i+1),f
  5050                           	
  5051  08FF                     l11493:	
  5052  08FF  0837               	movf	(readAvgDistance@i+1),w
  5053  0900  3A80               	xorlw	80h
  5054  0901  00FF               	movwf	btemp+1
  5055  0902  3080               	movlw	(high(08h))^80h
  5056  0903  027F               	subwf	btemp+1,w
  5057  0904  1D03               	skipz
  5058  0905  2908               	goto	u5485
  5059  0906  3008               	movlw	low(08h)
  5060  0907  0236               	subwf	(readAvgDistance@i),w
  5061  0908                     u5485:
  5062                           
  5063  0908  1C03               	skipc
  5064  0909  290B               	goto	u5481
  5065  090A  290C               	goto	u5480
  5066  090B                     u5481:
  5067  090B  28D7               	goto	l11487
  5068  090C                     u5480:
  5069  090C  290D               	goto	l11495
  5070                           	
  5071  090D                     l2995:	
  5072                           	line	40
  5073                           	
  5074  090D                     l11495:	
  5075                           ;infrared.c: 38: }
  5076                           ;infrared.c: 39: }
  5077                           ;infrared.c: 40: adcVal = fullval / j;
  5078  090D  1283               	bcf	status, 5	;RP0=0, select bank0
  5079  090E  1303               	bcf	status, 6	;RP1=0, select bank0
  5080  090F  0833               	movf	(readAvgDistance@j+1),w
  5081  0910  01A7               	clrf	(?___lwdiv+1)
  5082  0911  07A7               	addwf	(?___lwdiv+1)
  5083  0912  0832               	movf	(readAvgDistance@j),w
  5084  0913  01A6               	clrf	(?___lwdiv)
  5085  0914  07A6               	addwf	(?___lwdiv)
  5086                           
  5087  0915  0831               	movf	(readAvgDistance@fullval+1),w
  5088  0916  01A9               	clrf	1+(?___lwdiv)+02h
  5089  0917  07A9               	addwf	1+(?___lwdiv)+02h
  5090  0918  0830               	movf	(readAvgDistance@fullval),w
  5091  0919  01A8               	clrf	0+(?___lwdiv)+02h
  5092  091A  07A8               	addwf	0+(?___lwdiv)+02h
  5093                           
  5094  091B  160A  118A  25C0   	fcall	___lwdiv
              120A  158A         
  5095  0920  1283               	bcf	status, 5	;RP0=0, select bank0
  5096  0921  1303               	bcf	status, 6	;RP1=0, select bank0
  5097  0922  0827               	movf	(1+(?___lwdiv)),w
  5098  0923  01EB               	clrf	(_adcVal+1)	;volatile
  5099  0924  07EB               	addwf	(_adcVal+1)	;volatile
  5100  0925  0826               	movf	(0+(?___lwdiv)),w
  5101  0926  01EA               	clrf	(_adcVal)	;volatile
  5102  0927  07EA               	addwf	(_adcVal)	;volatile
  5103                           
  5104                           	line	41
  5105                           ;infrared.c: 41: ADCconvert();
  5106  0928  120A  118A  22A7   	fcall	_ADCconvert
              120A  158A         
  5107                           	line	42
  5108                           	
  5109  092D                     l2997:	
  5110  092D  0008               	return
  5111                           	opt stack 0
  5112                           GLOBAL	__end_of_readAvgDistance
  5113  092E                     	__end_of_readAvgDistance:
  5114 ;; =============== function _readAvgDistance ends ============
  5115                           
  5116                           	signat	_readAvgDistance,88
  5117                           	global	_init
  5118                           psect	text1124,local,class=CODE,delta=2
  5119                           global __ptext1124
  5120  13DA                     __ptext1124:
  5121                           
  5122 ;; *************** function _init *****************
  5123 ;; Defined at:
  5124 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;		None               void
  5131 ;; Registers used:
  5132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5138 ;;      Params:         0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0
  5140 ;;      Temps:          0       1       0       0       0
  5141 ;;      Totals:         0       1       0       0       0
  5142 ;;Total ram usage:        1 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    5
  5145 ;; This function calls:
  5146 ;;		_ser_init
  5147 ;;		_init_adc
  5148 ;;		_lcd_init
  5149 ;;		_robo_init
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           psect	text1124
  5155                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  5156                           	line	139
  5157                           	global	__size_of_init
  5158  002F                     	__size_of_init	equ	__end_of_init-_init
  5159                           	
  5160  13DA                     _init:	
  5161                           	opt	stack 2
  5162                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5163                           	line	140
  5164                           	
  5165  13DA                     l11455:	
  5166                           ;Main.c: 140: buttonPressed = 0;
  5167  13DA  01FD               	clrf	(_buttonPressed)	;volatile
  5168                           	line	142
  5169                           	
  5170  13DB                     l11457:	
  5171                           ;Main.c: 142: TRISB = 0b11111100;
  5172  13DB  30FC               	movlw	(0FCh)
  5173  13DC  1683               	bsf	status, 5	;RP0=1, select bank1
  5174  13DD  1303               	bcf	status, 6	;RP1=0, select bank1
  5175  13DE  0086               	movwf	(134)^080h	;volatile
  5176                           	line	143
  5177                           	
  5178  13DF                     l11459:	
  5179                           ;Main.c: 143: TRISC &= 0b10010000;
  5180  13DF  3090               	movlw	(090h)
  5181  13E0  1283               	bcf	status, 5	;RP0=0, select bank0
  5182  13E1  1303               	bcf	status, 6	;RP1=0, select bank0
  5183  13E2  00A3               	movwf	(??_init+0)+0
  5184  13E3  0823               	movf	(??_init+0)+0,w
  5185  13E4  1683               	bsf	status, 5	;RP0=1, select bank1
  5186  13E5  1303               	bcf	status, 6	;RP1=0, select bank1
  5187  13E6  0587               	andwf	(135)^080h,f	;volatile
  5188                           	line	146
  5189                           	
  5190  13E7                     l11461:	
  5191                           ;Main.c: 146: SSPSTAT = 0b01000000;
  5192  13E7  3040               	movlw	(040h)
  5193  13E8  0094               	movwf	(148)^080h	;volatile
  5194                           	line	147
  5195                           	
  5196  13E9                     l11463:	
  5197                           ;Main.c: 147: SSPCON = 0b10100001;
  5198  13E9  30A1               	movlw	(0A1h)
  5199  13EA  1283               	bcf	status, 5	;RP0=0, select bank0
  5200  13EB  1303               	bcf	status, 6	;RP1=0, select bank0
  5201  13EC  0094               	movwf	(20)	;volatile
  5202                           	line	150
  5203                           	
  5204  13ED                     l11465:	
  5205                           ;Main.c: 150: OPTION_REG = 0b00000100;
  5206  13ED  3004               	movlw	(04h)
  5207  13EE  1683               	bsf	status, 5	;RP0=1, select bank1
  5208  13EF  1303               	bcf	status, 6	;RP1=0, select bank1
  5209  13F0  0081               	movwf	(129)^080h	;volatile
  5210                           	line	153
  5211                           	
  5212  13F1                     l11467:	
  5213                           ;Main.c: 153: ser_init();
  5214  13F1  160A  118A  2280   	fcall	_ser_init
              160A  118A         
  5215                           	line	154
  5216                           	
  5217  13F6                     l11469:	
  5218                           ;Main.c: 154: init_adc();
  5219  13F6  160A  118A  21E1   	fcall	_init_adc
              160A  118A         
  5220                           	line	155
  5221                           	
  5222  13FB                     l11471:	
  5223                           ;Main.c: 155: lcd_init();
  5224  13FB  160A  118A  22D1   	fcall	_lcd_init
              160A  118A         
  5225                           	line	156
  5226                           	
  5227  1400                     l11473:	
  5228                           ;Main.c: 156: robo_init();
  5229  1400  160A  118A  2224   	fcall	_robo_init
              160A  118A         
  5230                           	line	160
  5231                           	
  5232  1405                     l11475:	
  5233                           ;Main.c: 160: TMR0IE = 1;
  5234  1405  168B               	bsf	(93/8),(93)&7
  5235                           	line	162
  5236                           	
  5237  1406                     l11477:	
  5238                           ;Main.c: 162: PEIE=1;
  5239  1406  170B               	bsf	(94/8),(94)&7
  5240                           	line	164
  5241                           	
  5242  1407                     l11479:	
  5243                           ;Main.c: 164: (GIE = 1);
  5244  1407  178B               	bsf	(95/8),(95)&7
  5245                           	line	165
  5246                           	
  5247  1408                     l2227:	
  5248  1408  0008               	return
  5249                           	opt stack 0
  5250                           GLOBAL	__end_of_init
  5251  1409                     	__end_of_init:
  5252 ;; =============== function _init ends ============
  5253                           
  5254                           	signat	_init,88
  5255                           	global	_readDistance
  5256                           psect	text1125,local,class=CODE,delta=2
  5257                           global __ptext1125
  5258  11F7                     __ptext1125:
  5259                           
  5260 ;; *************** function _readDistance *****************
  5261 ;; Defined at:
  5262 ;;		line 47 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  readVal         2   12[BANK0 ] unsigned int 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  2    8[BANK0 ] unsigned int 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5276 ;;      Params:         0       2       0       0       0
  5277 ;;      Locals:         0       2       0       0       0
  5278 ;;      Temps:          0       2       0       0       0
  5279 ;;      Totals:         0       6       0       0       0
  5280 ;;Total ram usage:        6 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    5
  5283 ;; This function calls:
  5284 ;;		_adc_read_channel
  5285 ;; This function is called by:
  5286 ;;		_readAvgDistance
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           psect	text1125
  5290                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  5291                           	line	47
  5292                           	global	__size_of_readDistance
  5293  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  5294                           	
  5295  11F7                     _readDistance:	
  5296                           	opt	stack 0
  5297                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5298                           	line	50
  5299                           	
  5300  11F7                     l11449:	
  5301                           ;infrared.c: 48: unsigned int readVal;
  5302                           ;infrared.c: 50: readVal = adc_read_channel(0);
  5303  11F7  3000               	movlw	(0)
  5304  11F8  160A  118A  246E   	fcall	_adc_read_channel
              160A  118A         
  5305  11FD  1283               	bcf	status, 5	;RP0=0, select bank0
  5306  11FE  1303               	bcf	status, 6	;RP1=0, select bank0
  5307  11FF  00AA               	movwf	(??_readDistance+0)+0
  5308  1200  01AB               	clrf	(??_readDistance+0)+0+1
  5309  1201  082A               	movf	0+(??_readDistance+0)+0,w
  5310  1202  00AC               	movwf	(readDistance@readVal)
  5311  1203  082B               	movf	1+(??_readDistance+0)+0,w
  5312  1204  00AD               	movwf	(readDistance@readVal+1)
  5313                           	line	52
  5314                           	
  5315  1205                     l11451:	
  5316                           ;infrared.c: 52: return readVal;
  5317  1205  082D               	movf	(readDistance@readVal+1),w
  5318  1206  01A9               	clrf	(?_readDistance+1)
  5319  1207  07A9               	addwf	(?_readDistance+1)
  5320  1208  082C               	movf	(readDistance@readVal),w
  5321  1209  01A8               	clrf	(?_readDistance)
  5322  120A  07A8               	addwf	(?_readDistance)
  5323                           
  5324  120B  2A0C               	goto	l3000
  5325                           	
  5326  120C                     l11453:	
  5327                           	line	53
  5328                           	
  5329  120C                     l3000:	
  5330  120C  0008               	return
  5331                           	opt stack 0
  5332                           GLOBAL	__end_of_readDistance
  5333  120D                     	__end_of_readDistance:
  5334 ;; =============== function _readDistance ends ============
  5335                           
  5336                           	signat	_readDistance,90
  5337                           	global	_robot_read
  5338                           psect	text1126,local,class=CODE,delta=2
  5339                           global __ptext1126
  5340  0EE0                     __ptext1126:
  5341                           
  5342 ;; *************** function _robot_read *****************
  5343 ;; Defined at:
  5344 ;;		line 41 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  readType        1    wreg     unsigned char 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  readType        1    4[BANK0 ] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;		None               void
  5351 ;; Registers used:
  5352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5358 ;;      Params:         0       0       0       0       0
  5359 ;;      Locals:         0       1       0       0       0
  5360 ;;      Temps:          0       2       0       0       0
  5361 ;;      Totals:         0       3       0       0       0
  5362 ;;Total ram usage:        3 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    5
  5365 ;; This function calls:
  5366 ;;		_ser_putch
  5367 ;;		_ser_getch
  5368 ;; This function is called by:
  5369 ;;		_main
  5370 ;;		_robotMoveSpeed
  5371 ;;		_robotTurnSpeed
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           psect	text1126
  5375                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5376                           	line	41
  5377                           	global	__size_of_robot_read
  5378  0120                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5379                           	
  5380  0EE0                     _robot_read:	
  5381                           	opt	stack 1
  5382                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5383                           ;robot_read@readType stored from wreg
  5384  0EE0  1283               	bcf	status, 5	;RP0=0, select bank0
  5385  0EE1  1303               	bcf	status, 6	;RP1=0, select bank0
  5386  0EE2  00A4               	movwf	(robot_read@readType)
  5387                           	line	42
  5388                           	
  5389  0EE3                     l11401:	
  5390                           ;robot.c: 42: ser_putch(142);
  5391  0EE3  308E               	movlw	(08Eh)
  5392  0EE4  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5393                           	line	43
  5394                           ;robot.c: 43: ser_putch(7);
  5395  0EE9  3007               	movlw	(07h)
  5396  0EEA  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5397                           	line	44
  5398                           	
  5399  0EEF                     l11403:	
  5400                           ;robot.c: 44: _delay((unsigned long)((5)*(20000000/4000.0)));
  5401                           	opt asmopt_off
  5402  0EEF  3021               movlw	33
  5403  0EF0  1283               	bcf	status, 5	;RP0=0, select bank0
  5404  0EF1  1303               	bcf	status, 6	;RP1=0, select bank0
  5405  0EF2  00A3               movwf	((??_robot_read+0)+0+1),f
  5406  0EF3  3076               	movlw	118
  5407  0EF4  00A2               movwf	((??_robot_read+0)+0),f
  5408  0EF5                     u5827:
  5409  0EF5  0BA2               	decfsz	((??_robot_read+0)+0),f
  5410  0EF6  2EF5               	goto	u5827
  5411  0EF7  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5412  0EF8  2EF5               	goto	u5827
  5413  0EF9  0064               	clrwdt
  5414                           opt asmopt_on
  5415                           
  5416                           	line	45
  5417                           	
  5418  0EFA                     l11405:	
  5419                           ;robot.c: 45: BumpSensors = ser_getch();
  5420  0EFA  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5421  0EFF  1283               	bcf	status, 5	;RP0=0, select bank0
  5422  0F00  1303               	bcf	status, 6	;RP1=0, select bank0
  5423  0F01  00A2               	movwf	(??_robot_read+0)+0
  5424  0F02  0822               	movf	(??_robot_read+0)+0,w
  5425  0F03  1683               	bsf	status, 5	;RP0=1, select bank1
  5426  0F04  1303               	bcf	status, 6	;RP1=0, select bank1
  5427  0F05  00C6               	movwf	(_BumpSensors)^080h	;volatile
  5428                           	line	46
  5429                           	
  5430  0F06                     l11407:	
  5431                           ;robot.c: 46: ser_putch(142);
  5432  0F06  308E               	movlw	(08Eh)
  5433  0F07  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5434                           	line	47
  5435                           	
  5436  0F0C                     l11409:	
  5437                           ;robot.c: 47: ser_putch(13);
  5438  0F0C  300D               	movlw	(0Dh)
  5439  0F0D  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5440                           	line	48
  5441                           ;robot.c: 48: _delay((unsigned long)((5)*(20000000/4000.0)));
  5442                           	opt asmopt_off
  5443  0F12  3021               movlw	33
  5444  0F13  1283               	bcf	status, 5	;RP0=0, select bank0
  5445  0F14  1303               	bcf	status, 6	;RP1=0, select bank0
  5446  0F15  00A3               movwf	((??_robot_read+0)+0+1),f
  5447  0F16  3076               	movlw	118
  5448  0F17  00A2               movwf	((??_robot_read+0)+0),f
  5449  0F18                     u5837:
  5450  0F18  0BA2               	decfsz	((??_robot_read+0)+0),f
  5451  0F19  2F18               	goto	u5837
  5452  0F1A  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5453  0F1B  2F18               	goto	u5837
  5454  0F1C  0064               	clrwdt
  5455                           opt asmopt_on
  5456                           
  5457                           	line	49
  5458                           	
  5459  0F1D                     l11411:	
  5460                           ;robot.c: 49: VwallSensor = ser_getch();
  5461  0F1D  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5462  0F22  1283               	bcf	status, 5	;RP0=0, select bank0
  5463  0F23  1303               	bcf	status, 6	;RP1=0, select bank0
  5464  0F24  00A2               	movwf	(??_robot_read+0)+0
  5465  0F25  0822               	movf	(??_robot_read+0)+0,w
  5466  0F26  1683               	bsf	status, 5	;RP0=1, select bank1
  5467  0F27  1303               	bcf	status, 6	;RP1=0, select bank1
  5468  0F28  00CF               	movwf	(_VwallSensor)^080h	;volatile
  5469                           	line	51
  5470                           	
  5471  0F29                     l11413:	
  5472                           ;robot.c: 51: if (readType == 0)
  5473  0F29  1283               	bcf	status, 5	;RP0=0, select bank0
  5474  0F2A  1303               	bcf	status, 6	;RP1=0, select bank0
  5475  0F2B  08A4               	movf	(robot_read@readType),f
  5476  0F2C  1D03               	skipz
  5477  0F2D  2F2F               	goto	u5431
  5478  0F2E  2F30               	goto	u5430
  5479  0F2F                     u5431:
  5480  0F2F  2F60               	goto	l11423
  5481  0F30                     u5430:
  5482                           	line	53
  5483                           	
  5484  0F30                     l11415:	
  5485                           ;robot.c: 52: {
  5486                           ;robot.c: 53: ser_putch(142);
  5487  0F30  308E               	movlw	(08Eh)
  5488  0F31  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5489                           	line	54
  5490                           ;robot.c: 54: ser_putch(19);
  5491  0F36  3013               	movlw	(013h)
  5492  0F37  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5493                           	line	55
  5494                           	
  5495  0F3C                     l11417:	
  5496                           ;robot.c: 55: _delay((unsigned long)((5)*(20000000/4000.0)));
  5497                           	opt asmopt_off
  5498  0F3C  3021               movlw	33
  5499  0F3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5500  0F3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5501  0F3F  00A3               movwf	((??_robot_read+0)+0+1),f
  5502  0F40  3076               	movlw	118
  5503  0F41  00A2               movwf	((??_robot_read+0)+0),f
  5504  0F42                     u5847:
  5505  0F42  0BA2               	decfsz	((??_robot_read+0)+0),f
  5506  0F43  2F42               	goto	u5847
  5507  0F44  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5508  0F45  2F42               	goto	u5847
  5509  0F46  0064               	clrwdt
  5510                           opt asmopt_on
  5511                           
  5512                           	line	56
  5513                           	
  5514  0F47                     l11419:	
  5515                           ;robot.c: 56: DistHighByte = ser_getch();
  5516  0F47  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5517  0F4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5518  0F4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5519  0F4E  00A2               	movwf	(??_robot_read+0)+0
  5520  0F4F  0822               	movf	(??_robot_read+0)+0,w
  5521  0F50  1683               	bsf	status, 5	;RP0=1, select bank1
  5522  0F51  1303               	bcf	status, 6	;RP1=0, select bank1
  5523  0F52  00C8               	movwf	(_DistHighByte)^080h	;volatile
  5524                           	line	57
  5525                           	
  5526  0F53                     l11421:	
  5527                           ;robot.c: 57: DistLowByte = ser_getch();
  5528  0F53  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5529  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  5530  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  5531  0F5A  00A2               	movwf	(??_robot_read+0)+0
  5532  0F5B  0822               	movf	(??_robot_read+0)+0,w
  5533  0F5C  1683               	bsf	status, 5	;RP0=1, select bank1
  5534  0F5D  1303               	bcf	status, 6	;RP1=0, select bank1
  5535  0F5E  00C9               	movwf	(_DistLowByte)^080h	;volatile
  5536                           	line	58
  5537                           ;robot.c: 58: }
  5538  0F5F  2FFF               	goto	l6018
  5539                           	line	59
  5540                           	
  5541  0F60                     l6013:	
  5542                           	
  5543  0F60                     l11423:	
  5544                           ;robot.c: 59: else if (readType == 1)
  5545  0F60  1283               	bcf	status, 5	;RP0=0, select bank0
  5546  0F61  0824               	movf	(robot_read@readType),w
  5547  0F62  3A01               	xorlw	01h
  5548  0F63  1D03               	skipz
  5549  0F64  2F66               	goto	u5441
  5550  0F65  2F67               	goto	u5440
  5551  0F66                     u5441:
  5552  0F66  2F97               	goto	l11433
  5553  0F67                     u5440:
  5554                           	line	61
  5555                           	
  5556  0F67                     l11425:	
  5557                           ;robot.c: 60: {
  5558                           ;robot.c: 61: ser_putch(142);
  5559  0F67  308E               	movlw	(08Eh)
  5560  0F68  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5561                           	line	62
  5562                           ;robot.c: 62: ser_putch(20);
  5563  0F6D  3014               	movlw	(014h)
  5564  0F6E  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5565                           	line	63
  5566                           	
  5567  0F73                     l11427:	
  5568                           ;robot.c: 63: _delay((unsigned long)((5)*(20000000/4000.0)));
  5569                           	opt asmopt_off
  5570  0F73  3021               movlw	33
  5571  0F74  1283               	bcf	status, 5	;RP0=0, select bank0
  5572  0F75  1303               	bcf	status, 6	;RP1=0, select bank0
  5573  0F76  00A3               movwf	((??_robot_read+0)+0+1),f
  5574  0F77  3076               	movlw	118
  5575  0F78  00A2               movwf	((??_robot_read+0)+0),f
  5576  0F79                     u5857:
  5577  0F79  0BA2               	decfsz	((??_robot_read+0)+0),f
  5578  0F7A  2F79               	goto	u5857
  5579  0F7B  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5580  0F7C  2F79               	goto	u5857
  5581  0F7D  0064               	clrwdt
  5582                           opt asmopt_on
  5583                           
  5584                           	line	64
  5585                           	
  5586  0F7E                     l11429:	
  5587                           ;robot.c: 64: AngleHighByte = ser_getch();
  5588  0F7E  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5589  0F83  1283               	bcf	status, 5	;RP0=0, select bank0
  5590  0F84  1303               	bcf	status, 6	;RP1=0, select bank0
  5591  0F85  00A2               	movwf	(??_robot_read+0)+0
  5592  0F86  0822               	movf	(??_robot_read+0)+0,w
  5593  0F87  1683               	bsf	status, 5	;RP0=1, select bank1
  5594  0F88  1303               	bcf	status, 6	;RP1=0, select bank1
  5595  0F89  00C4               	movwf	(_AngleHighByte)^080h	;volatile
  5596                           	line	65
  5597                           	
  5598  0F8A                     l11431:	
  5599                           ;robot.c: 65: AngleLowByte = ser_getch();
  5600  0F8A  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5601  0F8F  1283               	bcf	status, 5	;RP0=0, select bank0
  5602  0F90  1303               	bcf	status, 6	;RP1=0, select bank0
  5603  0F91  00A2               	movwf	(??_robot_read+0)+0
  5604  0F92  0822               	movf	(??_robot_read+0)+0,w
  5605  0F93  1683               	bsf	status, 5	;RP0=1, select bank1
  5606  0F94  1303               	bcf	status, 6	;RP1=0, select bank1
  5607  0F95  00C5               	movwf	(_AngleLowByte)^080h	;volatile
  5608                           	line	66
  5609                           ;robot.c: 66: }
  5610  0F96  2FFF               	goto	l6018
  5611                           	line	67
  5612                           	
  5613  0F97                     l6015:	
  5614                           	
  5615  0F97                     l11433:	
  5616                           ;robot.c: 67: else if (readType == 2)
  5617  0F97  1283               	bcf	status, 5	;RP0=0, select bank0
  5618  0F98  0824               	movf	(robot_read@readType),w
  5619  0F99  3A02               	xorlw	02h
  5620  0F9A  1D03               	skipz
  5621  0F9B  2F9D               	goto	u5451
  5622  0F9C  2F9E               	goto	u5450
  5623  0F9D                     u5451:
  5624  0F9D  2FFF               	goto	l6018
  5625  0F9E                     u5450:
  5626                           	line	70
  5627                           	
  5628  0F9E                     l11435:	
  5629                           ;robot.c: 68: {
  5630                           ;robot.c: 70: ser_putch(142);
  5631  0F9E  308E               	movlw	(08Eh)
  5632  0F9F  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5633                           	line	71
  5634                           ;robot.c: 71: ser_putch(19);
  5635  0FA4  3013               	movlw	(013h)
  5636  0FA5  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5637                           	line	72
  5638                           	
  5639  0FAA                     l11437:	
  5640                           ;robot.c: 72: _delay((unsigned long)((5)*(20000000/4000.0)));
  5641                           	opt asmopt_off
  5642  0FAA  3021               movlw	33
  5643  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5644  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5645  0FAD  00A3               movwf	((??_robot_read+0)+0+1),f
  5646  0FAE  3076               	movlw	118
  5647  0FAF  00A2               movwf	((??_robot_read+0)+0),f
  5648  0FB0                     u5867:
  5649  0FB0  0BA2               	decfsz	((??_robot_read+0)+0),f
  5650  0FB1  2FB0               	goto	u5867
  5651  0FB2  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5652  0FB3  2FB0               	goto	u5867
  5653  0FB4  0064               	clrwdt
  5654                           opt asmopt_on
  5655                           
  5656                           	line	73
  5657                           	
  5658  0FB5                     l11439:	
  5659                           ;robot.c: 73: DistHighByte = ser_getch();
  5660  0FB5  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5661  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  5662  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  5663  0FBC  00A2               	movwf	(??_robot_read+0)+0
  5664  0FBD  0822               	movf	(??_robot_read+0)+0,w
  5665  0FBE  1683               	bsf	status, 5	;RP0=1, select bank1
  5666  0FBF  1303               	bcf	status, 6	;RP1=0, select bank1
  5667  0FC0  00C8               	movwf	(_DistHighByte)^080h	;volatile
  5668                           	line	74
  5669                           	
  5670  0FC1                     l11441:	
  5671                           ;robot.c: 74: DistLowByte = ser_getch();
  5672  0FC1  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5673  0FC6  1283               	bcf	status, 5	;RP0=0, select bank0
  5674  0FC7  1303               	bcf	status, 6	;RP1=0, select bank0
  5675  0FC8  00A2               	movwf	(??_robot_read+0)+0
  5676  0FC9  0822               	movf	(??_robot_read+0)+0,w
  5677  0FCA  1683               	bsf	status, 5	;RP0=1, select bank1
  5678  0FCB  1303               	bcf	status, 6	;RP1=0, select bank1
  5679  0FCC  00C9               	movwf	(_DistLowByte)^080h	;volatile
  5680                           	line	75
  5681                           	
  5682  0FCD                     l11443:	
  5683                           ;robot.c: 75: ser_putch(142);
  5684  0FCD  308E               	movlw	(08Eh)
  5685  0FCE  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5686                           	line	76
  5687                           	
  5688  0FD3                     l11445:	
  5689                           ;robot.c: 76: ser_putch(20);
  5690  0FD3  3014               	movlw	(014h)
  5691  0FD4  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  5692                           	line	77
  5693                           	
  5694  0FD9                     l11447:	
  5695                           ;robot.c: 77: _delay((unsigned long)((5)*(20000000/4000.0)));
  5696                           	opt asmopt_off
  5697  0FD9  3021               movlw	33
  5698  0FDA  1283               	bcf	status, 5	;RP0=0, select bank0
  5699  0FDB  1303               	bcf	status, 6	;RP1=0, select bank0
  5700  0FDC  00A3               movwf	((??_robot_read+0)+0+1),f
  5701  0FDD  3076               	movlw	118
  5702  0FDE  00A2               movwf	((??_robot_read+0)+0),f
  5703  0FDF                     u5877:
  5704  0FDF  0BA2               	decfsz	((??_robot_read+0)+0),f
  5705  0FE0  2FDF               	goto	u5877
  5706  0FE1  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5707  0FE2  2FDF               	goto	u5877
  5708  0FE3  0064               	clrwdt
  5709                           opt asmopt_on
  5710                           
  5711                           	line	78
  5712                           ;robot.c: 78: AngleHighByte = ser_getch();
  5713  0FE4  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5714  0FE9  1283               	bcf	status, 5	;RP0=0, select bank0
  5715  0FEA  1303               	bcf	status, 6	;RP1=0, select bank0
  5716  0FEB  00A2               	movwf	(??_robot_read+0)+0
  5717  0FEC  0822               	movf	(??_robot_read+0)+0,w
  5718  0FED  1683               	bsf	status, 5	;RP0=1, select bank1
  5719  0FEE  1303               	bcf	status, 6	;RP1=0, select bank1
  5720  0FEF  00C4               	movwf	(_AngleHighByte)^080h	;volatile
  5721                           	line	79
  5722                           ;robot.c: 79: AngleLowByte = ser_getch();
  5723  0FF0  160A  118A  225E   	fcall	_ser_getch
              120A  158A         
  5724  0FF5  1283               	bcf	status, 5	;RP0=0, select bank0
  5725  0FF6  1303               	bcf	status, 6	;RP1=0, select bank0
  5726  0FF7  00A2               	movwf	(??_robot_read+0)+0
  5727  0FF8  0822               	movf	(??_robot_read+0)+0,w
  5728  0FF9  1683               	bsf	status, 5	;RP0=1, select bank1
  5729  0FFA  1303               	bcf	status, 6	;RP1=0, select bank1
  5730  0FFB  00C5               	movwf	(_AngleLowByte)^080h	;volatile
  5731  0FFC  2FFF               	goto	l6018
  5732                           	line	80
  5733                           	
  5734  0FFD                     l6017:	
  5735  0FFD  2FFF               	goto	l6018
  5736                           	line	81
  5737                           	
  5738  0FFE                     l6016:	
  5739  0FFE  2FFF               	goto	l6018
  5740                           	
  5741  0FFF                     l6014:	
  5742                           	
  5743  0FFF                     l6018:	
  5744  0FFF  0008               	return
  5745                           	opt stack 0
  5746                           GLOBAL	__end_of_robot_read
  5747  1000                     	__end_of_robot_read:
  5748 ;; =============== function _robot_read ends ============
  5749                           
  5750                           	signat	_robot_read,4216
  5751                           	global	_lcd_init
  5752                           psect	text1127,local,class=CODE,delta=2
  5753                           global __ptext1127
  5754  12D1                     __ptext1127:
  5755                           
  5756 ;; *************** function _lcd_init *****************
  5757 ;; Defined at:
  5758 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;		None               void
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0, pclath, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5772 ;;      Params:         0       0       0       0       0
  5773 ;;      Locals:         0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0
  5775 ;;      Totals:         0       0       0       0       0
  5776 ;;Total ram usage:        0 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    4
  5779 ;; This function calls:
  5780 ;;		_lcd_write_control
  5781 ;; This function is called by:
  5782 ;;		_init
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           psect	text1127
  5786                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5787                           	line	101
  5788                           	global	__size_of_lcd_init
  5789  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5790                           	
  5791  12D1                     _lcd_init:	
  5792                           	opt	stack 2
  5793                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5794                           	line	105
  5795                           	
  5796  12D1                     l11381:	
  5797                           ;lcd.c: 105: ADCON1 = 0b00000010;
  5798  12D1  3002               	movlw	(02h)
  5799  12D2  1683               	bsf	status, 5	;RP0=1, select bank1
  5800  12D3  1303               	bcf	status, 6	;RP1=0, select bank1
  5801  12D4  009F               	movwf	(159)^080h	;volatile
  5802                           	line	108
  5803                           	
  5804  12D5                     l11383:	
  5805                           ;lcd.c: 108: PORTD = 0;
  5806  12D5  1283               	bcf	status, 5	;RP0=0, select bank0
  5807  12D6  1303               	bcf	status, 6	;RP1=0, select bank0
  5808  12D7  0188               	clrf	(8)	;volatile
  5809                           	line	109
  5810                           	
  5811  12D8                     l11385:	
  5812                           ;lcd.c: 109: PORTE = 0;
  5813  12D8  0189               	clrf	(9)	;volatile
  5814                           	line	111
  5815                           	
  5816  12D9                     l11387:	
  5817                           ;lcd.c: 111: TRISD = 0b00000000;
  5818  12D9  1683               	bsf	status, 5	;RP0=1, select bank1
  5819  12DA  1303               	bcf	status, 6	;RP1=0, select bank1
  5820  12DB  0188               	clrf	(136)^080h	;volatile
  5821                           	line	112
  5822                           	
  5823  12DC                     l11389:	
  5824                           ;lcd.c: 112: TRISE = 0b00000000;
  5825  12DC  0189               	clrf	(137)^080h	;volatile
  5826                           	line	115
  5827                           	
  5828  12DD                     l11391:	
  5829                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5830  12DD  3001               	movlw	(01h)
  5831  12DE  160A  118A  21CD   	fcall	_lcd_write_control
              160A  118A         
  5832                           	line	116
  5833                           	
  5834  12E3                     l11393:	
  5835                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5836  12E3  3038               	movlw	(038h)
  5837  12E4  160A  118A  21CD   	fcall	_lcd_write_control
              160A  118A         
  5838                           	line	117
  5839                           	
  5840  12E9                     l11395:	
  5841                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5842  12E9  300C               	movlw	(0Ch)
  5843  12EA  160A  118A  21CD   	fcall	_lcd_write_control
              160A  118A         
  5844                           	line	118
  5845                           	
  5846  12EF                     l11397:	
  5847                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5848  12EF  3006               	movlw	(06h)
  5849  12F0  160A  118A  21CD   	fcall	_lcd_write_control
              160A  118A         
  5850                           	line	119
  5851                           	
  5852  12F5                     l11399:	
  5853                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5854  12F5  3002               	movlw	(02h)
  5855  12F6  160A  118A  21CD   	fcall	_lcd_write_control
              160A  118A         
  5856                           	line	121
  5857                           	
  5858  12FB                     l1429:	
  5859  12FB  0008               	return
  5860                           	opt stack 0
  5861                           GLOBAL	__end_of_lcd_init
  5862  12FC                     	__end_of_lcd_init:
  5863 ;; =============== function _lcd_init ends ============
  5864                           
  5865                           	signat	_lcd_init,88
  5866                           	global	_lcd_write_string
  5867                           psect	text1128,local,class=CODE,delta=2
  5868                           global __ptext1128
  5869  1354                     __ptext1128:
  5870                           
  5871 ;; *************** function _lcd_write_string *****************
  5872 ;; Defined at:
  5873 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5876 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  5877 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@LCDOutput(16), STR_12(4), 
  5878 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  5879 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  5880 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;		None               void
  5885 ;; Registers used:
  5886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5892 ;;      Params:         0       2       0       0       0
  5893 ;;      Locals:         0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0
  5895 ;;      Totals:         0       2       0       0       0
  5896 ;;Total ram usage:        2 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    4
  5899 ;; This function calls:
  5900 ;;		_lcd_write_data
  5901 ;; This function is called by:
  5902 ;;		_UpdateDisplay
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           psect	text1128
  5906                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5907                           	line	48
  5908                           	global	__size_of_lcd_write_string
  5909  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5910                           	
  5911  1354                     _lcd_write_string:	
  5912                           	opt	stack 1
  5913                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5914                           	line	50
  5915                           	
  5916  1354                     l11373:	
  5917                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5918  1354  2B6E               	goto	l11379
  5919                           	
  5920  1355                     l1409:	
  5921                           	
  5922  1355                     l11375:	
  5923  1355  1283               	bcf	status, 5	;RP0=0, select bank0
  5924  1356  1303               	bcf	status, 6	;RP1=0, select bank0
  5925  1357  0828               	movf	(lcd_write_string@s+1),w
  5926  1358  00FF               	movwf	btemp+1
  5927  1359  0827               	movf	(lcd_write_string@s),w
  5928  135A  0084               	movwf	fsr0
  5929  135B  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5930  1360  160A  118A  2193   	fcall	_lcd_write_data
              160A  118A         
  5931                           	
  5932  1365                     l11377:	
  5933  1365  3001               	movlw	low(01h)
  5934  1366  1283               	bcf	status, 5	;RP0=0, select bank0
  5935  1367  1303               	bcf	status, 6	;RP1=0, select bank0
  5936  1368  07A7               	addwf	(lcd_write_string@s),f
  5937  1369  1803               	skipnc
  5938  136A  0AA8               	incf	(lcd_write_string@s+1),f
  5939  136B  3000               	movlw	high(01h)
  5940  136C  07A8               	addwf	(lcd_write_string@s+1),f
  5941  136D  2B6E               	goto	l11379
  5942                           	
  5943  136E                     l1408:	
  5944                           	
  5945  136E                     l11379:	
  5946  136E  1283               	bcf	status, 5	;RP0=0, select bank0
  5947  136F  1303               	bcf	status, 6	;RP1=0, select bank0
  5948  1370  0828               	movf	(lcd_write_string@s+1),w
  5949  1371  00FF               	movwf	btemp+1
  5950  1372  0827               	movf	(lcd_write_string@s),w
  5951  1373  0084               	movwf	fsr0
  5952  1374  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5953  1379  3800               	iorlw	0
  5954  137A  1D03               	skipz
  5955  137B  2B7D               	goto	u5421
  5956  137C  2B7E               	goto	u5420
  5957  137D                     u5421:
  5958  137D  2B55               	goto	l11375
  5959  137E                     u5420:
  5960  137E  2B7F               	goto	l1411
  5961                           	
  5962  137F                     l1410:	
  5963                           	line	51
  5964                           	
  5965  137F                     l1411:	
  5966  137F  0008               	return
  5967                           	opt stack 0
  5968                           GLOBAL	__end_of_lcd_write_string
  5969  1380                     	__end_of_lcd_write_string:
  5970 ;; =============== function _lcd_write_string ends ============
  5971                           
  5972                           	signat	_lcd_write_string,4216
  5973                           	global	_lcd_set_cursor
  5974                           psect	text1129,local,class=CODE,delta=2
  5975                           global __ptext1129
  5976  08B3                     __ptext1129:
  5977                           
  5978 ;; *************** function _lcd_set_cursor *****************
  5979 ;; Defined at:
  5980 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  address         1    wreg     unsigned char 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  address         1    3[BANK0 ] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;		None               void
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0, pclath, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5994 ;;      Params:         0       0       0       0       0
  5995 ;;      Locals:         0       1       0       0       0
  5996 ;;      Temps:          0       0       0       0       0
  5997 ;;      Totals:         0       1       0       0       0
  5998 ;;Total ram usage:        1 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    4
  6001 ;; This function calls:
  6002 ;;		_lcd_write_control
  6003 ;; This function is called by:
  6004 ;;		_UpdateDisplay
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           psect	text1129
  6008                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6009                           	line	42
  6010                           	global	__size_of_lcd_set_cursor
  6011  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  6012                           	
  6013  08B3                     _lcd_set_cursor:	
  6014                           	opt	stack 1
  6015                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6016                           ;lcd_set_cursor@address stored from wreg
  6017  08B3  1283               	bcf	status, 5	;RP0=0, select bank0
  6018  08B4  1303               	bcf	status, 6	;RP1=0, select bank0
  6019  08B5  00A3               	movwf	(lcd_set_cursor@address)
  6020                           	line	43
  6021                           	
  6022  08B6                     l11369:	
  6023                           ;lcd.c: 43: address |= 0b10000000;
  6024  08B6  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  6025                           	line	44
  6026                           	
  6027  08B7                     l11371:	
  6028                           ;lcd.c: 44: lcd_write_control(address);
  6029  08B7  0823               	movf	(lcd_set_cursor@address),w
  6030  08B8  160A  118A  21CD   	fcall	_lcd_write_control
              120A  158A         
  6031                           	line	45
  6032                           	
  6033  08BD                     l1405:	
  6034  08BD  0008               	return
  6035                           	opt stack 0
  6036                           GLOBAL	__end_of_lcd_set_cursor
  6037  08BE                     	__end_of_lcd_set_cursor:
  6038 ;; =============== function _lcd_set_cursor ends ============
  6039                           
  6040                           	signat	_lcd_set_cursor,4216
  6041                           	global	___awtoft
  6042                           psect	text1130,local,class=CODE,delta=2
  6043                           global __ptext1130
  6044  1328                     __ptext1130:
  6045                           
  6046 ;; *************** function ___awtoft *****************
  6047 ;; Defined at:
  6048 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  c               2   22[BANK0 ] int 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  sign            1   27[BANK0 ] unsigned char 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  3   22[BANK0 ] float 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0, pclath, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6062 ;;      Params:         0       3       0       0       0
  6063 ;;      Locals:         0       1       0       0       0
  6064 ;;      Temps:          0       2       0       0       0
  6065 ;;      Totals:         0       6       0       0       0
  6066 ;;Total ram usage:        6 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    4
  6069 ;; This function calls:
  6070 ;;		___ftpack
  6071 ;; This function is called by:
  6072 ;;		_main
  6073 ;;		_robotMoveSpeed
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           psect	text1130
  6077                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6078                           	line	33
  6079                           	global	__size_of___awtoft
  6080  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  6081                           	
  6082  1328                     ___awtoft:	
  6083                           	opt	stack 3
  6084                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6085                           	line	36
  6086                           	
  6087  1328                     l11361:	
  6088  1328  1283               	bcf	status, 5	;RP0=0, select bank0
  6089  1329  1303               	bcf	status, 6	;RP1=0, select bank0
  6090  132A  01BB               	clrf	(___awtoft@sign)
  6091                           	line	37
  6092  132B  1FB7               	btfss	(___awtoft@c+1),7
  6093  132C  2B2E               	goto	u5411
  6094  132D  2B2F               	goto	u5410
  6095  132E                     u5411:
  6096  132E  2B38               	goto	l11365
  6097  132F                     u5410:
  6098                           	line	38
  6099                           	
  6100  132F                     l11363:	
  6101  132F  09B6               	comf	(___awtoft@c),f
  6102  1330  09B7               	comf	(___awtoft@c+1),f
  6103  1331  0AB6               	incf	(___awtoft@c),f
  6104  1332  1903               	skipnz
  6105  1333  0AB7               	incf	(___awtoft@c+1),f
  6106                           	line	39
  6107  1334  01BB               	clrf	(___awtoft@sign)
  6108  1335  1403               	bsf	status,0
  6109  1336  0DBB               	rlf	(___awtoft@sign),f
  6110  1337  2B38               	goto	l11365
  6111                           	line	40
  6112                           	
  6113  1338                     l7631:	
  6114                           	line	41
  6115                           	
  6116  1338                     l11365:	
  6117  1338  0836               	movf	(___awtoft@c),w
  6118  1339  00A0               	movwf	(?___ftpack)
  6119  133A  0837               	movf	(___awtoft@c+1),w
  6120  133B  00A1               	movwf	(?___ftpack+1)
  6121  133C  01A2               	clrf	(?___ftpack+2)
  6122  133D  308E               	movlw	(08Eh)
  6123  133E  00B9               	movwf	(??___awtoft+0)+0
  6124  133F  0839               	movf	(??___awtoft+0)+0,w
  6125  1340  00A3               	movwf	0+(?___ftpack)+03h
  6126  1341  083B               	movf	(___awtoft@sign),w
  6127  1342  00BA               	movwf	(??___awtoft+1)+0
  6128  1343  083A               	movf	(??___awtoft+1)+0,w
  6129  1344  00A4               	movwf	0+(?___ftpack)+04h
  6130  1345  120A  118A  2774   	fcall	___ftpack
              160A  118A         
  6131  134A  1283               	bcf	status, 5	;RP0=0, select bank0
  6132  134B  1303               	bcf	status, 6	;RP1=0, select bank0
  6133  134C  0820               	movf	(0+(?___ftpack)),w
  6134  134D  00B6               	movwf	(?___awtoft)
  6135  134E  0821               	movf	(1+(?___ftpack)),w
  6136  134F  00B7               	movwf	(?___awtoft+1)
  6137  1350  0822               	movf	(2+(?___ftpack)),w
  6138  1351  00B8               	movwf	(?___awtoft+2)
  6139  1352  2B53               	goto	l7632
  6140                           	
  6141  1353                     l11367:	
  6142                           	line	42
  6143                           	
  6144  1353                     l7632:	
  6145  1353  0008               	return
  6146                           	opt stack 0
  6147                           GLOBAL	__end_of___awtoft
  6148  1354                     	__end_of___awtoft:
  6149 ;; =============== function ___awtoft ends ============
  6150                           
  6151                           	signat	___awtoft,4219
  6152                           	global	___ftmul
  6153                           psect	text1131,local,class=CODE,delta=2
  6154                           global __ptext1131
  6155  0CF2                     __ptext1131:
  6156                           
  6157 ;; *************** function ___ftmul *****************
  6158 ;; Defined at:
  6159 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  f1              3   38[BANK0 ] float 
  6162 ;;  f2              3   41[BANK0 ] float 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  f3_as_produc    3   49[BANK0 ] unsigned um
  6165 ;;  sign            1   53[BANK0 ] unsigned char 
  6166 ;;  cntr            1   52[BANK0 ] unsigned char 
  6167 ;;  exp             1   48[BANK0 ] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  3   38[BANK0 ] float 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, pclath, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6177 ;;      Params:         0       6       0       0       0
  6178 ;;      Locals:         0       6       0       0       0
  6179 ;;      Temps:          0       4       0       0       0
  6180 ;;      Totals:         0      16       0       0       0
  6181 ;;Total ram usage:       16 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    4
  6184 ;; This function calls:
  6185 ;;		___ftpack
  6186 ;; This function is called by:
  6187 ;;		_main
  6188 ;;		_robotMoveSpeed
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           psect	text1131
  6192                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6193                           	line	52
  6194                           	global	__size_of___ftmul
  6195  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  6196                           	
  6197  0CF2                     ___ftmul:	
  6198                           	opt	stack 3
  6199                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6200                           	line	56
  6201                           	
  6202  0CF2                     l11311:	
  6203  0CF2  1283               	bcf	status, 5	;RP0=0, select bank0
  6204  0CF3  1303               	bcf	status, 6	;RP1=0, select bank0
  6205  0CF4  0846               	movf	(___ftmul@f1),w
  6206  0CF5  00CC               	movwf	((??___ftmul+0)+0)
  6207  0CF6  0847               	movf	(___ftmul@f1+1),w
  6208  0CF7  00CD               	movwf	((??___ftmul+0)+0+1)
  6209  0CF8  0848               	movf	(___ftmul@f1+2),w
  6210  0CF9  00CE               	movwf	((??___ftmul+0)+0+2)
  6211  0CFA  1003               	clrc
  6212  0CFB  0D4D               	rlf	(??___ftmul+0)+1,w
  6213  0CFC  0D4E               	rlf	(??___ftmul+0)+2,w
  6214  0CFD  00CF               	movwf	(??___ftmul+3)+0
  6215  0CFE  084F               	movf	(??___ftmul+3)+0,w
  6216  0CFF  00D0               	movwf	(___ftmul@exp)
  6217  0D00  08D0               	movf	((___ftmul@exp)),f
  6218  0D01  1D03               	skipz
  6219  0D02  2D04               	goto	u5271
  6220  0D03  2D05               	goto	u5270
  6221  0D04                     u5271:
  6222  0D04  2D0D               	goto	l11317
  6223  0D05                     u5270:
  6224                           	line	57
  6225                           	
  6226  0D05                     l11313:	
  6227  0D05  3000               	movlw	0x0
  6228  0D06  00C6               	movwf	(?___ftmul)
  6229  0D07  3000               	movlw	0x0
  6230  0D08  00C7               	movwf	(?___ftmul+1)
  6231  0D09  3000               	movlw	0x0
  6232  0D0A  00C8               	movwf	(?___ftmul+2)
  6233  0D0B  2DDF               	goto	l7594
  6234                           	
  6235  0D0C                     l11315:	
  6236  0D0C  2DDF               	goto	l7594
  6237                           	
  6238  0D0D                     l7593:	
  6239                           	line	58
  6240                           	
  6241  0D0D                     l11317:	
  6242  0D0D  0849               	movf	(___ftmul@f2),w
  6243  0D0E  00CC               	movwf	((??___ftmul+0)+0)
  6244  0D0F  084A               	movf	(___ftmul@f2+1),w
  6245  0D10  00CD               	movwf	((??___ftmul+0)+0+1)
  6246  0D11  084B               	movf	(___ftmul@f2+2),w
  6247  0D12  00CE               	movwf	((??___ftmul+0)+0+2)
  6248  0D13  1003               	clrc
  6249  0D14  0D4D               	rlf	(??___ftmul+0)+1,w
  6250  0D15  0D4E               	rlf	(??___ftmul+0)+2,w
  6251  0D16  00CF               	movwf	(??___ftmul+3)+0
  6252  0D17  084F               	movf	(??___ftmul+3)+0,w
  6253  0D18  00D5               	movwf	(___ftmul@sign)
  6254  0D19  08D5               	movf	((___ftmul@sign)),f
  6255  0D1A  1D03               	skipz
  6256  0D1B  2D1D               	goto	u5281
  6257  0D1C  2D1E               	goto	u5280
  6258  0D1D                     u5281:
  6259  0D1D  2D26               	goto	l11323
  6260  0D1E                     u5280:
  6261                           	line	59
  6262                           	
  6263  0D1E                     l11319:	
  6264  0D1E  3000               	movlw	0x0
  6265  0D1F  00C6               	movwf	(?___ftmul)
  6266  0D20  3000               	movlw	0x0
  6267  0D21  00C7               	movwf	(?___ftmul+1)
  6268  0D22  3000               	movlw	0x0
  6269  0D23  00C8               	movwf	(?___ftmul+2)
  6270  0D24  2DDF               	goto	l7594
  6271                           	
  6272  0D25                     l11321:	
  6273  0D25  2DDF               	goto	l7594
  6274                           	
  6275  0D26                     l7595:	
  6276                           	line	60
  6277                           	
  6278  0D26                     l11323:	
  6279  0D26  0855               	movf	(___ftmul@sign),w
  6280  0D27  3E7B               	addlw	07Bh
  6281  0D28  00CC               	movwf	(??___ftmul+0)+0
  6282  0D29  084C               	movf	(??___ftmul+0)+0,w
  6283  0D2A  07D0               	addwf	(___ftmul@exp),f
  6284                           	line	61
  6285  0D2B  0846               	movf	(___ftmul@f1),w
  6286  0D2C  00CC               	movwf	((??___ftmul+0)+0)
  6287  0D2D  0847               	movf	(___ftmul@f1+1),w
  6288  0D2E  00CD               	movwf	((??___ftmul+0)+0+1)
  6289  0D2F  0848               	movf	(___ftmul@f1+2),w
  6290  0D30  00CE               	movwf	((??___ftmul+0)+0+2)
  6291  0D31  3010               	movlw	010h
  6292  0D32                     u5295:
  6293  0D32  1003               	clrc
  6294  0D33  0CCE               	rrf	(??___ftmul+0)+2,f
  6295  0D34  0CCD               	rrf	(??___ftmul+0)+1,f
  6296  0D35  0CCC               	rrf	(??___ftmul+0)+0,f
  6297  0D36                     u5290:
  6298  0D36  3EFF               	addlw	-1
  6299  0D37  1D03               	skipz
  6300  0D38  2D32               	goto	u5295
  6301  0D39  084C               	movf	0+(??___ftmul+0)+0,w
  6302  0D3A  00CF               	movwf	(??___ftmul+3)+0
  6303  0D3B  084F               	movf	(??___ftmul+3)+0,w
  6304  0D3C  00D5               	movwf	(___ftmul@sign)
  6305                           	line	62
  6306  0D3D  0849               	movf	(___ftmul@f2),w
  6307  0D3E  00CC               	movwf	((??___ftmul+0)+0)
  6308  0D3F  084A               	movf	(___ftmul@f2+1),w
  6309  0D40  00CD               	movwf	((??___ftmul+0)+0+1)
  6310  0D41  084B               	movf	(___ftmul@f2+2),w
  6311  0D42  00CE               	movwf	((??___ftmul+0)+0+2)
  6312  0D43  3010               	movlw	010h
  6313  0D44                     u5305:
  6314  0D44  1003               	clrc
  6315  0D45  0CCE               	rrf	(??___ftmul+0)+2,f
  6316  0D46  0CCD               	rrf	(??___ftmul+0)+1,f
  6317  0D47  0CCC               	rrf	(??___ftmul+0)+0,f
  6318  0D48                     u5300:
  6319  0D48  3EFF               	addlw	-1
  6320  0D49  1D03               	skipz
  6321  0D4A  2D44               	goto	u5305
  6322  0D4B  084C               	movf	0+(??___ftmul+0)+0,w
  6323  0D4C  00CF               	movwf	(??___ftmul+3)+0
  6324  0D4D  084F               	movf	(??___ftmul+3)+0,w
  6325  0D4E  06D5               	xorwf	(___ftmul@sign),f
  6326                           	line	63
  6327  0D4F  3080               	movlw	(080h)
  6328  0D50  00CC               	movwf	(??___ftmul+0)+0
  6329  0D51  084C               	movf	(??___ftmul+0)+0,w
  6330  0D52  05D5               	andwf	(___ftmul@sign),f
  6331                           	line	64
  6332                           	
  6333  0D53                     l11325:	
  6334  0D53  17C7               	bsf	(___ftmul@f1)+(15/8),(15)&7
  6335                           	line	66
  6336                           	
  6337  0D54                     l11327:	
  6338  0D54  17CA               	bsf	(___ftmul@f2)+(15/8),(15)&7
  6339                           	line	67
  6340                           	
  6341  0D55                     l11329:	
  6342  0D55  30FF               	movlw	0FFh
  6343  0D56  05C9               	andwf	(___ftmul@f2),f
  6344  0D57  30FF               	movlw	0FFh
  6345  0D58  05CA               	andwf	(___ftmul@f2+1),f
  6346  0D59  3000               	movlw	0
  6347  0D5A  05CB               	andwf	(___ftmul@f2+2),f
  6348                           	line	68
  6349                           	
  6350  0D5B                     l11331:	
  6351  0D5B  3000               	movlw	0
  6352  0D5C  00D1               	movwf	(___ftmul@f3_as_product)
  6353  0D5D  3000               	movlw	0
  6354  0D5E  00D2               	movwf	(___ftmul@f3_as_product+1)
  6355  0D5F  3000               	movlw	0
  6356  0D60  00D3               	movwf	(___ftmul@f3_as_product+2)
  6357                           	line	69
  6358                           	
  6359  0D61                     l11333:	
  6360  0D61  3007               	movlw	(07h)
  6361  0D62  00CC               	movwf	(??___ftmul+0)+0
  6362  0D63  084C               	movf	(??___ftmul+0)+0,w
  6363  0D64  00D4               	movwf	(___ftmul@cntr)
  6364  0D65  2D66               	goto	l11335
  6365                           	line	70
  6366                           	
  6367  0D66                     l7596:	
  6368                           	line	71
  6369                           	
  6370  0D66                     l11335:	
  6371  0D66  1C46               	btfss	(___ftmul@f1),(0)&7
  6372  0D67  2D69               	goto	u5311
  6373  0D68  2D6A               	goto	u5310
  6374  0D69                     u5311:
  6375  0D69  2D7B               	goto	l11339
  6376  0D6A                     u5310:
  6377                           	line	72
  6378                           	
  6379  0D6A                     l11337:	
  6380  0D6A  0849               	movf	(___ftmul@f2),w
  6381  0D6B  07D1               	addwf	(___ftmul@f3_as_product),f
  6382  0D6C  084A               	movf	(___ftmul@f2+1),w
  6383  0D6D  1103               	clrz
  6384  0D6E  1803               	skipnc
  6385  0D6F  0A4A               	incf	(___ftmul@f2+1),w
  6386  0D70  1903               	skipnz
  6387  0D71  2D73               	goto	u5321
  6388  0D72  07D2               	addwf	(___ftmul@f3_as_product+1),f
  6389  0D73                     u5321:
  6390  0D73  084B               	movf	(___ftmul@f2+2),w
  6391  0D74  1103               	clrz
  6392  0D75  1803               	skipnc
  6393  0D76  0A4B               	incf	(___ftmul@f2+2),w
  6394  0D77  1903               	skipnz
  6395  0D78  2D7A               	goto	u5322
  6396  0D79  07D3               	addwf	(___ftmul@f3_as_product+2),f
  6397  0D7A                     u5322:
  6398                           
  6399  0D7A  2D7B               	goto	l11339
  6400                           	
  6401  0D7B                     l7597:	
  6402                           	line	73
  6403                           	
  6404  0D7B                     l11339:	
  6405  0D7B  3001               	movlw	01h
  6406  0D7C                     u5335:
  6407  0D7C  1003               	clrc
  6408  0D7D  0CC8               	rrf	(___ftmul@f1+2),f
  6409  0D7E  0CC7               	rrf	(___ftmul@f1+1),f
  6410  0D7F  0CC6               	rrf	(___ftmul@f1),f
  6411  0D80  3EFF               	addlw	-1
  6412  0D81  1D03               	skipz
  6413  0D82  2D7C               	goto	u5335
  6414                           
  6415                           	line	74
  6416                           	
  6417  0D83                     l11341:	
  6418  0D83  3001               	movlw	01h
  6419  0D84                     u5345:
  6420  0D84  1003               	clrc
  6421  0D85  0DC9               	rlf	(___ftmul@f2),f
  6422  0D86  0DCA               	rlf	(___ftmul@f2+1),f
  6423  0D87  0DCB               	rlf	(___ftmul@f2+2),f
  6424  0D88  3EFF               	addlw	-1
  6425  0D89  1D03               	skipz
  6426  0D8A  2D84               	goto	u5345
  6427                           	line	75
  6428                           	
  6429  0D8B                     l11343:	
  6430  0D8B  3001               	movlw	low(01h)
  6431  0D8C  02D4               	subwf	(___ftmul@cntr),f
  6432  0D8D  1D03               	btfss	status,2
  6433  0D8E  2D90               	goto	u5351
  6434  0D8F  2D91               	goto	u5350
  6435  0D90                     u5351:
  6436  0D90  2D66               	goto	l11335
  6437  0D91                     u5350:
  6438  0D91  2D92               	goto	l11345
  6439                           	
  6440  0D92                     l7598:	
  6441                           	line	76
  6442                           	
  6443  0D92                     l11345:	
  6444  0D92  3009               	movlw	(09h)
  6445  0D93  00CC               	movwf	(??___ftmul+0)+0
  6446  0D94  084C               	movf	(??___ftmul+0)+0,w
  6447  0D95  00D4               	movwf	(___ftmul@cntr)
  6448  0D96  2D97               	goto	l11347
  6449                           	line	77
  6450                           	
  6451  0D97                     l7599:	
  6452                           	line	78
  6453                           	
  6454  0D97                     l11347:	
  6455  0D97  1C46               	btfss	(___ftmul@f1),(0)&7
  6456  0D98  2D9A               	goto	u5361
  6457  0D99  2D9B               	goto	u5360
  6458  0D9A                     u5361:
  6459  0D9A  2DAC               	goto	l11351
  6460  0D9B                     u5360:
  6461                           	line	79
  6462                           	
  6463  0D9B                     l11349:	
  6464  0D9B  0849               	movf	(___ftmul@f2),w
  6465  0D9C  07D1               	addwf	(___ftmul@f3_as_product),f
  6466  0D9D  084A               	movf	(___ftmul@f2+1),w
  6467  0D9E  1103               	clrz
  6468  0D9F  1803               	skipnc
  6469  0DA0  0A4A               	incf	(___ftmul@f2+1),w
  6470  0DA1  1903               	skipnz
  6471  0DA2  2DA4               	goto	u5371
  6472  0DA3  07D2               	addwf	(___ftmul@f3_as_product+1),f
  6473  0DA4                     u5371:
  6474  0DA4  084B               	movf	(___ftmul@f2+2),w
  6475  0DA5  1103               	clrz
  6476  0DA6  1803               	skipnc
  6477  0DA7  0A4B               	incf	(___ftmul@f2+2),w
  6478  0DA8  1903               	skipnz
  6479  0DA9  2DAB               	goto	u5372
  6480  0DAA  07D3               	addwf	(___ftmul@f3_as_product+2),f
  6481  0DAB                     u5372:
  6482                           
  6483  0DAB  2DAC               	goto	l11351
  6484                           	
  6485  0DAC                     l7600:	
  6486                           	line	80
  6487                           	
  6488  0DAC                     l11351:	
  6489  0DAC  3001               	movlw	01h
  6490  0DAD                     u5385:
  6491  0DAD  1003               	clrc
  6492  0DAE  0CC8               	rrf	(___ftmul@f1+2),f
  6493  0DAF  0CC7               	rrf	(___ftmul@f1+1),f
  6494  0DB0  0CC6               	rrf	(___ftmul@f1),f
  6495  0DB1  3EFF               	addlw	-1
  6496  0DB2  1D03               	skipz
  6497  0DB3  2DAD               	goto	u5385
  6498                           
  6499                           	line	81
  6500                           	
  6501  0DB4                     l11353:	
  6502  0DB4  3001               	movlw	01h
  6503  0DB5                     u5395:
  6504  0DB5  1003               	clrc
  6505  0DB6  0CD3               	rrf	(___ftmul@f3_as_product+2),f
  6506  0DB7  0CD2               	rrf	(___ftmul@f3_as_product+1),f
  6507  0DB8  0CD1               	rrf	(___ftmul@f3_as_product),f
  6508  0DB9  3EFF               	addlw	-1
  6509  0DBA  1D03               	skipz
  6510  0DBB  2DB5               	goto	u5395
  6511                           
  6512                           	line	82
  6513                           	
  6514  0DBC                     l11355:	
  6515  0DBC  3001               	movlw	low(01h)
  6516  0DBD  02D4               	subwf	(___ftmul@cntr),f
  6517  0DBE  1D03               	btfss	status,2
  6518  0DBF  2DC1               	goto	u5401
  6519  0DC0  2DC2               	goto	u5400
  6520  0DC1                     u5401:
  6521  0DC1  2D97               	goto	l11347
  6522  0DC2                     u5400:
  6523  0DC2  2DC3               	goto	l11357
  6524                           	
  6525  0DC3                     l7601:	
  6526                           	line	83
  6527                           	
  6528  0DC3                     l11357:	
  6529  0DC3  0851               	movf	(___ftmul@f3_as_product),w
  6530  0DC4  00A0               	movwf	(?___ftpack)
  6531  0DC5  0852               	movf	(___ftmul@f3_as_product+1),w
  6532  0DC6  00A1               	movwf	(?___ftpack+1)
  6533  0DC7  0853               	movf	(___ftmul@f3_as_product+2),w
  6534  0DC8  00A2               	movwf	(?___ftpack+2)
  6535  0DC9  0850               	movf	(___ftmul@exp),w
  6536  0DCA  00CC               	movwf	(??___ftmul+0)+0
  6537  0DCB  084C               	movf	(??___ftmul+0)+0,w
  6538  0DCC  00A3               	movwf	0+(?___ftpack)+03h
  6539  0DCD  0855               	movf	(___ftmul@sign),w
  6540  0DCE  00CD               	movwf	(??___ftmul+1)+0
  6541  0DCF  084D               	movf	(??___ftmul+1)+0,w
  6542  0DD0  00A4               	movwf	0+(?___ftpack)+04h
  6543  0DD1  120A  118A  2774   	fcall	___ftpack
              120A  158A         
  6544  0DD6  1283               	bcf	status, 5	;RP0=0, select bank0
  6545  0DD7  1303               	bcf	status, 6	;RP1=0, select bank0
  6546  0DD8  0820               	movf	(0+(?___ftpack)),w
  6547  0DD9  00C6               	movwf	(?___ftmul)
  6548  0DDA  0821               	movf	(1+(?___ftpack)),w
  6549  0DDB  00C7               	movwf	(?___ftmul+1)
  6550  0DDC  0822               	movf	(2+(?___ftpack)),w
  6551  0DDD  00C8               	movwf	(?___ftmul+2)
  6552  0DDE  2DDF               	goto	l7594
  6553                           	
  6554  0DDF                     l11359:	
  6555                           	line	84
  6556                           	
  6557  0DDF                     l7594:	
  6558  0DDF  0008               	return
  6559                           	opt stack 0
  6560                           GLOBAL	__end_of___ftmul
  6561  0DE0                     	__end_of___ftmul:
  6562 ;; =============== function ___ftmul ends ============
  6563                           
  6564                           	signat	___ftmul,8315
  6565                           	global	___ftdiv
  6566                           psect	text1132,local,class=CODE,delta=2
  6567                           global __ptext1132
  6568  0C2A                     __ptext1132:
  6569                           
  6570 ;; *************** function ___ftdiv *****************
  6571 ;; Defined at:
  6572 ;;		line 50 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  f2              3   22[BANK0 ] float 
  6575 ;;  f1              3   25[BANK0 ] float 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  f3              3   33[BANK0 ] float 
  6578 ;;  sign            1   37[BANK0 ] unsigned char 
  6579 ;;  exp             1   36[BANK0 ] unsigned char 
  6580 ;;  cntr            1   32[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  3   22[BANK0 ] float 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0, pclath, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         0       6       0       0       0
  6591 ;;      Locals:         0       6       0       0       0
  6592 ;;      Temps:          0       4       0       0       0
  6593 ;;      Totals:         0      16       0       0       0
  6594 ;;Total ram usage:       16 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    4
  6597 ;; This function calls:
  6598 ;;		___ftpack
  6599 ;; This function is called by:
  6600 ;;		_robotMoveSpeed
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           psect	text1132
  6604                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6605                           	line	50
  6606                           	global	__size_of___ftdiv
  6607  00C8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  6608                           	
  6609  0C2A                     ___ftdiv:	
  6610                           	opt	stack 2
  6611                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6612                           	line	55
  6613                           	
  6614  0C2A                     l11269:	
  6615  0C2A  1283               	bcf	status, 5	;RP0=0, select bank0
  6616  0C2B  1303               	bcf	status, 6	;RP1=0, select bank0
  6617  0C2C  0839               	movf	(___ftdiv@f1),w
  6618  0C2D  00BC               	movwf	((??___ftdiv+0)+0)
  6619  0C2E  083A               	movf	(___ftdiv@f1+1),w
  6620  0C2F  00BD               	movwf	((??___ftdiv+0)+0+1)
  6621  0C30  083B               	movf	(___ftdiv@f1+2),w
  6622  0C31  00BE               	movwf	((??___ftdiv+0)+0+2)
  6623  0C32  1003               	clrc
  6624  0C33  0D3D               	rlf	(??___ftdiv+0)+1,w
  6625  0C34  0D3E               	rlf	(??___ftdiv+0)+2,w
  6626  0C35  00BF               	movwf	(??___ftdiv+3)+0
  6627  0C36  083F               	movf	(??___ftdiv+3)+0,w
  6628  0C37  00C4               	movwf	(___ftdiv@exp)
  6629  0C38  08C4               	movf	((___ftdiv@exp)),f
  6630  0C39  1D03               	skipz
  6631  0C3A  2C3C               	goto	u5191
  6632  0C3B  2C3D               	goto	u5190
  6633  0C3C                     u5191:
  6634  0C3C  2C45               	goto	l11275
  6635  0C3D                     u5190:
  6636                           	line	56
  6637                           	
  6638  0C3D                     l11271:	
  6639  0C3D  3000               	movlw	0x0
  6640  0C3E  00B6               	movwf	(?___ftdiv)
  6641  0C3F  3000               	movlw	0x0
  6642  0C40  00B7               	movwf	(?___ftdiv+1)
  6643  0C41  3000               	movlw	0x0
  6644  0C42  00B8               	movwf	(?___ftdiv+2)
  6645  0C43  2CF1               	goto	l7584
  6646                           	
  6647  0C44                     l11273:	
  6648  0C44  2CF1               	goto	l7584
  6649                           	
  6650  0C45                     l7583:	
  6651                           	line	57
  6652                           	
  6653  0C45                     l11275:	
  6654  0C45  0836               	movf	(___ftdiv@f2),w
  6655  0C46  00BC               	movwf	((??___ftdiv+0)+0)
  6656  0C47  0837               	movf	(___ftdiv@f2+1),w
  6657  0C48  00BD               	movwf	((??___ftdiv+0)+0+1)
  6658  0C49  0838               	movf	(___ftdiv@f2+2),w
  6659  0C4A  00BE               	movwf	((??___ftdiv+0)+0+2)
  6660  0C4B  1003               	clrc
  6661  0C4C  0D3D               	rlf	(??___ftdiv+0)+1,w
  6662  0C4D  0D3E               	rlf	(??___ftdiv+0)+2,w
  6663  0C4E  00BF               	movwf	(??___ftdiv+3)+0
  6664  0C4F  083F               	movf	(??___ftdiv+3)+0,w
  6665  0C50  00C5               	movwf	(___ftdiv@sign)
  6666  0C51  08C5               	movf	((___ftdiv@sign)),f
  6667  0C52  1D03               	skipz
  6668  0C53  2C55               	goto	u5201
  6669  0C54  2C56               	goto	u5200
  6670  0C55                     u5201:
  6671  0C55  2C5E               	goto	l11281
  6672  0C56                     u5200:
  6673                           	line	58
  6674                           	
  6675  0C56                     l11277:	
  6676  0C56  3000               	movlw	0x0
  6677  0C57  00B6               	movwf	(?___ftdiv)
  6678  0C58  3000               	movlw	0x0
  6679  0C59  00B7               	movwf	(?___ftdiv+1)
  6680  0C5A  3000               	movlw	0x0
  6681  0C5B  00B8               	movwf	(?___ftdiv+2)
  6682  0C5C  2CF1               	goto	l7584
  6683                           	
  6684  0C5D                     l11279:	
  6685  0C5D  2CF1               	goto	l7584
  6686                           	
  6687  0C5E                     l7585:	
  6688                           	line	59
  6689                           	
  6690  0C5E                     l11281:	
  6691  0C5E  3000               	movlw	0
  6692  0C5F  00C1               	movwf	(___ftdiv@f3)
  6693  0C60  3000               	movlw	0
  6694  0C61  00C2               	movwf	(___ftdiv@f3+1)
  6695  0C62  3000               	movlw	0
  6696  0C63  00C3               	movwf	(___ftdiv@f3+2)
  6697                           	line	60
  6698                           	
  6699  0C64                     l11283:	
  6700  0C64  3089               	movlw	(089h)
  6701  0C65  0745               	addwf	(___ftdiv@sign),w
  6702  0C66  00BC               	movwf	(??___ftdiv+0)+0
  6703  0C67  083C               	movf	0+(??___ftdiv+0)+0,w
  6704  0C68  02C4               	subwf	(___ftdiv@exp),f
  6705                           	line	61
  6706                           	
  6707  0C69                     l11285:	
  6708  0C69  0839               	movf	(___ftdiv@f1),w
  6709  0C6A  00BC               	movwf	((??___ftdiv+0)+0)
  6710  0C6B  083A               	movf	(___ftdiv@f1+1),w
  6711  0C6C  00BD               	movwf	((??___ftdiv+0)+0+1)
  6712  0C6D  083B               	movf	(___ftdiv@f1+2),w
  6713  0C6E  00BE               	movwf	((??___ftdiv+0)+0+2)
  6714  0C6F  3010               	movlw	010h
  6715  0C70                     u5215:
  6716  0C70  1003               	clrc
  6717  0C71  0CBE               	rrf	(??___ftdiv+0)+2,f
  6718  0C72  0CBD               	rrf	(??___ftdiv+0)+1,f
  6719  0C73  0CBC               	rrf	(??___ftdiv+0)+0,f
  6720  0C74                     u5210:
  6721  0C74  3EFF               	addlw	-1
  6722  0C75  1D03               	skipz
  6723  0C76  2C70               	goto	u5215
  6724  0C77  083C               	movf	0+(??___ftdiv+0)+0,w
  6725  0C78  00BF               	movwf	(??___ftdiv+3)+0
  6726  0C79  083F               	movf	(??___ftdiv+3)+0,w
  6727  0C7A  00C5               	movwf	(___ftdiv@sign)
  6728                           	line	62
  6729                           	
  6730  0C7B                     l11287:	
  6731  0C7B  0836               	movf	(___ftdiv@f2),w
  6732  0C7C  00BC               	movwf	((??___ftdiv+0)+0)
  6733  0C7D  0837               	movf	(___ftdiv@f2+1),w
  6734  0C7E  00BD               	movwf	((??___ftdiv+0)+0+1)
  6735  0C7F  0838               	movf	(___ftdiv@f2+2),w
  6736  0C80  00BE               	movwf	((??___ftdiv+0)+0+2)
  6737  0C81  3010               	movlw	010h
  6738  0C82                     u5225:
  6739  0C82  1003               	clrc
  6740  0C83  0CBE               	rrf	(??___ftdiv+0)+2,f
  6741  0C84  0CBD               	rrf	(??___ftdiv+0)+1,f
  6742  0C85  0CBC               	rrf	(??___ftdiv+0)+0,f
  6743  0C86                     u5220:
  6744  0C86  3EFF               	addlw	-1
  6745  0C87  1D03               	skipz
  6746  0C88  2C82               	goto	u5225
  6747  0C89  083C               	movf	0+(??___ftdiv+0)+0,w
  6748  0C8A  00BF               	movwf	(??___ftdiv+3)+0
  6749  0C8B  083F               	movf	(??___ftdiv+3)+0,w
  6750  0C8C  06C5               	xorwf	(___ftdiv@sign),f
  6751                           	line	63
  6752                           	
  6753  0C8D                     l11289:	
  6754  0C8D  3080               	movlw	(080h)
  6755  0C8E  00BC               	movwf	(??___ftdiv+0)+0
  6756  0C8F  083C               	movf	(??___ftdiv+0)+0,w
  6757  0C90  05C5               	andwf	(___ftdiv@sign),f
  6758                           	line	64
  6759                           	
  6760  0C91                     l11291:	
  6761  0C91  17BA               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  6762                           	line	65
  6763  0C92  30FF               	movlw	0FFh
  6764  0C93  05B9               	andwf	(___ftdiv@f1),f
  6765  0C94  30FF               	movlw	0FFh
  6766  0C95  05BA               	andwf	(___ftdiv@f1+1),f
  6767  0C96  3000               	movlw	0
  6768  0C97  05BB               	andwf	(___ftdiv@f1+2),f
  6769                           	line	66
  6770                           	
  6771  0C98                     l11293:	
  6772  0C98  17B7               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  6773                           	line	67
  6774  0C99  30FF               	movlw	0FFh
  6775  0C9A  05B6               	andwf	(___ftdiv@f2),f
  6776  0C9B  30FF               	movlw	0FFh
  6777  0C9C  05B7               	andwf	(___ftdiv@f2+1),f
  6778  0C9D  3000               	movlw	0
  6779  0C9E  05B8               	andwf	(___ftdiv@f2+2),f
  6780                           	line	68
  6781  0C9F  3018               	movlw	(018h)
  6782  0CA0  00BC               	movwf	(??___ftdiv+0)+0
  6783  0CA1  083C               	movf	(??___ftdiv+0)+0,w
  6784  0CA2  00C0               	movwf	(___ftdiv@cntr)
  6785  0CA3  2CA4               	goto	l11295
  6786                           	line	69
  6787                           	
  6788  0CA4                     l7586:	
  6789                           	line	70
  6790                           	
  6791  0CA4                     l11295:	
  6792  0CA4  3001               	movlw	01h
  6793  0CA5                     u5235:
  6794  0CA5  1003               	clrc
  6795  0CA6  0DC1               	rlf	(___ftdiv@f3),f
  6796  0CA7  0DC2               	rlf	(___ftdiv@f3+1),f
  6797  0CA8  0DC3               	rlf	(___ftdiv@f3+2),f
  6798  0CA9  3EFF               	addlw	-1
  6799  0CAA  1D03               	skipz
  6800  0CAB  2CA5               	goto	u5235
  6801                           	line	71
  6802                           	
  6803  0CAC                     l11297:	
  6804  0CAC  0838               	movf	(___ftdiv@f2+2),w
  6805  0CAD  023B               	subwf	(___ftdiv@f1+2),w
  6806  0CAE  1D03               	skipz
  6807  0CAF  2CB6               	goto	u5245
  6808  0CB0  0837               	movf	(___ftdiv@f2+1),w
  6809  0CB1  023A               	subwf	(___ftdiv@f1+1),w
  6810  0CB2  1D03               	skipz
  6811  0CB3  2CB6               	goto	u5245
  6812  0CB4  0836               	movf	(___ftdiv@f2),w
  6813  0CB5  0239               	subwf	(___ftdiv@f1),w
  6814  0CB6                     u5245:
  6815  0CB6  1C03               	skipc
  6816  0CB7  2CB9               	goto	u5241
  6817  0CB8  2CBA               	goto	u5240
  6818  0CB9                     u5241:
  6819  0CB9  2CC6               	goto	l11303
  6820  0CBA                     u5240:
  6821                           	line	72
  6822                           	
  6823  0CBA                     l11299:	
  6824  0CBA  0836               	movf	(___ftdiv@f2),w
  6825  0CBB  02B9               	subwf	(___ftdiv@f1),f
  6826  0CBC  0837               	movf	(___ftdiv@f2+1),w
  6827  0CBD  1C03               	skipc
  6828  0CBE  0F37               	incfsz	(___ftdiv@f2+1),w
  6829  0CBF  02BA               	subwf	(___ftdiv@f1+1),f
  6830  0CC0  0838               	movf	(___ftdiv@f2+2),w
  6831  0CC1  1C03               	skipc
  6832  0CC2  0A38               	incf	(___ftdiv@f2+2),w
  6833  0CC3  02BB               	subwf	(___ftdiv@f1+2),f
  6834                           	line	73
  6835                           	
  6836  0CC4                     l11301:	
  6837  0CC4  1441               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  6838  0CC5  2CC6               	goto	l11303
  6839                           	line	74
  6840                           	
  6841  0CC6                     l7587:	
  6842                           	line	75
  6843                           	
  6844  0CC6                     l11303:	
  6845  0CC6  3001               	movlw	01h
  6846  0CC7                     u5255:
  6847  0CC7  1003               	clrc
  6848  0CC8  0DB9               	rlf	(___ftdiv@f1),f
  6849  0CC9  0DBA               	rlf	(___ftdiv@f1+1),f
  6850  0CCA  0DBB               	rlf	(___ftdiv@f1+2),f
  6851  0CCB  3EFF               	addlw	-1
  6852  0CCC  1D03               	skipz
  6853  0CCD  2CC7               	goto	u5255
  6854                           	line	76
  6855                           	
  6856  0CCE                     l11305:	
  6857  0CCE  3001               	movlw	low(01h)
  6858  0CCF  02C0               	subwf	(___ftdiv@cntr),f
  6859  0CD0  1D03               	btfss	status,2
  6860  0CD1  2CD3               	goto	u5261
  6861  0CD2  2CD4               	goto	u5260
  6862  0CD3                     u5261:
  6863  0CD3  2CA4               	goto	l11295
  6864  0CD4                     u5260:
  6865  0CD4  2CD5               	goto	l11307
  6866                           	
  6867  0CD5                     l7588:	
  6868                           	line	77
  6869                           	
  6870  0CD5                     l11307:	
  6871  0CD5  0841               	movf	(___ftdiv@f3),w
  6872  0CD6  00A0               	movwf	(?___ftpack)
  6873  0CD7  0842               	movf	(___ftdiv@f3+1),w
  6874  0CD8  00A1               	movwf	(?___ftpack+1)
  6875  0CD9  0843               	movf	(___ftdiv@f3+2),w
  6876  0CDA  00A2               	movwf	(?___ftpack+2)
  6877  0CDB  0844               	movf	(___ftdiv@exp),w
  6878  0CDC  00BC               	movwf	(??___ftdiv+0)+0
  6879  0CDD  083C               	movf	(??___ftdiv+0)+0,w
  6880  0CDE  00A3               	movwf	0+(?___ftpack)+03h
  6881  0CDF  0845               	movf	(___ftdiv@sign),w
  6882  0CE0  00BD               	movwf	(??___ftdiv+1)+0
  6883  0CE1  083D               	movf	(??___ftdiv+1)+0,w
  6884  0CE2  00A4               	movwf	0+(?___ftpack)+04h
  6885  0CE3  120A  118A  2774   	fcall	___ftpack
              120A  158A         
  6886  0CE8  1283               	bcf	status, 5	;RP0=0, select bank0
  6887  0CE9  1303               	bcf	status, 6	;RP1=0, select bank0
  6888  0CEA  0820               	movf	(0+(?___ftpack)),w
  6889  0CEB  00B6               	movwf	(?___ftdiv)
  6890  0CEC  0821               	movf	(1+(?___ftpack)),w
  6891  0CED  00B7               	movwf	(?___ftdiv+1)
  6892  0CEE  0822               	movf	(2+(?___ftpack)),w
  6893  0CEF  00B8               	movwf	(?___ftdiv+2)
  6894  0CF0  2CF1               	goto	l7584
  6895                           	
  6896  0CF1                     l11309:	
  6897                           	line	78
  6898                           	
  6899  0CF1                     l7584:	
  6900  0CF1  0008               	return
  6901                           	opt stack 0
  6902                           GLOBAL	__end_of___ftdiv
  6903  0CF2                     	__end_of___ftdiv:
  6904 ;; =============== function ___ftdiv ends ============
  6905                           
  6906                           	signat	___ftdiv,8315
  6907                           	global	_abs
  6908                           psect	text1133,local,class=CODE,delta=2
  6909                           global __ptext1133
  6910  1439                     __ptext1133:
  6911                           
  6912 ;; *************** function _abs *****************
  6913 ;; Defined at:
  6914 ;;		line 211 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  v               2    6[BANK0 ] int 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  2    6[BANK0 ] int 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6928 ;;      Params:         0       2       0       0       0
  6929 ;;      Locals:         0       0       0       0       0
  6930 ;;      Temps:          0       2       0       0       0
  6931 ;;      Totals:         0       4       0       0       0
  6932 ;;Total ram usage:        4 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; Hardware stack levels required when called:    4
  6935 ;; This function calls:
  6936 ;;		___wmul
  6937 ;; This function is called by:
  6938 ;;		_robotMoveSpeed
  6939 ;;		_robotTurnSpeed
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           psect	text1133
  6943                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6944                           	line	211
  6945                           	global	__size_of_abs
  6946  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  6947                           	
  6948  1439                     _abs:	
  6949                           	opt	stack 2
  6950                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6951                           	line	212
  6952                           	
  6953  1439                     l11265:	
  6954                           ;robot.c: 212: return (v * ((v > 0) - (v < 0)));
  6955  1439  3000               	movlw	0
  6956  143A  1283               	bcf	status, 5	;RP0=0, select bank0
  6957  143B  1303               	bcf	status, 6	;RP1=0, select bank0
  6958  143C  1BA7               	btfsc	(abs@v+1),7
  6959  143D  3001               	movlw	1
  6960  143E  00A8               	movwf	(??_abs+0)+0
  6961  143F  01A9               	clrf	(??_abs+0)+0+1
  6962  1440  09A8               	comf	(??_abs+0)+0,f
  6963  1441  09A9               	comf	(??_abs+0)+1,f
  6964  1442  0AA8               	incf	(??_abs+0)+0,f
  6965  1443  1903               	skipnz
  6966  1444  0AA9               	incf	(??_abs+0)+1,f
  6967  1445  0827               	movf	(abs@v+1),w
  6968  1446  3A80               	xorlw	80h
  6969  1447  00FF               	movwf	btemp+1
  6970  1448  3080               	movlw	(high(01h))^80h
  6971  1449  027F               	subwf	btemp+1,w
  6972  144A  1D03               	skipz
  6973  144B  2C4E               	goto	u5185
  6974  144C  3001               	movlw	low(01h)
  6975  144D  0226               	subwf	(abs@v),w
  6976  144E                     u5185:
  6977                           
  6978  144E  3000               	movlw	0
  6979  144F  1803               	skipnc
  6980  1450  3001               	movlw	1
  6981  1451  1283               	bcf	status, 5	;RP0=0, select bank0
  6982  1452  1303               	bcf	status, 6	;RP1=0, select bank0
  6983  1453  0728               	addwf	0+(??_abs+0)+0,w
  6984  1454  00A0               	movwf	(?___wmul)
  6985  1455  0829               	movf	1+(??_abs+0)+0,w
  6986  1456  1803               	skipnc
  6987  1457  0A29               	incf	1+(??_abs+0)+0,w
  6988  1458  00A1               	movwf	((?___wmul))+1
  6989  1459  0827               	movf	(abs@v+1),w
  6990  145A  01A3               	clrf	1+(?___wmul)+02h
  6991  145B  07A3               	addwf	1+(?___wmul)+02h
  6992  145C  0826               	movf	(abs@v),w
  6993  145D  01A2               	clrf	0+(?___wmul)+02h
  6994  145E  07A2               	addwf	0+(?___wmul)+02h
  6995                           
  6996  145F  160A  118A  22FC   	fcall	___wmul
              160A  118A         
  6997  1464  1283               	bcf	status, 5	;RP0=0, select bank0
  6998  1465  1303               	bcf	status, 6	;RP1=0, select bank0
  6999  1466  0821               	movf	(1+(?___wmul)),w
  7000  1467  01A7               	clrf	(?_abs+1)
  7001  1468  07A7               	addwf	(?_abs+1)
  7002  1469  0820               	movf	(0+(?___wmul)),w
  7003  146A  01A6               	clrf	(?_abs)
  7004  146B  07A6               	addwf	(?_abs)
  7005                           
  7006  146C  2C6D               	goto	l6050
  7007                           	
  7008  146D                     l11267:	
  7009                           	line	213
  7010                           	
  7011  146D                     l6050:	
  7012  146D  0008               	return
  7013                           	opt stack 0
  7014                           GLOBAL	__end_of_abs
  7015  146E                     	__end_of_abs:
  7016 ;; =============== function _abs ends ============
  7017                           
  7018                           	signat	_abs,4218
  7019                           	global	_RobotDrive
  7020                           psect	text1134,local,class=CODE,delta=2
  7021                           global __ptext1134
  7022  1380                     __ptext1134:
  7023                           
  7024 ;; *************** function _RobotDrive *****************
  7025 ;; Defined at:
  7026 ;;		line 86 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  speed           2   54[BANK0 ] int 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  speedhighByt    1   58[BANK0 ] unsigned char 
  7031 ;;  speedlowByte    1   57[BANK0 ] unsigned char 
  7032 ;; Return value:  Size  Location     Type
  7033 ;;		None               void
  7034 ;; Registers used:
  7035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7041 ;;      Params:         0       2       0       0       0
  7042 ;;      Locals:         0       2       0       0       0
  7043 ;;      Temps:          0       1       0       0       0
  7044 ;;      Totals:         0       5       0       0       0
  7045 ;;Total ram usage:        5 bytes
  7046 ;; Hardware stack levels used:    1
  7047 ;; Hardware stack levels required when called:    4
  7048 ;; This function calls:
  7049 ;;		_ser_putch
  7050 ;; This function is called by:
  7051 ;;		_robotMoveSpeed
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           psect	text1134
  7055                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7056                           	line	86
  7057                           	global	__size_of_RobotDrive
  7058  002D                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  7059                           	
  7060  1380                     _RobotDrive:	
  7061                           	opt	stack 2
  7062                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7063                           	line	88
  7064                           	
  7065  1380                     l11251:	
  7066                           ;robot.c: 88: unsigned char speedlowByte = (unsigned char)(speed);
  7067  1380  1283               	bcf	status, 5	;RP0=0, select bank0
  7068  1381  1303               	bcf	status, 6	;RP1=0, select bank0
  7069  1382  0856               	movf	(RobotDrive@speed),w
  7070  1383  00D8               	movwf	(??_RobotDrive+0)+0
  7071  1384  0858               	movf	(??_RobotDrive+0)+0,w
  7072  1385  00D9               	movwf	(RobotDrive@speedlowByte)
  7073                           	line	89
  7074                           	
  7075  1386                     l11253:	
  7076                           ;robot.c: 89: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  7077  1386  0857               	movf	(RobotDrive@speed+1),w
  7078  1387  00D8               	movwf	(??_RobotDrive+0)+0
  7079  1388  0858               	movf	(??_RobotDrive+0)+0,w
  7080  1389  00DA               	movwf	(RobotDrive@speedhighByte)
  7081                           	line	91
  7082                           	
  7083  138A                     l11255:	
  7084                           ;robot.c: 91: ser_putch(137);
  7085  138A  3089               	movlw	(089h)
  7086  138B  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  7087                           	line	93
  7088                           	
  7089  1390                     l11257:	
  7090                           ;robot.c: 93: ser_putch(speedhighByte);
  7091  1390  1283               	bcf	status, 5	;RP0=0, select bank0
  7092  1391  1303               	bcf	status, 6	;RP1=0, select bank0
  7093  1392  085A               	movf	(RobotDrive@speedhighByte),w
  7094  1393  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  7095                           	line	95
  7096                           	
  7097  1398                     l11259:	
  7098                           ;robot.c: 95: ser_putch(speedlowByte);
  7099  1398  1283               	bcf	status, 5	;RP0=0, select bank0
  7100  1399  1303               	bcf	status, 6	;RP1=0, select bank0
  7101  139A  0859               	movf	(RobotDrive@speedlowByte),w
  7102  139B  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  7103                           	line	97
  7104                           	
  7105  13A0                     l11261:	
  7106                           ;robot.c: 97: ser_putch(128);
  7107  13A0  3080               	movlw	(080h)
  7108  13A1  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  7109                           	line	99
  7110                           	
  7111  13A6                     l11263:	
  7112                           ;robot.c: 99: ser_putch(0);
  7113  13A6  3000               	movlw	(0)
  7114  13A7  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  7115                           	line	100
  7116                           	
  7117  13AC                     l6021:	
  7118  13AC  0008               	return
  7119                           	opt stack 0
  7120                           GLOBAL	__end_of_RobotDrive
  7121  13AD                     	__end_of_RobotDrive:
  7122 ;; =============== function _RobotDrive ends ============
  7123                           
  7124                           	signat	_RobotDrive,4216
  7125                           	global	_ser_getch
  7126                           psect	text1135,local,class=CODE,delta=2
  7127                           global __ptext1135
  7128  125E                     __ptext1135:
  7129                           
  7130 ;; *************** function _ser_getch *****************
  7131 ;; Defined at:
  7132 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  c               1    1[BANK0 ] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      unsigned char 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7146 ;;      Params:         0       0       0       0       0
  7147 ;;      Locals:         0       1       0       0       0
  7148 ;;      Temps:          0       1       0       0       0
  7149 ;;      Totals:         0       2       0       0       0
  7150 ;;Total ram usage:        2 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    4
  7153 ;; This function calls:
  7154 ;;		_ser_isrx
  7155 ;; This function is called by:
  7156 ;;		_robot_read
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           psect	text1135
  7160                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7161                           	line	55
  7162                           	global	__size_of_ser_getch
  7163  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  7164                           	
  7165  125E                     _ser_getch:	
  7166                           	opt	stack 1
  7167                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7168                           	line	58
  7169                           	
  7170  125E                     l11235:	
  7171                           ;ser.c: 56: unsigned char c;
  7172                           ;ser.c: 58: while (ser_isrx()==0)
  7173  125E  2A60               	goto	l11237
  7174                           	
  7175  125F                     l6754:	
  7176                           	line	59
  7177                           ;ser.c: 59: continue;
  7178  125F  2A60               	goto	l11237
  7179                           	
  7180  1260                     l6753:	
  7181                           	line	58
  7182                           	
  7183  1260                     l11237:	
  7184  1260  160A  118A  220D   	fcall	_ser_isrx
              160A  118A         
  7185  1265  1C03               	btfss	status,0
  7186  1266  2A68               	goto	u5171
  7187  1267  2A69               	goto	u5170
  7188  1268                     u5171:
  7189  1268  2A60               	goto	l11237
  7190  1269                     u5170:
  7191                           	
  7192  1269                     l6755:	
  7193                           	line	61
  7194                           ;ser.c: 61: GIE=0;
  7195  1269  138B               	bcf	(95/8),(95)&7
  7196                           	line	62
  7197                           	
  7198  126A                     l11239:	
  7199                           ;ser.c: 62: c=rxfifo[rxoptr];
  7200  126A  1283               	bcf	status, 5	;RP0=0, select bank0
  7201  126B  1303               	bcf	status, 6	;RP1=0, select bank0
  7202  126C  086D               	movf	(_rxoptr),w
  7203  126D  3EA0               	addlw	_rxfifo&0ffh
  7204  126E  0084               	movwf	fsr0
  7205  126F  1383               	bcf	status, 7	;select IRP bank1
  7206  1270  0800               	movf	indf,w
  7207  1271  00A0               	movwf	(??_ser_getch+0)+0
  7208  1272  0820               	movf	(??_ser_getch+0)+0,w
  7209  1273  00A1               	movwf	(ser_getch@c)
  7210                           	line	63
  7211                           	
  7212  1274                     l11241:	
  7213                           ;ser.c: 63: ++rxoptr;
  7214  1274  3001               	movlw	(01h)
  7215  1275  00A0               	movwf	(??_ser_getch+0)+0
  7216  1276  0820               	movf	(??_ser_getch+0)+0,w
  7217  1277  07ED               	addwf	(_rxoptr),f	;volatile
  7218                           	line	64
  7219                           	
  7220  1278                     l11243:	
  7221                           ;ser.c: 64: rxoptr &= (16-1);
  7222  1278  300F               	movlw	(0Fh)
  7223  1279  00A0               	movwf	(??_ser_getch+0)+0
  7224  127A  0820               	movf	(??_ser_getch+0)+0,w
  7225  127B  05ED               	andwf	(_rxoptr),f	;volatile
  7226                           	line	65
  7227                           	
  7228  127C                     l11245:	
  7229                           ;ser.c: 65: GIE=1;
  7230  127C  178B               	bsf	(95/8),(95)&7
  7231                           	line	66
  7232                           	
  7233  127D                     l11247:	
  7234                           ;ser.c: 66: return c;
  7235  127D  0821               	movf	(ser_getch@c),w
  7236  127E  2A7F               	goto	l6756
  7237                           	
  7238  127F                     l11249:	
  7239                           	line	67
  7240                           	
  7241  127F                     l6756:	
  7242  127F  0008               	return
  7243                           	opt stack 0
  7244                           GLOBAL	__end_of_ser_getch
  7245  1280                     	__end_of_ser_getch:
  7246 ;; =============== function _ser_getch ends ============
  7247                           
  7248                           	signat	_ser_getch,89
  7249                           	global	_sprintf
  7250                           psect	text1136,local,class=CODE,delta=2
  7251                           global __ptext1136
  7252  0DE0                     __ptext1136:
  7253                           
  7254 ;; *************** function _sprintf *****************
  7255 ;; Defined at:
  7256 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  sp              1    wreg     PTR unsigned char 
  7259 ;;		 -> UpdateDisplay@LCDOutput(16), 
  7260 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  7261 ;;		 -> STR_13(13), 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  7264 ;;		 -> UpdateDisplay@LCDOutput(16), 
  7265 ;;  _val            4   31[BANK0 ] struct .
  7266 ;;  c               1   36[BANK0 ] char 
  7267 ;;  prec            1   30[BANK0 ] char 
  7268 ;;  flag            1   29[BANK0 ] unsigned char 
  7269 ;;  ap              1   28[BANK0 ] PTR void [1]
  7270 ;;		 -> ?_sprintf(2), 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  2   20[BANK0 ] int 
  7273 ;; Registers used:
  7274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7280 ;;      Params:         0       5       0       0       0
  7281 ;;      Locals:         0       9       0       0       0
  7282 ;;      Temps:          0       3       0       0       0
  7283 ;;      Totals:         0      17       0       0       0
  7284 ;;Total ram usage:       17 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:    4
  7287 ;; This function calls:
  7288 ;;		___lwdiv
  7289 ;;		___lwmod
  7290 ;; This function is called by:
  7291 ;;		_UpdateDisplay
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           psect	text1136
  7295                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  7296                           	line	488
  7297                           	global	__size_of_sprintf
  7298  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  7299                           	
  7300  0DE0                     _sprintf:	
  7301                           	opt	stack 1
  7302                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7303                           ;sprintf@sp stored from wreg
  7304                           	line	537
  7305  0DE0  1283               	bcf	status, 5	;RP0=0, select bank0
  7306  0DE1  1303               	bcf	status, 6	;RP1=0, select bank0
  7307  0DE2  00C3               	movwf	(sprintf@sp)
  7308                           	
  7309  0DE3                     l11177:	
  7310  0DE3  3035               	movlw	(?_sprintf+01h)&0ffh
  7311  0DE4  00B9               	movwf	(??_sprintf+0)+0
  7312  0DE5  0839               	movf	(??_sprintf+0)+0,w
  7313  0DE6  00BC               	movwf	(sprintf@ap)
  7314                           	line	540
  7315  0DE7  2EC6               	goto	l11229
  7316                           	
  7317  0DE8                     l6794:	
  7318                           	line	542
  7319                           	
  7320  0DE8                     l11179:	
  7321  0DE8  0844               	movf	(sprintf@c),w
  7322  0DE9  3A25               	xorlw	025h
  7323  0DEA  1903               	skipnz
  7324  0DEB  2DED               	goto	u5091
  7325  0DEC  2DEE               	goto	u5090
  7326  0DED                     u5091:
  7327  0DED  2DFA               	goto	l6795
  7328  0DEE                     u5090:
  7329                           	line	545
  7330                           	
  7331  0DEE                     l11181:	
  7332  0DEE  0844               	movf	(sprintf@c),w
  7333  0DEF  00B9               	movwf	(??_sprintf+0)+0
  7334  0DF0  0843               	movf	(sprintf@sp),w
  7335  0DF1  0084               	movwf	fsr0
  7336  0DF2  0839               	movf	(??_sprintf+0)+0,w
  7337  0DF3  1383               	bcf	status, 7	;select IRP bank0
  7338  0DF4  0080               	movwf	indf
  7339                           	
  7340  0DF5                     l11183:	
  7341  0DF5  3001               	movlw	(01h)
  7342  0DF6  00B9               	movwf	(??_sprintf+0)+0
  7343  0DF7  0839               	movf	(??_sprintf+0)+0,w
  7344  0DF8  07C3               	addwf	(sprintf@sp),f
  7345                           	line	546
  7346  0DF9  2EC6               	goto	l11229
  7347                           	line	547
  7348                           	
  7349  0DFA                     l6795:	
  7350                           	line	552
  7351  0DFA  01BD               	clrf	(sprintf@flag)
  7352                           	line	638
  7353  0DFB  2E01               	goto	l11187
  7354                           	line	640
  7355                           	
  7356  0DFC                     l6797:	
  7357                           	line	641
  7358  0DFC  2EDA               	goto	l11231
  7359                           	line	700
  7360                           	
  7361  0DFD                     l6799:	
  7362  0DFD  2E16               	goto	l11189
  7363                           	line	701
  7364                           	
  7365  0DFE                     l6800:	
  7366                           	line	702
  7367  0DFE  2E16               	goto	l11189
  7368                           	line	805
  7369                           	
  7370  0DFF                     l6802:	
  7371                           	line	816
  7372  0DFF  2EC6               	goto	l11229
  7373                           	line	825
  7374                           	
  7375  0E00                     l11185:	
  7376  0E00  2E16               	goto	l11189
  7377                           	line	638
  7378                           	
  7379  0E01                     l6796:	
  7380                           	
  7381  0E01                     l11187:	
  7382  0E01  3001               	movlw	01h
  7383  0E02  07B4               	addwf	(sprintf@f),f
  7384  0E03  30FF               	movlw	-01h
  7385  0E04  0734               	addwf	(sprintf@f),w
  7386  0E05  0084               	movwf	fsr0
  7387  0E06  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7388  0E0B  00C4               	movwf	(sprintf@c)
  7389                           	; Switch size 1, requested type "space"
  7390                           ; Number of cases is 3, Range of values is 0 to 105
  7391                           ; switch strategies available:
  7392                           ; Name         Instructions Cycles
  7393                           ; simple_byte           10     6 (average)
  7394                           ; jumptable            260     6 (fixed)
  7395                           ; rangetable           110     6 (fixed)
  7396                           ; spacedrange          218     9 (fixed)
  7397                           ; locatedrange         106     3 (fixed)
  7398                           ;	Chosen strategy is simple_byte
  7399                           
  7400                           	opt asmopt_off
  7401  0E0C  3A00               	xorlw	0^0	; case 0
  7402  0E0D  1903               	skipnz
  7403  0E0E  2EDA               	goto	l11231
  7404  0E0F  3A64               	xorlw	100^0	; case 100
  7405  0E10  1903               	skipnz
  7406  0E11  2E16               	goto	l11189
  7407  0E12  3A0D               	xorlw	105^100	; case 105
  7408  0E13  1903               	skipnz
  7409  0E14  2E16               	goto	l11189
  7410  0E15  2EC6               	goto	l11229
  7411                           	opt asmopt_on
  7412                           
  7413                           	line	825
  7414                           	
  7415  0E16                     l6801:	
  7416                           	line	1254
  7417                           	
  7418  0E16                     l11189:	
  7419  0E16  083C               	movf	(sprintf@ap),w
  7420  0E17  0084               	movwf	fsr0
  7421  0E18  1383               	bcf	status, 7	;select IRP bank0
  7422  0E19  0800               	movf	indf,w
  7423  0E1A  00BF               	movwf	(sprintf@_val)
  7424  0E1B  0A84               	incf	fsr0,f
  7425  0E1C  0800               	movf	indf,w
  7426  0E1D  00C0               	movwf	(sprintf@_val+1)
  7427                           	
  7428  0E1E                     l11191:	
  7429  0E1E  3002               	movlw	(02h)
  7430  0E1F  00B9               	movwf	(??_sprintf+0)+0
  7431  0E20  0839               	movf	(??_sprintf+0)+0,w
  7432  0E21  07BC               	addwf	(sprintf@ap),f
  7433                           	line	1256
  7434                           	
  7435  0E22                     l11193:	
  7436  0E22  1FC0               	btfss	(sprintf@_val+1),7
  7437  0E23  2E25               	goto	u5101
  7438  0E24  2E26               	goto	u5100
  7439  0E25                     u5101:
  7440  0E25  2E30               	goto	l11199
  7441  0E26                     u5100:
  7442                           	line	1257
  7443                           	
  7444  0E26                     l11195:	
  7445  0E26  3003               	movlw	(03h)
  7446  0E27  00B9               	movwf	(??_sprintf+0)+0
  7447  0E28  0839               	movf	(??_sprintf+0)+0,w
  7448  0E29  04BD               	iorwf	(sprintf@flag),f
  7449                           	line	1258
  7450                           	
  7451  0E2A                     l11197:	
  7452  0E2A  09BF               	comf	(sprintf@_val),f
  7453  0E2B  09C0               	comf	(sprintf@_val+1),f
  7454  0E2C  0ABF               	incf	(sprintf@_val),f
  7455  0E2D  1903               	skipnz
  7456  0E2E  0AC0               	incf	(sprintf@_val+1),f
  7457  0E2F  2E30               	goto	l11199
  7458                           	line	1259
  7459                           	
  7460  0E30                     l6803:	
  7461                           	line	1300
  7462                           	
  7463  0E30                     l11199:	
  7464  0E30  01C4               	clrf	(sprintf@c)
  7465  0E31  1403               	bsf	status,0
  7466  0E32  0DC4               	rlf	(sprintf@c),f
  7467                           	
  7468  0E33                     l11201:	
  7469  0E33  0844               	movf	(sprintf@c),w
  7470  0E34  3A05               	xorlw	05h
  7471  0E35  1D03               	skipz
  7472  0E36  2E38               	goto	u5111
  7473  0E37  2E39               	goto	u5110
  7474  0E38                     u5111:
  7475  0E38  2E3B               	goto	l11205
  7476  0E39                     u5110:
  7477  0E39  2E63               	goto	l11213
  7478                           	
  7479  0E3A                     l11203:	
  7480  0E3A  2E63               	goto	l11213
  7481                           	line	1301
  7482                           	
  7483  0E3B                     l6804:	
  7484                           	
  7485  0E3B                     l11205:	
  7486  0E3B  0844               	movf	(sprintf@c),w
  7487  0E3C  00B9               	movwf	(??_sprintf+0)+0
  7488  0E3D  0739               	addwf	(??_sprintf+0)+0,w
  7489  0E3E  3E01               	addlw	low((_dpowers-__stringbase))
  7490  0E3F  0084               	movwf	fsr0
  7491  0E40  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7492  0E45  00BA               	movwf	(??_sprintf+1)+0
  7493  0E46  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7494  0E4B  00BB               	movwf	(??_sprintf+1)+0+1
  7495  0E4C  083B               	movf	1+(??_sprintf+1)+0,w
  7496  0E4D  0240               	subwf	(sprintf@_val+1),w
  7497  0E4E  1D03               	skipz
  7498  0E4F  2E52               	goto	u5125
  7499  0E50  083A               	movf	0+(??_sprintf+1)+0,w
  7500  0E51  023F               	subwf	(sprintf@_val),w
  7501  0E52                     u5125:
  7502  0E52  1803               	skipnc
  7503  0E53  2E55               	goto	u5121
  7504  0E54  2E56               	goto	u5120
  7505  0E55                     u5121:
  7506  0E55  2E58               	goto	l11209
  7507  0E56                     u5120:
  7508  0E56  2E63               	goto	l11213
  7509                           	line	1302
  7510                           	
  7511  0E57                     l11207:	
  7512  0E57  2E63               	goto	l11213
  7513                           	
  7514  0E58                     l6806:	
  7515                           	line	1300
  7516                           	
  7517  0E58                     l11209:	
  7518  0E58  3001               	movlw	(01h)
  7519  0E59  00B9               	movwf	(??_sprintf+0)+0
  7520  0E5A  0839               	movf	(??_sprintf+0)+0,w
  7521  0E5B  07C4               	addwf	(sprintf@c),f
  7522                           	
  7523  0E5C                     l11211:	
  7524  0E5C  0844               	movf	(sprintf@c),w
  7525  0E5D  3A05               	xorlw	05h
  7526  0E5E  1D03               	skipz
  7527  0E5F  2E61               	goto	u5131
  7528  0E60  2E62               	goto	u5130
  7529  0E61                     u5131:
  7530  0E61  2E3B               	goto	l11205
  7531  0E62                     u5130:
  7532  0E62  2E63               	goto	l11213
  7533                           	
  7534  0E63                     l6805:	
  7535                           	line	1433
  7536                           	
  7537  0E63                     l11213:	
  7538  0E63  083D               	movf	(sprintf@flag),w
  7539  0E64  3903               	andlw	03h
  7540  0E65  1903               	btfsc	status,2
  7541  0E66  2E68               	goto	u5141
  7542  0E67  2E69               	goto	u5140
  7543  0E68                     u5141:
  7544  0E68  2E75               	goto	l11219
  7545  0E69                     u5140:
  7546                           	line	1434
  7547                           	
  7548  0E69                     l11215:	
  7549  0E69  302D               	movlw	(02Dh)
  7550  0E6A  00B9               	movwf	(??_sprintf+0)+0
  7551  0E6B  0843               	movf	(sprintf@sp),w
  7552  0E6C  0084               	movwf	fsr0
  7553  0E6D  0839               	movf	(??_sprintf+0)+0,w
  7554  0E6E  1383               	bcf	status, 7	;select IRP bank0
  7555  0E6F  0080               	movwf	indf
  7556                           	
  7557  0E70                     l11217:	
  7558  0E70  3001               	movlw	(01h)
  7559  0E71  00B9               	movwf	(??_sprintf+0)+0
  7560  0E72  0839               	movf	(??_sprintf+0)+0,w
  7561  0E73  07C3               	addwf	(sprintf@sp),f
  7562  0E74  2E75               	goto	l11219
  7563                           	
  7564  0E75                     l6807:	
  7565                           	line	1467
  7566                           	
  7567  0E75                     l11219:	
  7568  0E75  0844               	movf	(sprintf@c),w
  7569  0E76  00B9               	movwf	(??_sprintf+0)+0
  7570  0E77  0839               	movf	(??_sprintf+0)+0,w
  7571  0E78  00BE               	movwf	(sprintf@prec)
  7572                           	line	1469
  7573  0E79  2EBA               	goto	l11227
  7574                           	
  7575  0E7A                     l6809:	
  7576                           	line	1484
  7577                           	
  7578  0E7A                     l11221:	
  7579  0E7A  300A               	movlw	low(0Ah)
  7580  0E7B  00AE               	movwf	(?___lwmod)
  7581  0E7C  3000               	movlw	high(0Ah)
  7582  0E7D  00AF               	movwf	((?___lwmod))+1
  7583  0E7E  083E               	movf	(sprintf@prec),w
  7584  0E7F  00B9               	movwf	(??_sprintf+0)+0
  7585  0E80  0739               	addwf	(??_sprintf+0)+0,w
  7586  0E81  3E01               	addlw	low((_dpowers-__stringbase))
  7587  0E82  0084               	movwf	fsr0
  7588  0E83  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7589  0E88  00A6               	movwf	(?___lwdiv)
  7590  0E89  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7591  0E8E  00A7               	movwf	(?___lwdiv+1)
  7592  0E8F  0840               	movf	(sprintf@_val+1),w
  7593  0E90  01A9               	clrf	1+(?___lwdiv)+02h
  7594  0E91  07A9               	addwf	1+(?___lwdiv)+02h
  7595  0E92  083F               	movf	(sprintf@_val),w
  7596  0E93  01A8               	clrf	0+(?___lwdiv)+02h
  7597  0E94  07A8               	addwf	0+(?___lwdiv)+02h
  7598                           
  7599  0E95  160A  118A  25C0   	fcall	___lwdiv
              120A  158A         
  7600  0E9A  1283               	bcf	status, 5	;RP0=0, select bank0
  7601  0E9B  1303               	bcf	status, 6	;RP1=0, select bank0
  7602  0E9C  0827               	movf	(1+(?___lwdiv)),w
  7603  0E9D  01B1               	clrf	1+(?___lwmod)+02h
  7604  0E9E  07B1               	addwf	1+(?___lwmod)+02h
  7605  0E9F  0826               	movf	(0+(?___lwdiv)),w
  7606  0EA0  01B0               	clrf	0+(?___lwmod)+02h
  7607  0EA1  07B0               	addwf	0+(?___lwmod)+02h
  7608                           
  7609  0EA2  160A  118A  24ED   	fcall	___lwmod
              120A  158A         
  7610  0EA7  1283               	bcf	status, 5	;RP0=0, select bank0
  7611  0EA8  1303               	bcf	status, 6	;RP1=0, select bank0
  7612  0EA9  082E               	movf	(0+(?___lwmod)),w
  7613  0EAA  3E30               	addlw	030h
  7614  0EAB  00BA               	movwf	(??_sprintf+1)+0
  7615  0EAC  083A               	movf	(??_sprintf+1)+0,w
  7616  0EAD  00C4               	movwf	(sprintf@c)
  7617                           	line	1516
  7618                           	
  7619  0EAE                     l11223:	
  7620  0EAE  0844               	movf	(sprintf@c),w
  7621  0EAF  00B9               	movwf	(??_sprintf+0)+0
  7622  0EB0  0843               	movf	(sprintf@sp),w
  7623  0EB1  0084               	movwf	fsr0
  7624  0EB2  0839               	movf	(??_sprintf+0)+0,w
  7625  0EB3  1383               	bcf	status, 7	;select IRP bank0
  7626  0EB4  0080               	movwf	indf
  7627                           	
  7628  0EB5                     l11225:	
  7629  0EB5  3001               	movlw	(01h)
  7630  0EB6  00B9               	movwf	(??_sprintf+0)+0
  7631  0EB7  0839               	movf	(??_sprintf+0)+0,w
  7632  0EB8  07C3               	addwf	(sprintf@sp),f
  7633  0EB9  2EBA               	goto	l11227
  7634                           	line	1517
  7635                           	
  7636  0EBA                     l6808:	
  7637                           	line	1469
  7638                           	
  7639  0EBA                     l11227:	
  7640  0EBA  30FF               	movlw	(-1)
  7641  0EBB  00B9               	movwf	(??_sprintf+0)+0
  7642  0EBC  0839               	movf	(??_sprintf+0)+0,w
  7643  0EBD  07BE               	addwf	(sprintf@prec),f
  7644  0EBE  083E               	movf	((sprintf@prec)),w
  7645  0EBF  3AFF               	xorlw	-1
  7646  0EC0  1D03               	skipz
  7647  0EC1  2EC3               	goto	u5151
  7648  0EC2  2EC4               	goto	u5150
  7649  0EC3                     u5151:
  7650  0EC3  2E7A               	goto	l11221
  7651  0EC4                     u5150:
  7652  0EC4  2EC6               	goto	l11229
  7653                           	
  7654  0EC5                     l6810:	
  7655  0EC5  2EC6               	goto	l11229
  7656                           	line	1525
  7657                           	
  7658  0EC6                     l6793:	
  7659                           	line	540
  7660                           	
  7661  0EC6                     l11229:	
  7662  0EC6  3001               	movlw	01h
  7663  0EC7  07B4               	addwf	(sprintf@f),f
  7664  0EC8  30FF               	movlw	-01h
  7665  0EC9  0734               	addwf	(sprintf@f),w
  7666  0ECA  0084               	movwf	fsr0
  7667  0ECB  120A  158A  200A   	fcall	stringdir
              120A  158A         
  7668  0ED0  00B9               	movwf	(??_sprintf+0)+0
  7669  0ED1  0839               	movf	(??_sprintf+0)+0,w
  7670  0ED2  00C4               	movwf	(sprintf@c)
  7671  0ED3  08C4               	movf	((sprintf@c)),f
  7672  0ED4  1D03               	skipz
  7673  0ED5  2ED7               	goto	u5161
  7674  0ED6  2ED8               	goto	u5160
  7675  0ED7                     u5161:
  7676  0ED7  2DE8               	goto	l11179
  7677  0ED8                     u5160:
  7678  0ED8  2EDA               	goto	l11231
  7679                           	
  7680  0ED9                     l6811:	
  7681  0ED9  2EDA               	goto	l11231
  7682                           	line	1527
  7683                           	
  7684  0EDA                     l6798:	
  7685                           	line	1530
  7686                           	
  7687  0EDA                     l11231:	
  7688  0EDA  0843               	movf	(sprintf@sp),w
  7689  0EDB  0084               	movwf	fsr0
  7690  0EDC  1383               	bcf	status, 7	;select IRP bank0
  7691  0EDD  0180               	clrf	indf
  7692  0EDE  2EDF               	goto	l6812
  7693                           	line	1532
  7694                           	
  7695  0EDF                     l11233:	
  7696                           	line	1533
  7697                           ;	Return value of _sprintf is never used
  7698                           	
  7699  0EDF                     l6812:	
  7700  0EDF  0008               	return
  7701                           	opt stack 0
  7702                           GLOBAL	__end_of_sprintf
  7703  0EE0                     	__end_of_sprintf:
  7704 ;; =============== function _sprintf ends ============
  7705                           
  7706                           	signat	_sprintf,4698
  7707                           	global	_ADCconvert
  7708                           psect	text1137,local,class=CODE,delta=2
  7709                           global __ptext1137
  7710  02A7                     __ptext1137:
  7711                           
  7712 ;; *************** function _ADCconvert *****************
  7713 ;; Defined at:
  7714 ;;		line 58 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;		None               void
  7721 ;; Registers used:
  7722 ;;		wreg, status,2, status,0, pclath, cstack
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7728 ;;      Params:         0       0       0       0       0
  7729 ;;      Locals:         0       0       0       0       0
  7730 ;;      Temps:          0       2       0       0       0
  7731 ;;      Totals:         0       2       0       0       0
  7732 ;;Total ram usage:        2 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:    4
  7735 ;; This function calls:
  7736 ;;		___wmul
  7737 ;;		___lwdiv
  7738 ;; This function is called by:
  7739 ;;		_readAvgDistance
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           psect	text1137
  7743                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  7744                           	line	58
  7745                           	global	__size_of_ADCconvert
  7746  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  7747                           	
  7748  02A7                     _ADCconvert:	
  7749                           	opt	stack 1
  7750                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  7751                           	line	64
  7752                           	
  7753  02A7                     l11135:	
  7754                           ;infrared.c: 64: if (adcVal >= 213 && adcVal < 234)
  7755  02A7  3000               	movlw	high(0D5h)
  7756  02A8  1283               	bcf	status, 5	;RP0=0, select bank0
  7757  02A9  1303               	bcf	status, 6	;RP1=0, select bank0
  7758  02AA  026B               	subwf	(_adcVal+1),w	;volatile
  7759  02AB  30D5               	movlw	low(0D5h)
  7760  02AC  1903               	skipnz
  7761  02AD  026A               	subwf	(_adcVal),w	;volatile
  7762  02AE  1C03               	skipc
  7763  02AF  2AB1               	goto	u4951
  7764  02B0  2AB2               	goto	u4950
  7765  02B1                     u4951:
  7766  02B1  2AF5               	goto	l11141
  7767  02B2                     u4950:
  7768                           	
  7769  02B2                     l11137:	
  7770  02B2  3000               	movlw	high(0EAh)
  7771  02B3  026B               	subwf	(_adcVal+1),w	;volatile
  7772  02B4  30EA               	movlw	low(0EAh)
  7773  02B5  1903               	skipnz
  7774  02B6  026A               	subwf	(_adcVal),w	;volatile
  7775  02B7  1803               	skipnc
  7776  02B8  2ABA               	goto	u4961
  7777  02B9  2ABB               	goto	u4960
  7778  02BA                     u4961:
  7779  02BA  2AF5               	goto	l11141
  7780  02BB                     u4960:
  7781                           	line	66
  7782                           	
  7783  02BB                     l11139:	
  7784                           ;infrared.c: 65: {
  7785                           ;infrared.c: 66: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  7786  02BB  3015               	movlw	low(015h)
  7787  02BC  00A6               	movwf	(?___lwdiv)
  7788  02BD  3000               	movlw	high(015h)
  7789  02BE  00A7               	movwf	((?___lwdiv))+1
  7790  02BF  096A               	comf	(_adcVal),w	;volatile
  7791  02C0  00AE               	movwf	(??_ADCconvert+0)+0
  7792  02C1  096B               	comf	(_adcVal+1),w	;volatile
  7793  02C2  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7794  02C3  0AAE               	incf	(??_ADCconvert+0)+0,f
  7795  02C4  1903               	skipnz
  7796  02C5  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7797  02C6  082E               	movf	0+(??_ADCconvert+0)+0,w
  7798  02C7  3EEA               	addlw	low(0EAh)
  7799  02C8  00A0               	movwf	(?___wmul)
  7800  02C9  082F               	movf	1+(??_ADCconvert+0)+0,w
  7801  02CA  1803               	skipnc
  7802  02CB  3E01               	addlw	1
  7803  02CC  3E00               	addlw	high(0EAh)
  7804  02CD  00A1               	movwf	1+(?___wmul)
  7805  02CE  3005               	movlw	low(05h)
  7806  02CF  00A2               	movwf	0+(?___wmul)+02h
  7807  02D0  3000               	movlw	high(05h)
  7808  02D1  00A3               	movwf	(0+(?___wmul)+02h)+1
  7809  02D2  160A  118A  22FC   	fcall	___wmul
              120A  118A         
  7810  02D7  1283               	bcf	status, 5	;RP0=0, select bank0
  7811  02D8  1303               	bcf	status, 6	;RP1=0, select bank0
  7812  02D9  0821               	movf	(1+(?___wmul)),w
  7813  02DA  01A9               	clrf	1+(?___lwdiv)+02h
  7814  02DB  07A9               	addwf	1+(?___lwdiv)+02h
  7815  02DC  0820               	movf	(0+(?___wmul)),w
  7816  02DD  01A8               	clrf	0+(?___lwdiv)+02h
  7817  02DE  07A8               	addwf	0+(?___lwdiv)+02h
  7818                           
  7819  02DF  160A  118A  25C0   	fcall	___lwdiv
              120A  118A         
  7820  02E4  1283               	bcf	status, 5	;RP0=0, select bank0
  7821  02E5  1303               	bcf	status, 6	;RP1=0, select bank0
  7822  02E6  0826               	movf	(0+(?___lwdiv)),w
  7823  02E7  3E0F               	addlw	low(0Fh)
  7824  02E8  1683               	bsf	status, 5	;RP0=1, select bank1
  7825  02E9  1303               	bcf	status, 6	;RP1=0, select bank1
  7826  02EA  00B0               	movwf	(_IRdistance)^080h	;volatile
  7827  02EB  1283               	bcf	status, 5	;RP0=0, select bank0
  7828  02EC  1303               	bcf	status, 6	;RP1=0, select bank0
  7829  02ED  0827               	movf	(1+(?___lwdiv)),w
  7830  02EE  1803               	skipnc
  7831  02EF  3E01               	addlw	1
  7832  02F0  3E00               	addlw	high(0Fh)
  7833  02F1  1683               	bsf	status, 5	;RP0=1, select bank1
  7834  02F2  1303               	bcf	status, 6	;RP1=0, select bank1
  7835  02F3  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7836                           	line	67
  7837                           ;infrared.c: 67: }
  7838  02F4  2CC9               	goto	l3016
  7839                           	line	68
  7840                           	
  7841  02F5                     l3003:	
  7842                           	
  7843  02F5                     l11141:	
  7844                           ;infrared.c: 68: else if (adcVal >= 170 && adcVal < 213)
  7845  02F5  3000               	movlw	high(0AAh)
  7846  02F6  1283               	bcf	status, 5	;RP0=0, select bank0
  7847  02F7  026B               	subwf	(_adcVal+1),w	;volatile
  7848  02F8  30AA               	movlw	low(0AAh)
  7849  02F9  1903               	skipnz
  7850  02FA  026A               	subwf	(_adcVal),w	;volatile
  7851  02FB  1C03               	skipc
  7852  02FC  2AFE               	goto	u4971
  7853  02FD  2AFF               	goto	u4970
  7854  02FE                     u4971:
  7855  02FE  2B42               	goto	l11147
  7856  02FF                     u4970:
  7857                           	
  7858  02FF                     l11143:	
  7859  02FF  3000               	movlw	high(0D5h)
  7860  0300  026B               	subwf	(_adcVal+1),w	;volatile
  7861  0301  30D5               	movlw	low(0D5h)
  7862  0302  1903               	skipnz
  7863  0303  026A               	subwf	(_adcVal),w	;volatile
  7864  0304  1803               	skipnc
  7865  0305  2B07               	goto	u4981
  7866  0306  2B08               	goto	u4980
  7867  0307                     u4981:
  7868  0307  2B42               	goto	l11147
  7869  0308                     u4980:
  7870                           	line	70
  7871                           	
  7872  0308                     l11145:	
  7873                           ;infrared.c: 69: {
  7874                           ;infrared.c: 70: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  7875  0308  302B               	movlw	low(02Bh)
  7876  0309  00A6               	movwf	(?___lwdiv)
  7877  030A  3000               	movlw	high(02Bh)
  7878  030B  00A7               	movwf	((?___lwdiv))+1
  7879  030C  096A               	comf	(_adcVal),w	;volatile
  7880  030D  00AE               	movwf	(??_ADCconvert+0)+0
  7881  030E  096B               	comf	(_adcVal+1),w	;volatile
  7882  030F  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7883  0310  0AAE               	incf	(??_ADCconvert+0)+0,f
  7884  0311  1903               	skipnz
  7885  0312  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7886  0313  082E               	movf	0+(??_ADCconvert+0)+0,w
  7887  0314  3ED5               	addlw	low(0D5h)
  7888  0315  00A0               	movwf	(?___wmul)
  7889  0316  082F               	movf	1+(??_ADCconvert+0)+0,w
  7890  0317  1803               	skipnc
  7891  0318  3E01               	addlw	1
  7892  0319  3E00               	addlw	high(0D5h)
  7893  031A  00A1               	movwf	1+(?___wmul)
  7894  031B  300A               	movlw	low(0Ah)
  7895  031C  00A2               	movwf	0+(?___wmul)+02h
  7896  031D  3000               	movlw	high(0Ah)
  7897  031E  00A3               	movwf	(0+(?___wmul)+02h)+1
  7898  031F  160A  118A  22FC   	fcall	___wmul
              120A  118A         
  7899  0324  1283               	bcf	status, 5	;RP0=0, select bank0
  7900  0325  1303               	bcf	status, 6	;RP1=0, select bank0
  7901  0326  0821               	movf	(1+(?___wmul)),w
  7902  0327  01A9               	clrf	1+(?___lwdiv)+02h
  7903  0328  07A9               	addwf	1+(?___lwdiv)+02h
  7904  0329  0820               	movf	(0+(?___wmul)),w
  7905  032A  01A8               	clrf	0+(?___lwdiv)+02h
  7906  032B  07A8               	addwf	0+(?___lwdiv)+02h
  7907                           
  7908  032C  160A  118A  25C0   	fcall	___lwdiv
              120A  118A         
  7909  0331  1283               	bcf	status, 5	;RP0=0, select bank0
  7910  0332  1303               	bcf	status, 6	;RP1=0, select bank0
  7911  0333  0826               	movf	(0+(?___lwdiv)),w
  7912  0334  3E14               	addlw	low(014h)
  7913  0335  1683               	bsf	status, 5	;RP0=1, select bank1
  7914  0336  1303               	bcf	status, 6	;RP1=0, select bank1
  7915  0337  00B0               	movwf	(_IRdistance)^080h	;volatile
  7916  0338  1283               	bcf	status, 5	;RP0=0, select bank0
  7917  0339  1303               	bcf	status, 6	;RP1=0, select bank0
  7918  033A  0827               	movf	(1+(?___lwdiv)),w
  7919  033B  1803               	skipnc
  7920  033C  3E01               	addlw	1
  7921  033D  3E00               	addlw	high(014h)
  7922  033E  1683               	bsf	status, 5	;RP0=1, select bank1
  7923  033F  1303               	bcf	status, 6	;RP1=0, select bank1
  7924  0340  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7925                           	line	71
  7926                           ;infrared.c: 71: }
  7927  0341  2CC9               	goto	l3016
  7928                           	line	72
  7929                           	
  7930  0342                     l3005:	
  7931                           	
  7932  0342                     l11147:	
  7933                           ;infrared.c: 72: else if (adcVal >= 128 && adcVal < 170)
  7934  0342  3000               	movlw	high(080h)
  7935  0343  1283               	bcf	status, 5	;RP0=0, select bank0
  7936  0344  026B               	subwf	(_adcVal+1),w	;volatile
  7937  0345  3080               	movlw	low(080h)
  7938  0346  1903               	skipnz
  7939  0347  026A               	subwf	(_adcVal),w	;volatile
  7940  0348  1C03               	skipc
  7941  0349  2B4B               	goto	u4991
  7942  034A  2B4C               	goto	u4990
  7943  034B                     u4991:
  7944  034B  2B8F               	goto	l11153
  7945  034C                     u4990:
  7946                           	
  7947  034C                     l11149:	
  7948  034C  3000               	movlw	high(0AAh)
  7949  034D  026B               	subwf	(_adcVal+1),w	;volatile
  7950  034E  30AA               	movlw	low(0AAh)
  7951  034F  1903               	skipnz
  7952  0350  026A               	subwf	(_adcVal),w	;volatile
  7953  0351  1803               	skipnc
  7954  0352  2B54               	goto	u5001
  7955  0353  2B55               	goto	u5000
  7956  0354                     u5001:
  7957  0354  2B8F               	goto	l11153
  7958  0355                     u5000:
  7959                           	line	74
  7960                           	
  7961  0355                     l11151:	
  7962                           ;infrared.c: 73: {
  7963                           ;infrared.c: 74: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  7964  0355  302A               	movlw	low(02Ah)
  7965  0356  00A6               	movwf	(?___lwdiv)
  7966  0357  3000               	movlw	high(02Ah)
  7967  0358  00A7               	movwf	((?___lwdiv))+1
  7968  0359  096A               	comf	(_adcVal),w	;volatile
  7969  035A  00AE               	movwf	(??_ADCconvert+0)+0
  7970  035B  096B               	comf	(_adcVal+1),w	;volatile
  7971  035C  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7972  035D  0AAE               	incf	(??_ADCconvert+0)+0,f
  7973  035E  1903               	skipnz
  7974  035F  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7975  0360  082E               	movf	0+(??_ADCconvert+0)+0,w
  7976  0361  3EAA               	addlw	low(0AAh)
  7977  0362  00A0               	movwf	(?___wmul)
  7978  0363  082F               	movf	1+(??_ADCconvert+0)+0,w
  7979  0364  1803               	skipnc
  7980  0365  3E01               	addlw	1
  7981  0366  3E00               	addlw	high(0AAh)
  7982  0367  00A1               	movwf	1+(?___wmul)
  7983  0368  300A               	movlw	low(0Ah)
  7984  0369  00A2               	movwf	0+(?___wmul)+02h
  7985  036A  3000               	movlw	high(0Ah)
  7986  036B  00A3               	movwf	(0+(?___wmul)+02h)+1
  7987  036C  160A  118A  22FC   	fcall	___wmul
              120A  118A         
  7988  0371  1283               	bcf	status, 5	;RP0=0, select bank0
  7989  0372  1303               	bcf	status, 6	;RP1=0, select bank0
  7990  0373  0821               	movf	(1+(?___wmul)),w
  7991  0374  01A9               	clrf	1+(?___lwdiv)+02h
  7992  0375  07A9               	addwf	1+(?___lwdiv)+02h
  7993  0376  0820               	movf	(0+(?___wmul)),w
  7994  0377  01A8               	clrf	0+(?___lwdiv)+02h
  7995  0378  07A8               	addwf	0+(?___lwdiv)+02h
  7996                           
  7997  0379  160A  118A  25C0   	fcall	___lwdiv
              120A  118A         
  7998  037E  1283               	bcf	status, 5	;RP0=0, select bank0
  7999  037F  1303               	bcf	status, 6	;RP1=0, select bank0
  8000  0380  0826               	movf	(0+(?___lwdiv)),w
  8001  0381  3E1E               	addlw	low(01Eh)
  8002  0382  1683               	bsf	status, 5	;RP0=1, select bank1
  8003  0383  1303               	bcf	status, 6	;RP1=0, select bank1
  8004  0384  00B0               	movwf	(_IRdistance)^080h	;volatile
  8005  0385  1283               	bcf	status, 5	;RP0=0, select bank0
  8006  0386  1303               	bcf	status, 6	;RP1=0, select bank0
  8007  0387  0827               	movf	(1+(?___lwdiv)),w
  8008  0388  1803               	skipnc
  8009  0389  3E01               	addlw	1
  8010  038A  3E00               	addlw	high(01Eh)
  8011  038B  1683               	bsf	status, 5	;RP0=1, select bank1
  8012  038C  1303               	bcf	status, 6	;RP1=0, select bank1
  8013  038D  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  8014                           	line	75
  8015                           ;infrared.c: 75: }
  8016  038E  2CC9               	goto	l3016
  8017                           	line	76
  8018                           	
  8019  038F                     l3007:	
  8020                           	
  8021  038F                     l11153:	
  8022                           ;infrared.c: 76: else if (adcVal >= 107 && adcVal < 128)
  8023  038F  3000               	movlw	high(06Bh)
  8024  0390  1283               	bcf	status, 5	;RP0=0, select bank0
  8025  0391  026B               	subwf	(_adcVal+1),w	;volatile
  8026  0392  306B               	movlw	low(06Bh)
  8027  0393  1903               	skipnz
  8028  0394  026A               	subwf	(_adcVal),w	;volatile
  8029  0395  1C03               	skipc
  8030  0396  2B98               	goto	u5011
  8031  0397  2B99               	goto	u5010
  8032  0398                     u5011:
  8033  0398  2BDC               	goto	l11159
  8034  0399                     u5010:
  8035                           	
  8036  0399                     l11155:	
  8037  0399  3000               	movlw	high(080h)
  8038  039A  026B               	subwf	(_adcVal+1),w	;volatile
  8039  039B  3080               	movlw	low(080h)
  8040  039C  1903               	skipnz
  8041  039D  026A               	subwf	(_adcVal),w	;volatile
  8042  039E  1803               	skipnc
  8043  039F  2BA1               	goto	u5021
  8044  03A0  2BA2               	goto	u5020
  8045  03A1                     u5021:
  8046  03A1  2BDC               	goto	l11159
  8047  03A2                     u5020:
  8048                           	line	78
  8049                           	
  8050  03A2                     l11157:	
  8051                           ;infrared.c: 77: {
  8052                           ;infrared.c: 78: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  8053  03A2  3015               	movlw	low(015h)
  8054  03A3  00A6               	movwf	(?___lwdiv)
  8055  03A4  3000               	movlw	high(015h)
  8056  03A5  00A7               	movwf	((?___lwdiv))+1
  8057  03A6  096A               	comf	(_adcVal),w	;volatile
  8058  03A7  00AE               	movwf	(??_ADCconvert+0)+0
  8059  03A8  096B               	comf	(_adcVal+1),w	;volatile
  8060  03A9  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8061  03AA  0AAE               	incf	(??_ADCconvert+0)+0,f
  8062  03AB  1903               	skipnz
  8063  03AC  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8064  03AD  082E               	movf	0+(??_ADCconvert+0)+0,w
  8065  03AE  3E80               	addlw	low(080h)
  8066  03AF  00A0               	movwf	(?___wmul)
  8067  03B0  082F               	movf	1+(??_ADCconvert+0)+0,w
  8068  03B1  1803               	skipnc
  8069  03B2  3E01               	addlw	1
  8070  03B3  3E00               	addlw	high(080h)
  8071  03B4  00A1               	movwf	1+(?___wmul)
  8072  03B5  300A               	movlw	low(0Ah)
  8073  03B6  00A2               	movwf	0+(?___wmul)+02h
  8074  03B7  3000               	movlw	high(0Ah)
  8075  03B8  00A3               	movwf	(0+(?___wmul)+02h)+1
  8076  03B9  160A  118A  22FC   	fcall	___wmul
              120A  118A         
  8077  03BE  1283               	bcf	status, 5	;RP0=0, select bank0
  8078  03BF  1303               	bcf	status, 6	;RP1=0, select bank0
  8079  03C0  0821               	movf	(1+(?___wmul)),w
  8080  03C1  01A9               	clrf	1+(?___lwdiv)+02h
  8081  03C2  07A9               	addwf	1+(?___lwdiv)+02h
  8082  03C3  0820               	movf	(0+(?___wmul)),w
  8083  03C4  01A8               	clrf	0+(?___lwdiv)+02h
  8084  03C5  07A8               	addwf	0+(?___lwdiv)+02h
  8085                           
  8086  03C6  160A  118A  25C0   	fcall	___lwdiv
              120A  118A         
  8087  03CB  1283               	bcf	status, 5	;RP0=0, select bank0
  8088  03CC  1303               	bcf	status, 6	;RP1=0, select bank0
  8089  03CD  0826               	movf	(0+(?___lwdiv)),w
  8090  03CE  3E28               	addlw	low(028h)
  8091  03CF  1683               	bsf	status, 5	;RP0=1, select bank1
  8092  03D0  1303               	bcf	status, 6	;RP1=0, select bank1
  8093  03D1  00B0               	movwf	(_IRdistance)^080h	;volatile
  8094  03D2  1283               	bcf	status, 5	;RP0=0, select bank0
  8095  03D3  1303               	bcf	status, 6	;RP1=0, select bank0
  8096  03D4  0827               	movf	(1+(?___lwdiv)),w
  8097  03D5  1803               	skipnc
  8098  03D6  3E01               	addlw	1
  8099  03D7  3E00               	addlw	high(028h)
  8100  03D8  1683               	bsf	status, 5	;RP0=1, select bank1
  8101  03D9  1303               	bcf	status, 6	;RP1=0, select bank1
  8102  03DA  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  8103                           	line	79
  8104                           ;infrared.c: 79: }
  8105  03DB  2CC9               	goto	l3016
  8106                           	line	80
  8107                           	
  8108  03DC                     l3009:	
  8109                           	
  8110  03DC                     l11159:	
  8111                           ;infrared.c: 80: else if (adcVal >= 77 && adcVal < 107)
  8112  03DC  3000               	movlw	high(04Dh)
  8113  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
  8114  03DE  026B               	subwf	(_adcVal+1),w	;volatile
  8115  03DF  304D               	movlw	low(04Dh)
  8116  03E0  1903               	skipnz
  8117  03E1  026A               	subwf	(_adcVal),w	;volatile
  8118  03E2  1C03               	skipc
  8119  03E3  2BE5               	goto	u5031
  8120  03E4  2BE6               	goto	u5030
  8121  03E5                     u5031:
  8122  03E5  2C29               	goto	l11165
  8123  03E6                     u5030:
  8124                           	
  8125  03E6                     l11161:	
  8126  03E6  3000               	movlw	high(06Bh)
  8127  03E7  026B               	subwf	(_adcVal+1),w	;volatile
  8128  03E8  306B               	movlw	low(06Bh)
  8129  03E9  1903               	skipnz
  8130  03EA  026A               	subwf	(_adcVal),w	;volatile
  8131  03EB  1803               	skipnc
  8132  03EC  2BEE               	goto	u5041
  8133  03ED  2BEF               	goto	u5040
  8134  03EE                     u5041:
  8135  03EE  2C29               	goto	l11165
  8136  03EF                     u5040:
  8137                           	line	82
  8138                           	
  8139  03EF                     l11163:	
  8140                           ;infrared.c: 81: {
  8141                           ;infrared.c: 82: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  8142  03EF  301E               	movlw	low(01Eh)
  8143  03F0  00A6               	movwf	(?___lwdiv)
  8144  03F1  3000               	movlw	high(01Eh)
  8145  03F2  00A7               	movwf	((?___lwdiv))+1
  8146  03F3  096A               	comf	(_adcVal),w	;volatile
  8147  03F4  00AE               	movwf	(??_ADCconvert+0)+0
  8148  03F5  096B               	comf	(_adcVal+1),w	;volatile
  8149  03F6  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8150  03F7  0AAE               	incf	(??_ADCconvert+0)+0,f
  8151  03F8  1903               	skipnz
  8152  03F9  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8153  03FA  082E               	movf	0+(??_ADCconvert+0)+0,w
  8154  03FB  3E6B               	addlw	low(06Bh)
  8155  03FC  00A0               	movwf	(?___wmul)
  8156  03FD  082F               	movf	1+(??_ADCconvert+0)+0,w
  8157  03FE  1803               	skipnc
  8158  03FF  3E01               	addlw	1
  8159  0400  3E00               	addlw	high(06Bh)
  8160  0401  00A1               	movwf	1+(?___wmul)
  8161  0402  300A               	movlw	low(0Ah)
  8162  0403  00A2               	movwf	0+(?___wmul)+02h
  8163  0404  3000               	movlw	high(0Ah)
  8164  0405  00A3               	movwf	(0+(?___wmul)+02h)+1
  8165  0406  160A  118A  22FC   	fcall	___wmul
              120A  118A         
  8166  040B  1283               	bcf	status, 5	;RP0=0, select bank0
  8167  040C  1303               	bcf	status, 6	;RP1=0, select bank0
  8168  040D  0821               	movf	(1+(?___wmul)),w
  8169  040E  01A9               	clrf	1+(?___lwdiv)+02h
  8170  040F  07A9               	addwf	1+(?___lwdiv)+02h
  8171  0410  0820               	movf	(0+(?___wmul)),w
  8172  0411  01A8               	clrf	0+(?___lwdiv)+02h
  8173  0412  07A8               	addwf	0+(?___lwdiv)+02h
  8174                           
  8175  0413  160A  118A  25C0   	fcall	___lwdiv
              120A  118A         
  8176  0418  1283               	bcf	status, 5	;RP0=0, select bank0
  8177  0419  1303               	bcf	status, 6	;RP1=0, select bank0
  8178  041A  0826               	movf	(0+(?___lwdiv)),w
  8179  041B  3E32               	addlw	low(032h)
  8180  041C  1683               	bsf	status, 5	;RP0=1, select bank1
  8181  041D  1303               	bcf	status, 6	;RP1=0, select bank1
  8182  041E  00B0               	movwf	(_IRdistance)^080h	;volatile
  8183  041F  1283               	bcf	status, 5	;RP0=0, select bank0
  8184  0420  1303               	bcf	status, 6	;RP1=0, select bank0
  8185  0421  0827               	movf	(1+(?___lwdiv)),w
  8186  0422  1803               	skipnc
  8187  0423  3E01               	addlw	1
  8188  0424  3E00               	addlw	high(032h)
  8189  0425  1683               	bsf	status, 5	;RP0=1, select bank1
  8190  0426  1303               	bcf	status, 6	;RP1=0, select bank1
  8191  0427  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  8192                           	line	83
  8193                           ;infrared.c: 83: }
  8194  0428  2CC9               	goto	l3016
  8195                           	line	84
  8196                           	
  8197  0429                     l3011:	
  8198                           	
  8199  0429                     l11165:	
  8200                           ;infrared.c: 84: else if (adcVal >= 56 && adcVal < 77)
  8201  0429  3000               	movlw	high(038h)
  8202  042A  1283               	bcf	status, 5	;RP0=0, select bank0
  8203  042B  026B               	subwf	(_adcVal+1),w	;volatile
  8204  042C  3038               	movlw	low(038h)
  8205  042D  1903               	skipnz
  8206  042E  026A               	subwf	(_adcVal),w	;volatile
  8207  042F  1C03               	skipc
  8208  0430  2C32               	goto	u5051
  8209  0431  2C33               	goto	u5050
  8210  0432                     u5051:
  8211  0432  2C76               	goto	l11171
  8212  0433                     u5050:
  8213                           	
  8214  0433                     l11167:	
  8215  0433  3000               	movlw	high(04Dh)
  8216  0434  026B               	subwf	(_adcVal+1),w	;volatile
  8217  0435  304D               	movlw	low(04Dh)
  8218  0436  1903               	skipnz
  8219  0437  026A               	subwf	(_adcVal),w	;volatile
  8220  0438  1803               	skipnc
  8221  0439  2C3B               	goto	u5061
  8222  043A  2C3C               	goto	u5060
  8223  043B                     u5061:
  8224  043B  2C76               	goto	l11171
  8225  043C                     u5060:
  8226                           	line	86
  8227                           	
  8228  043C                     l11169:	
  8229                           ;infrared.c: 85: {
  8230                           ;infrared.c: 86: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  8231  043C  3015               	movlw	low(015h)
  8232  043D  00A6               	movwf	(?___lwdiv)
  8233  043E  3000               	movlw	high(015h)
  8234  043F  00A7               	movwf	((?___lwdiv))+1
  8235  0440  096A               	comf	(_adcVal),w	;volatile
  8236  0441  00AE               	movwf	(??_ADCconvert+0)+0
  8237  0442  096B               	comf	(_adcVal+1),w	;volatile
  8238  0443  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8239  0444  0AAE               	incf	(??_ADCconvert+0)+0,f
  8240  0445  1903               	skipnz
  8241  0446  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8242  0447  082E               	movf	0+(??_ADCconvert+0)+0,w
  8243  0448  3E4D               	addlw	low(04Dh)
  8244  0449  00A0               	movwf	(?___wmul)
  8245  044A  082F               	movf	1+(??_ADCconvert+0)+0,w
  8246  044B  1803               	skipnc
  8247  044C  3E01               	addlw	1
  8248  044D  3E00               	addlw	high(04Dh)
  8249  044E  00A1               	movwf	1+(?___wmul)
  8250  044F  300A               	movlw	low(0Ah)
  8251  0450  00A2               	movwf	0+(?___wmul)+02h
  8252  0451  3000               	movlw	high(0Ah)
  8253  0452  00A3               	movwf	(0+(?___wmul)+02h)+1
  8254  0453  160A  118A  22FC   	fcall	___wmul
              120A  118A         
  8255  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  8256  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  8257  045A  0821               	movf	(1+(?___wmul)),w
  8258  045B  01A9               	clrf	1+(?___lwdiv)+02h
  8259  045C  07A9               	addwf	1+(?___lwdiv)+02h
  8260  045D  0820               	movf	(0+(?___wmul)),w
  8261  045E  01A8               	clrf	0+(?___lwdiv)+02h
  8262  045F  07A8               	addwf	0+(?___lwdiv)+02h
  8263                           
  8264  0460  160A  118A  25C0   	fcall	___lwdiv
              120A  118A         
  8265  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  8266  0466  1303               	bcf	status, 6	;RP1=0, select bank0
  8267  0467  0826               	movf	(0+(?___lwdiv)),w
  8268  0468  3E3C               	addlw	low(03Ch)
  8269  0469  1683               	bsf	status, 5	;RP0=1, select bank1
  8270  046A  1303               	bcf	status, 6	;RP1=0, select bank1
  8271  046B  00B0               	movwf	(_IRdistance)^080h	;volatile
  8272  046C  1283               	bcf	status, 5	;RP0=0, select bank0
  8273  046D  1303               	bcf	status, 6	;RP1=0, select bank0
  8274  046E  0827               	movf	(1+(?___lwdiv)),w
  8275  046F  1803               	skipnc
  8276  0470  3E01               	addlw	1
  8277  0471  3E00               	addlw	high(03Ch)
  8278  0472  1683               	bsf	status, 5	;RP0=1, select bank1
  8279  0473  1303               	bcf	status, 6	;RP1=0, select bank1
  8280  0474  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  8281                           	line	87
  8282                           ;infrared.c: 87: }
  8283  0475  2CC9               	goto	l3016
  8284                           	line	88
  8285                           	
  8286  0476                     l3013:	
  8287                           	
  8288  0476                     l11171:	
  8289                           ;infrared.c: 88: else if (adcVal >= 43 && adcVal < 56)
  8290  0476  3000               	movlw	high(02Bh)
  8291  0477  1283               	bcf	status, 5	;RP0=0, select bank0
  8292  0478  026B               	subwf	(_adcVal+1),w	;volatile
  8293  0479  302B               	movlw	low(02Bh)
  8294  047A  1903               	skipnz
  8295  047B  026A               	subwf	(_adcVal),w	;volatile
  8296  047C  1C03               	skipc
  8297  047D  2C7F               	goto	u5071
  8298  047E  2C80               	goto	u5070
  8299  047F                     u5071:
  8300  047F  2CC9               	goto	l3016
  8301  0480                     u5070:
  8302                           	
  8303  0480                     l11173:	
  8304  0480  3000               	movlw	high(038h)
  8305  0481  026B               	subwf	(_adcVal+1),w	;volatile
  8306  0482  3038               	movlw	low(038h)
  8307  0483  1903               	skipnz
  8308  0484  026A               	subwf	(_adcVal),w	;volatile
  8309  0485  1803               	skipnc
  8310  0486  2C88               	goto	u5081
  8311  0487  2C89               	goto	u5080
  8312  0488                     u5081:
  8313  0488  2CC9               	goto	l3016
  8314  0489                     u5080:
  8315                           	line	90
  8316                           	
  8317  0489                     l11175:	
  8318                           ;infrared.c: 89: {
  8319                           ;infrared.c: 90: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  8320  0489  300D               	movlw	low(0Dh)
  8321  048A  00A6               	movwf	(?___lwdiv)
  8322  048B  3000               	movlw	high(0Dh)
  8323  048C  00A7               	movwf	((?___lwdiv))+1
  8324  048D  096A               	comf	(_adcVal),w	;volatile
  8325  048E  00AE               	movwf	(??_ADCconvert+0)+0
  8326  048F  096B               	comf	(_adcVal+1),w	;volatile
  8327  0490  00AF               	movwf	((??_ADCconvert+0)+0+1)
  8328  0491  0AAE               	incf	(??_ADCconvert+0)+0,f
  8329  0492  1903               	skipnz
  8330  0493  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  8331  0494  082E               	movf	0+(??_ADCconvert+0)+0,w
  8332  0495  3E38               	addlw	low(038h)
  8333  0496  00A0               	movwf	(?___wmul)
  8334  0497  082F               	movf	1+(??_ADCconvert+0)+0,w
  8335  0498  1803               	skipnc
  8336  0499  3E01               	addlw	1
  8337  049A  3E00               	addlw	high(038h)
  8338  049B  00A1               	movwf	1+(?___wmul)
  8339  049C  300A               	movlw	low(0Ah)
  8340  049D  00A2               	movwf	0+(?___wmul)+02h
  8341  049E  3000               	movlw	high(0Ah)
  8342  049F  00A3               	movwf	(0+(?___wmul)+02h)+1
  8343  04A0  160A  118A  22FC   	fcall	___wmul
              120A  118A         
  8344  04A5  1283               	bcf	status, 5	;RP0=0, select bank0
  8345  04A6  1303               	bcf	status, 6	;RP1=0, select bank0
  8346  04A7  0821               	movf	(1+(?___wmul)),w
  8347  04A8  01A9               	clrf	1+(?___lwdiv)+02h
  8348  04A9  07A9               	addwf	1+(?___lwdiv)+02h
  8349  04AA  0820               	movf	(0+(?___wmul)),w
  8350  04AB  01A8               	clrf	0+(?___lwdiv)+02h
  8351  04AC  07A8               	addwf	0+(?___lwdiv)+02h
  8352                           
  8353  04AD  160A  118A  25C0   	fcall	___lwdiv
              120A  118A         
  8354  04B2  1283               	bcf	status, 5	;RP0=0, select bank0
  8355  04B3  1303               	bcf	status, 6	;RP1=0, select bank0
  8356  04B4  0826               	movf	(0+(?___lwdiv)),w
  8357  04B5  3E46               	addlw	low(046h)
  8358  04B6  1683               	bsf	status, 5	;RP0=1, select bank1
  8359  04B7  1303               	bcf	status, 6	;RP1=0, select bank1
  8360  04B8  00B0               	movwf	(_IRdistance)^080h	;volatile
  8361  04B9  1283               	bcf	status, 5	;RP0=0, select bank0
  8362  04BA  1303               	bcf	status, 6	;RP1=0, select bank0
  8363  04BB  0827               	movf	(1+(?___lwdiv)),w
  8364  04BC  1803               	skipnc
  8365  04BD  3E01               	addlw	1
  8366  04BE  3E00               	addlw	high(046h)
  8367  04BF  1683               	bsf	status, 5	;RP0=1, select bank1
  8368  04C0  1303               	bcf	status, 6	;RP1=0, select bank1
  8369  04C1  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  8370  04C2  2CC9               	goto	l3016
  8371                           	line	91
  8372                           	
  8373  04C3                     l3015:	
  8374  04C3  2CC9               	goto	l3016
  8375                           	line	92
  8376                           	
  8377  04C4                     l3014:	
  8378  04C4  2CC9               	goto	l3016
  8379                           	
  8380  04C5                     l3012:	
  8381  04C5  2CC9               	goto	l3016
  8382                           	
  8383  04C6                     l3010:	
  8384  04C6  2CC9               	goto	l3016
  8385                           	
  8386  04C7                     l3008:	
  8387  04C7  2CC9               	goto	l3016
  8388                           	
  8389  04C8                     l3006:	
  8390  04C8  2CC9               	goto	l3016
  8391                           	
  8392  04C9                     l3004:	
  8393                           	
  8394  04C9                     l3016:	
  8395  04C9  0008               	return
  8396                           	opt stack 0
  8397                           GLOBAL	__end_of_ADCconvert
  8398  04CA                     	__end_of_ADCconvert:
  8399 ;; =============== function _ADCconvert ends ============
  8400                           
  8401                           	signat	_ADCconvert,88
  8402                           	global	_robotTurn
  8403                           psect	text1138,local,class=CODE,delta=2
  8404                           global __ptext1138
  8405  092E                     __ptext1138:
  8406                           
  8407 ;; *************** function _robotTurn *****************
  8408 ;; Defined at:
  8409 ;;		line 104 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  angle           2    2[BANK0 ] int 
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;		None               void
  8416 ;; Registers used:
  8417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8423 ;;      Params:         0       2       0       0       0
  8424 ;;      Locals:         0       0       0       0       0
  8425 ;;      Temps:          0       0       0       0       0
  8426 ;;      Totals:         0       2       0       0       0
  8427 ;;Total ram usage:        2 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    4
  8430 ;; This function calls:
  8431 ;;		_ser_putch
  8432 ;; This function is called by:
  8433 ;;		_main
  8434 ;;		_robotTurnSpeed
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           psect	text1138
  8438                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8439                           	line	104
  8440                           	global	__size_of_robotTurn
  8441  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  8442                           	
  8443  092E                     _robotTurn:	
  8444                           	opt	stack 3
  8445                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8446                           	line	106
  8447                           	
  8448  092E                     l11127:	
  8449                           ;robot.c: 106: if (angle > 0)
  8450  092E  1283               	bcf	status, 5	;RP0=0, select bank0
  8451  092F  1303               	bcf	status, 6	;RP1=0, select bank0
  8452  0930  0823               	movf	(robotTurn@angle+1),w
  8453  0931  3A80               	xorlw	80h
  8454  0932  00FF               	movwf	btemp+1
  8455  0933  3080               	movlw	(high(01h))^80h
  8456  0934  027F               	subwf	btemp+1,w
  8457  0935  1D03               	skipz
  8458  0936  2939               	goto	u4935
  8459  0937  3001               	movlw	low(01h)
  8460  0938  0222               	subwf	(robotTurn@angle),w
  8461  0939                     u4935:
  8462                           
  8463  0939  1C03               	skipc
  8464  093A  293C               	goto	u4931
  8465  093B  293D               	goto	u4930
  8466  093C                     u4931:
  8467  093C  295C               	goto	l6024
  8468  093D                     u4930:
  8469                           	line	108
  8470                           	
  8471  093D                     l11129:	
  8472                           ;robot.c: 107: {
  8473                           ;robot.c: 108: ser_putch(137);
  8474  093D  3089               	movlw	(089h)
  8475  093E  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8476                           	line	110
  8477                           ;robot.c: 110: ser_putch(0);
  8478  0943  3000               	movlw	(0)
  8479  0944  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8480                           	line	112
  8481                           ;robot.c: 112: ser_putch(50);
  8482  0949  3032               	movlw	(032h)
  8483  094A  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8484                           	line	114
  8485                           ;robot.c: 114: ser_putch(0);
  8486  094F  3000               	movlw	(0)
  8487  0950  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8488                           	line	116
  8489                           ;robot.c: 116: ser_putch(1);
  8490  0955  3001               	movlw	(01h)
  8491  0956  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8492                           	line	117
  8493                           ;robot.c: 117: }
  8494  095B  29A1               	goto	l6028
  8495                           	line	118
  8496                           	
  8497  095C                     l6024:	
  8498                           ;robot.c: 118: else if (angle < 0)
  8499  095C  1283               	bcf	status, 5	;RP0=0, select bank0
  8500  095D  1303               	bcf	status, 6	;RP1=0, select bank0
  8501  095E  1FA3               	btfss	(robotTurn@angle+1),7
  8502  095F  2961               	goto	u4941
  8503  0960  2962               	goto	u4940
  8504  0961                     u4941:
  8505  0961  2981               	goto	l11133
  8506  0962                     u4940:
  8507                           	line	120
  8508                           	
  8509  0962                     l11131:	
  8510                           ;robot.c: 119: {
  8511                           ;robot.c: 120: ser_putch(137);
  8512  0962  3089               	movlw	(089h)
  8513  0963  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8514                           	line	122
  8515                           ;robot.c: 122: ser_putch(0);
  8516  0968  3000               	movlw	(0)
  8517  0969  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8518                           	line	124
  8519                           ;robot.c: 124: ser_putch(50);
  8520  096E  3032               	movlw	(032h)
  8521  096F  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8522                           	line	126
  8523                           ;robot.c: 126: ser_putch(255);
  8524  0974  30FF               	movlw	(0FFh)
  8525  0975  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8526                           	line	128
  8527                           ;robot.c: 128: ser_putch(255);
  8528  097A  30FF               	movlw	(0FFh)
  8529  097B  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8530                           	line	129
  8531                           ;robot.c: 129: }
  8532  0980  29A1               	goto	l6028
  8533                           	line	130
  8534                           	
  8535  0981                     l6026:	
  8536                           	line	132
  8537                           	
  8538  0981                     l11133:	
  8539                           ;robot.c: 130: else
  8540                           ;robot.c: 131: {
  8541                           ;robot.c: 132: ser_putch(137);
  8542  0981  3089               	movlw	(089h)
  8543  0982  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8544                           	line	134
  8545                           ;robot.c: 134: ser_putch(0);
  8546  0987  3000               	movlw	(0)
  8547  0988  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8548                           	line	136
  8549                           ;robot.c: 136: ser_putch(0);
  8550  098D  3000               	movlw	(0)
  8551  098E  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8552                           	line	138
  8553                           ;robot.c: 138: ser_putch(0);
  8554  0993  3000               	movlw	(0)
  8555  0994  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8556                           	line	140
  8557                           ;robot.c: 140: ser_putch(0);
  8558  0999  3000               	movlw	(0)
  8559  099A  160A  118A  223D   	fcall	_ser_putch
              120A  158A         
  8560  099F  29A1               	goto	l6028
  8561                           	line	141
  8562                           	
  8563  09A0                     l6027:	
  8564  09A0  29A1               	goto	l6028
  8565                           	
  8566  09A1                     l6025:	
  8567                           	line	142
  8568                           	
  8569  09A1                     l6028:	
  8570  09A1  0008               	return
  8571                           	opt stack 0
  8572                           GLOBAL	__end_of_robotTurn
  8573  09A2                     	__end_of_robotTurn:
  8574 ;; =============== function _robotTurn ends ============
  8575                           
  8576                           	signat	_robotTurn,4216
  8577                           	global	_rotate
  8578                           psect	text1139,local,class=CODE,delta=2
  8579                           global __ptext1139
  8580  1610                     __ptext1139:
  8581                           
  8582 ;; *************** function _rotate *****************
  8583 ;; Defined at:
  8584 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  numsteps        2    3[BANK0 ] unsigned int 
  8587 ;;  direction       1    5[BANK0 ] unsigned char 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  i               2    8[BANK0 ] unsigned int 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;		None               void
  8592 ;; Registers used:
  8593 ;;		wreg, status,2, status,0, pclath, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8599 ;;      Params:         0       3       0       0       0
  8600 ;;      Locals:         0       2       0       0       0
  8601 ;;      Temps:          0       2       0       0       0
  8602 ;;      Totals:         0       7       0       0       0
  8603 ;;Total ram usage:        7 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    4
  8606 ;; This function calls:
  8607 ;;		_spi_transfer
  8608 ;; This function is called by:
  8609 ;;		_main
  8610 ;;		_calibrateIR
  8611 ;;		_scan360
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           psect	text1139
  8615                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  8616                           	line	66
  8617                           	global	__size_of_rotate
  8618  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  8619                           	
  8620  1610                     _rotate:	
  8621                           	opt	stack 3
  8622                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  8623                           	line	68
  8624                           	
  8625  1610                     l11099:	
  8626                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  8627  1610  1283               	bcf	status, 5	;RP0=0, select bank0
  8628  1611  1303               	bcf	status, 6	;RP1=0, select bank0
  8629  1612  1407               	bsf	(56/8),(56)&7
  8630  1613  1487               	bsf	(57/8),(57)&7
  8631                           	line	69
  8632                           	
  8633  1614                     l11101:	
  8634                           ;steppermotor.c: 69: if (direction == 0)
  8635  1614  08A5               	movf	(rotate@direction),f
  8636  1615  1D03               	skipz
  8637  1616  2E18               	goto	u4911
  8638  1617  2E19               	goto	u4910
  8639  1618                     u4911:
  8640  1618  2E20               	goto	l11105
  8641  1619                     u4910:
  8642                           	line	70
  8643                           	
  8644  1619                     l11103:	
  8645                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  8646  1619  300B               	movlw	(0Bh)
  8647  161A  160A  118A  21B9   	fcall	_spi_transfer
              160A  118A         
  8648  161F  2E27               	goto	l11107
  8649                           	line	71
  8650                           	
  8651  1620                     l3717:	
  8652                           	line	72
  8653                           	
  8654  1620                     l11105:	
  8655                           ;steppermotor.c: 71: else
  8656                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  8657  1620  3009               	movlw	(09h)
  8658  1621  160A  118A  21B9   	fcall	_spi_transfer
              160A  118A         
  8659  1626  2E27               	goto	l11107
  8660                           	
  8661  1627                     l3718:	
  8662                           	line	73
  8663                           	
  8664  1627                     l11107:	
  8665                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  8666  1627  1283               	bcf	status, 5	;RP0=0, select bank0
  8667  1628  1303               	bcf	status, 6	;RP1=0, select bank0
  8668  1629  1007               	bcf	(56/8),(56)&7
  8669                           	
  8670  162A                     l11109:	
  8671  162A  1087               	bcf	(57/8),(57)&7
  8672                           	line	74
  8673                           	
  8674  162B                     l11111:	
  8675                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  8676  162B  01A8               	clrf	(rotate@i)
  8677  162C  01A9               	clrf	(rotate@i+1)
  8678  162D  2E44               	goto	l3719
  8679                           	line	75
  8680                           	
  8681  162E                     l3720:	
  8682                           	line	76
  8683                           ;steppermotor.c: 75: {
  8684                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  8685  162E  1507               	bsf	(58/8),(58)&7
  8686  162F  0000               	nop
  8687  1630  1283               	bcf	status, 5	;RP0=0, select bank0
  8688  1631  1303               	bcf	status, 6	;RP1=0, select bank0
  8689  1632  1107               	bcf	(58/8),(58)&7
  8690                           	line	77
  8691                           	
  8692  1633                     l11113:	
  8693                           ;steppermotor.c: 77: _delay((unsigned long)((15)*(20000000/4000.0)));
  8694                           	opt asmopt_off
  8695  1633  3062               movlw	98
  8696  1634  00A7               movwf	((??_rotate+0)+0+1),f
  8697  1635  3065               	movlw	101
  8698  1636  00A6               movwf	((??_rotate+0)+0),f
  8699  1637                     u5887:
  8700  1637  0BA6               	decfsz	((??_rotate+0)+0),f
  8701  1638  2E37               	goto	u5887
  8702  1639  0BA7               	decfsz	((??_rotate+0)+0+1),f
  8703  163A  2E37               	goto	u5887
  8704  163B  2E3C               	nop2
  8705                           opt asmopt_on
  8706                           
  8707                           	line	74
  8708  163C  3001               	movlw	low(01h)
  8709  163D  1283               	bcf	status, 5	;RP0=0, select bank0
  8710  163E  1303               	bcf	status, 6	;RP1=0, select bank0
  8711  163F  07A8               	addwf	(rotate@i),f
  8712  1640  1803               	skipnc
  8713  1641  0AA9               	incf	(rotate@i+1),f
  8714  1642  3000               	movlw	high(01h)
  8715  1643  07A9               	addwf	(rotate@i+1),f
  8716                           	
  8717  1644                     l3719:	
  8718  1644  0824               	movf	(rotate@numsteps+1),w
  8719  1645  0229               	subwf	(rotate@i+1),w
  8720  1646  1D03               	skipz
  8721  1647  2E4A               	goto	u4925
  8722  1648  0823               	movf	(rotate@numsteps),w
  8723  1649  0228               	subwf	(rotate@i),w
  8724  164A                     u4925:
  8725  164A  1C03               	skipc
  8726  164B  2E4D               	goto	u4921
  8727  164C  2E4E               	goto	u4920
  8728  164D                     u4921:
  8729  164D  2E2E               	goto	l3720
  8730  164E                     u4920:
  8731                           	
  8732  164E                     l3721:	
  8733                           	line	79
  8734                           ;steppermotor.c: 78: }
  8735                           ;steppermotor.c: 79: RC0 = 1; RC1 = 1;;
  8736  164E  1407               	bsf	(56/8),(56)&7
  8737  164F  1487               	bsf	(57/8),(57)&7
  8738                           	line	80
  8739                           	
  8740  1650                     l11115:	
  8741                           ;steppermotor.c: 80: spi_transfer(0b00000000);
  8742  1650  3000               	movlw	(0)
  8743  1651  160A  118A  21B9   	fcall	_spi_transfer
              160A  118A         
  8744                           	line	81
  8745                           	
  8746  1656                     l11117:	
  8747                           ;steppermotor.c: 81: RC0 = 0; RC1 = 0;;
  8748  1656  1283               	bcf	status, 5	;RP0=0, select bank0
  8749  1657  1303               	bcf	status, 6	;RP1=0, select bank0
  8750  1658  1007               	bcf	(56/8),(56)&7
  8751                           	
  8752  1659                     l11119:	
  8753  1659  1087               	bcf	(57/8),(57)&7
  8754                           	line	82
  8755                           	
  8756  165A                     l11121:	
  8757                           ;steppermotor.c: 82: RC2 = 1; _nop(); RC2 = 0;;
  8758  165A  1507               	bsf	(58/8),(58)&7
  8759                           	
  8760  165B                     l11123:	
  8761  165B  0000               	nop
  8762                           	
  8763  165C                     l11125:	
  8764  165C  1283               	bcf	status, 5	;RP0=0, select bank0
  8765  165D  1303               	bcf	status, 6	;RP1=0, select bank0
  8766  165E  1107               	bcf	(58/8),(58)&7
  8767                           	line	83
  8768                           	
  8769  165F                     l3722:	
  8770  165F  0008               	return
  8771                           	opt stack 0
  8772                           GLOBAL	__end_of_rotate
  8773  1660                     	__end_of_rotate:
  8774 ;; =============== function _rotate ends ============
  8775                           
  8776                           	signat	_rotate,8312
  8777                           	global	_robo_init
  8778                           psect	text1140,local,class=CODE,delta=2
  8779                           global __ptext1140
  8780  1224                     __ptext1140:
  8781                           
  8782 ;; *************** function _robo_init *****************
  8783 ;; Defined at:
  8784 ;;		line 31 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;		None
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;		None               void
  8791 ;; Registers used:
  8792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8798 ;;      Params:         0       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0
  8800 ;;      Temps:          0       0       0       0       0
  8801 ;;      Totals:         0       0       0       0       0
  8802 ;;Total ram usage:        0 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:    4
  8805 ;; This function calls:
  8806 ;;		_ser_putch
  8807 ;; This function is called by:
  8808 ;;		_init
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           psect	text1140
  8812                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8813                           	line	31
  8814                           	global	__size_of_robo_init
  8815  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  8816                           	
  8817  1224                     _robo_init:	
  8818                           	opt	stack 2
  8819                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8820                           	line	32
  8821                           	
  8822  1224                     l11097:	
  8823                           ;robot.c: 32: ser_putch(128);
  8824  1224  3080               	movlw	(080h)
  8825  1225  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  8826                           	line	33
  8827                           ;robot.c: 33: ser_putch(132);
  8828  122A  3084               	movlw	(084h)
  8829  122B  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  8830                           	line	34
  8831                           ;robot.c: 34: ser_putch(150);
  8832  1230  3096               	movlw	(096h)
  8833  1231  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  8834                           	line	35
  8835                           ;robot.c: 35: ser_putch(0);
  8836  1236  3000               	movlw	(0)
  8837  1237  160A  118A  223D   	fcall	_ser_putch
              160A  118A         
  8838                           	line	36
  8839                           	
  8840  123C                     l6010:	
  8841  123C  0008               	return
  8842                           	opt stack 0
  8843                           GLOBAL	__end_of_robo_init
  8844  123D                     	__end_of_robo_init:
  8845 ;; =============== function _robo_init ends ============
  8846                           
  8847                           	signat	_robo_init,88
  8848                           	global	_lcd_write_data
  8849                           psect	text1141,local,class=CODE,delta=2
  8850                           global __ptext1141
  8851  1193                     __ptext1141:
  8852                           
  8853 ;; *************** function _lcd_write_data *****************
  8854 ;; Defined at:
  8855 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  databyte        1    wreg     unsigned char 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  databyte        1    2[BANK0 ] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;		None               void
  8862 ;; Registers used:
  8863 ;;		wreg
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8869 ;;      Params:         0       0       0       0       0
  8870 ;;      Locals:         0       1       0       0       0
  8871 ;;      Temps:          0       2       0       0       0
  8872 ;;      Totals:         0       3       0       0       0
  8873 ;;Total ram usage:        3 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:    3
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_lcd_write_string
  8880 ;;		_lcd_write_2_digit_bcd
  8881 ;;		_lcd_write_3_digit_bcd
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           psect	text1141
  8885                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8886                           	line	30
  8887                           	global	__size_of_lcd_write_data
  8888  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  8889                           	
  8890  1193                     _lcd_write_data:	
  8891                           	opt	stack 1
  8892                           ; Regs used in _lcd_write_data: [wreg]
  8893                           ;lcd_write_data@databyte stored from wreg
  8894  1193  1283               	bcf	status, 5	;RP0=0, select bank0
  8895  1194  1303               	bcf	status, 6	;RP1=0, select bank0
  8896  1195  00A2               	movwf	(lcd_write_data@databyte)
  8897                           	line	31
  8898                           	
  8899  1196                     l11089:	
  8900                           ;lcd.c: 31: RE2 = 0;
  8901  1196  1109               	bcf	(74/8),(74)&7
  8902                           	line	32
  8903                           ;lcd.c: 32: RE1 = 0;
  8904  1197  1089               	bcf	(73/8),(73)&7
  8905                           	line	33
  8906                           ;lcd.c: 33: RE0 = 1;
  8907  1198  1409               	bsf	(72/8),(72)&7
  8908                           	line	34
  8909                           	
  8910  1199                     l11091:	
  8911                           ;lcd.c: 34: PORTD = databyte;
  8912  1199  0822               	movf	(lcd_write_data@databyte),w
  8913  119A  0088               	movwf	(8)	;volatile
  8914                           	line	35
  8915                           	
  8916  119B                     l11093:	
  8917                           ;lcd.c: 35: RE2 = 1;
  8918  119B  1509               	bsf	(74/8),(74)&7
  8919                           	line	36
  8920                           	
  8921  119C                     l11095:	
  8922                           ;lcd.c: 36: RE2 = 0;
  8923  119C  1109               	bcf	(74/8),(74)&7
  8924                           	line	37
  8925                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  8926                           	opt asmopt_off
  8927  119D  3007               movlw	7
  8928  119E  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  8929  119F  307D               	movlw	125
  8930  11A0  00A0               movwf	((??_lcd_write_data+0)+0),f
  8931  11A1                     u5897:
  8932  11A1  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  8933  11A2  29A1               	goto	u5897
  8934  11A3  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  8935  11A4  29A1               	goto	u5897
  8936                           opt asmopt_on
  8937                           
  8938                           	line	38
  8939                           	
  8940  11A5                     l1402:	
  8941  11A5  0008               	return
  8942                           	opt stack 0
  8943                           GLOBAL	__end_of_lcd_write_data
  8944  11A6                     	__end_of_lcd_write_data:
  8945 ;; =============== function _lcd_write_data ends ============
  8946                           
  8947                           	signat	_lcd_write_data,4216
  8948                           	global	_lcd_write_control
  8949                           psect	text1142,local,class=CODE,delta=2
  8950                           global __ptext1142
  8951  11CD                     __ptext1142:
  8952                           
  8953 ;; *************** function _lcd_write_control *****************
  8954 ;; Defined at:
  8955 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;  databyte        1    wreg     unsigned char 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  databyte        1    2[BANK0 ] unsigned char 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;		None               void
  8962 ;; Registers used:
  8963 ;;		wreg
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8969 ;;      Params:         0       0       0       0       0
  8970 ;;      Locals:         0       1       0       0       0
  8971 ;;      Temps:          0       2       0       0       0
  8972 ;;      Totals:         0       3       0       0       0
  8973 ;;Total ram usage:        3 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    3
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_lcd_set_cursor
  8980 ;;		_lcd_init
  8981 ;;		_UpdateDisplay
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           psect	text1142
  8985                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8986                           	line	18
  8987                           	global	__size_of_lcd_write_control
  8988  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  8989                           	
  8990  11CD                     _lcd_write_control:	
  8991                           	opt	stack 1
  8992                           ; Regs used in _lcd_write_control: [wreg]
  8993                           ;lcd_write_control@databyte stored from wreg
  8994  11CD  1283               	bcf	status, 5	;RP0=0, select bank0
  8995  11CE  1303               	bcf	status, 6	;RP1=0, select bank0
  8996  11CF  00A2               	movwf	(lcd_write_control@databyte)
  8997                           	line	19
  8998                           	
  8999  11D0                     l11081:	
  9000                           ;lcd.c: 19: RE2 = 0;
  9001  11D0  1109               	bcf	(74/8),(74)&7
  9002                           	line	20
  9003                           ;lcd.c: 20: RE1 = 0;
  9004  11D1  1089               	bcf	(73/8),(73)&7
  9005                           	line	21
  9006                           ;lcd.c: 21: RE0 = 0;
  9007  11D2  1009               	bcf	(72/8),(72)&7
  9008                           	line	22
  9009                           	
  9010  11D3                     l11083:	
  9011                           ;lcd.c: 22: PORTD = databyte;
  9012  11D3  0822               	movf	(lcd_write_control@databyte),w
  9013  11D4  0088               	movwf	(8)	;volatile
  9014                           	line	23
  9015                           	
  9016  11D5                     l11085:	
  9017                           ;lcd.c: 23: RE2 = 1;
  9018  11D5  1509               	bsf	(74/8),(74)&7
  9019                           	line	24
  9020                           	
  9021  11D6                     l11087:	
  9022                           ;lcd.c: 24: RE2 = 0;
  9023  11D6  1109               	bcf	(74/8),(74)&7
  9024                           	line	25
  9025                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  9026                           	opt asmopt_off
  9027  11D7  300D               movlw	13
  9028  11D8  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  9029  11D9  30FB               	movlw	251
  9030  11DA  00A0               movwf	((??_lcd_write_control+0)+0),f
  9031  11DB                     u5907:
  9032  11DB  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  9033  11DC  29DB               	goto	u5907
  9034  11DD  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  9035  11DE  29DB               	goto	u5907
  9036  11DF  29E0               	nop2
  9037                           opt asmopt_on
  9038                           
  9039                           	line	26
  9040                           	
  9041  11E0                     l1399:	
  9042  11E0  0008               	return
  9043                           	opt stack 0
  9044                           GLOBAL	__end_of_lcd_write_control
  9045  11E1                     	__end_of_lcd_write_control:
  9046 ;; =============== function _lcd_write_control ends ============
  9047                           
  9048                           	signat	_lcd_write_control,4216
  9049                           	global	_init_adc
  9050                           psect	text1143,local,class=CODE,delta=2
  9051                           global __ptext1143
  9052  11E1                     __ptext1143:
  9053                           
  9054 ;; *************** function _init_adc *****************
  9055 ;; Defined at:
  9056 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;		None
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;		None               void
  9063 ;; Registers used:
  9064 ;;		wreg, status,2
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9070 ;;      Params:         0       0       0       0       0
  9071 ;;      Locals:         0       0       0       0       0
  9072 ;;      Temps:          0       1       0       0       0
  9073 ;;      Totals:         0       1       0       0       0
  9074 ;;Total ram usage:        1 bytes
  9075 ;; Hardware stack levels used:    1
  9076 ;; Hardware stack levels required when called:    3
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_init
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           psect	text1143
  9084                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  9085                           	line	61
  9086                           	global	__size_of_init_adc
  9087  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  9088                           	
  9089  11E1                     _init_adc:	
  9090                           	opt	stack 3
  9091                           ; Regs used in _init_adc: [wreg+status,2]
  9092                           	line	63
  9093                           	
  9094  11E1                     l11071:	
  9095                           ;adc.c: 63: PORTA = 0;
  9096  11E1  1283               	bcf	status, 5	;RP0=0, select bank0
  9097  11E2  1303               	bcf	status, 6	;RP1=0, select bank0
  9098  11E3  0185               	clrf	(5)	;volatile
  9099                           	line	64
  9100                           	
  9101  11E4                     l11073:	
  9102                           ;adc.c: 64: TRISA = 0b00111111;
  9103  11E4  303F               	movlw	(03Fh)
  9104  11E5  1683               	bsf	status, 5	;RP0=1, select bank1
  9105  11E6  1303               	bcf	status, 6	;RP1=0, select bank1
  9106  11E7  0085               	movwf	(133)^080h	;volatile
  9107                           	line	67
  9108                           	
  9109  11E8                     l11075:	
  9110                           ;adc.c: 67: ADCON0 = 0b10100001;
  9111  11E8  30A1               	movlw	(0A1h)
  9112  11E9  1283               	bcf	status, 5	;RP0=0, select bank0
  9113  11EA  1303               	bcf	status, 6	;RP1=0, select bank0
  9114  11EB  009F               	movwf	(31)	;volatile
  9115                           	line	68
  9116                           	
  9117  11EC                     l11077:	
  9118                           ;adc.c: 68: ADCON1 = 0b0000010;
  9119  11EC  3002               	movlw	(02h)
  9120  11ED  1683               	bsf	status, 5	;RP0=1, select bank1
  9121  11EE  1303               	bcf	status, 6	;RP1=0, select bank1
  9122  11EF  009F               	movwf	(159)^080h	;volatile
  9123                           	line	70
  9124                           	
  9125  11F0                     l11079:	
  9126                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9127                           	opt asmopt_off
  9128  11F0  3053               movlw	83
  9129  11F1  1283               	bcf	status, 5	;RP0=0, select bank0
  9130  11F2  1303               	bcf	status, 6	;RP1=0, select bank0
  9131  11F3  00A0               movwf	(??_init_adc+0)+0,f
  9132  11F4                     u5917:
  9133  11F4  0BA0               decfsz	(??_init_adc+0)+0,f
  9134  11F5  29F4               	goto	u5917
  9135                           opt asmopt_on
  9136                           
  9137                           	line	72
  9138                           	
  9139  11F6                     l700:	
  9140  11F6  0008               	return
  9141                           	opt stack 0
  9142                           GLOBAL	__end_of_init_adc
  9143  11F7                     	__end_of_init_adc:
  9144 ;; =============== function _init_adc ends ============
  9145                           
  9146                           	signat	_init_adc,88
  9147                           	global	_adc_read_channel
  9148                           psect	text1144,local,class=CODE,delta=2
  9149                           global __ptext1144
  9150  146E                     __ptext1144:
  9151                           
  9152 ;; *************** function _adc_read_channel *****************
  9153 ;; Defined at:
  9154 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  channel         1    wreg     unsigned char 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  channel         1    7[BANK0 ] unsigned char 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      unsigned char 
  9161 ;; Registers used:
  9162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9168 ;;      Params:         0       0       0       0       0
  9169 ;;      Locals:         0       1       0       0       0
  9170 ;;      Temps:          0       1       0       0       0
  9171 ;;      Totals:         0       2       0       0       0
  9172 ;;Total ram usage:        2 bytes
  9173 ;; Hardware stack levels used:    1
  9174 ;; Hardware stack levels required when called:    4
  9175 ;; This function calls:
  9176 ;;		_adc_read
  9177 ;; This function is called by:
  9178 ;;		_readDistance
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           psect	text1144
  9182                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  9183                           	line	20
  9184                           	global	__size_of_adc_read_channel
  9185  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  9186                           	
  9187  146E                     _adc_read_channel:	
  9188                           	opt	stack 0
  9189                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9190                           ;adc_read_channel@channel stored from wreg
  9191  146E  1283               	bcf	status, 5	;RP0=0, select bank0
  9192  146F  1303               	bcf	status, 6	;RP1=0, select bank0
  9193  1470  00A7               	movwf	(adc_read_channel@channel)
  9194                           	line	21
  9195                           	
  9196  1471                     l11055:	
  9197                           ;adc.c: 21: switch(channel)
  9198  1471  2C8A               	goto	l11063
  9199                           	line	23
  9200                           ;adc.c: 22: {
  9201                           ;adc.c: 23: case 0:
  9202                           	
  9203  1472                     l690:	
  9204                           	line	24
  9205                           ;adc.c: 24: CHS0 = 0;
  9206  1472  119F               	bcf	(251/8),(251)&7
  9207                           	line	25
  9208                           ;adc.c: 25: CHS1 = 0;
  9209  1473  121F               	bcf	(252/8),(252)&7
  9210                           	line	26
  9211                           ;adc.c: 26: CHS2 = 0;
  9212  1474  129F               	bcf	(253/8),(253)&7
  9213                           	line	27
  9214                           ;adc.c: 27: break;
  9215  1475  2C9B               	goto	l11065
  9216                           	line	28
  9217                           ;adc.c: 28: case 1:
  9218                           	
  9219  1476                     l692:	
  9220                           	line	29
  9221                           ;adc.c: 29: CHS0 = 1;
  9222  1476  159F               	bsf	(251/8),(251)&7
  9223                           	line	30
  9224                           ;adc.c: 30: CHS1 = 0;
  9225  1477  121F               	bcf	(252/8),(252)&7
  9226                           	line	31
  9227                           ;adc.c: 31: CHS2 = 0;
  9228  1478  129F               	bcf	(253/8),(253)&7
  9229                           	line	32
  9230                           ;adc.c: 32: break;
  9231  1479  2C9B               	goto	l11065
  9232                           	line	33
  9233                           ;adc.c: 33: case 2:
  9234                           	
  9235  147A                     l693:	
  9236                           	line	34
  9237                           ;adc.c: 34: CHS0 = 0;
  9238  147A  119F               	bcf	(251/8),(251)&7
  9239                           	line	35
  9240                           ;adc.c: 35: CHS1 = 1;
  9241  147B  161F               	bsf	(252/8),(252)&7
  9242                           	line	36
  9243                           ;adc.c: 36: CHS2 = 0;
  9244  147C  129F               	bcf	(253/8),(253)&7
  9245                           	line	37
  9246                           ;adc.c: 37: break;
  9247  147D  2C9B               	goto	l11065
  9248                           	line	38
  9249                           ;adc.c: 38: case 3:
  9250                           	
  9251  147E                     l694:	
  9252                           	line	39
  9253                           ;adc.c: 39: CHS0 = 1;
  9254  147E  159F               	bsf	(251/8),(251)&7
  9255                           	line	40
  9256                           ;adc.c: 40: CHS1 = 1;
  9257  147F  161F               	bsf	(252/8),(252)&7
  9258                           	line	41
  9259                           ;adc.c: 41: CHS2 = 0;
  9260  1480  129F               	bcf	(253/8),(253)&7
  9261                           	line	42
  9262                           ;adc.c: 42: break;
  9263  1481  2C9B               	goto	l11065
  9264                           	line	43
  9265                           ;adc.c: 43: case 4:
  9266                           	
  9267  1482                     l695:	
  9268                           	line	44
  9269                           ;adc.c: 44: CHS0 = 0;
  9270  1482  119F               	bcf	(251/8),(251)&7
  9271                           	line	45
  9272                           ;adc.c: 45: CHS1 = 0;
  9273  1483  121F               	bcf	(252/8),(252)&7
  9274                           	line	46
  9275                           ;adc.c: 46: CHS2 = 1;
  9276  1484  169F               	bsf	(253/8),(253)&7
  9277                           	line	47
  9278                           ;adc.c: 47: break;
  9279  1485  2C9B               	goto	l11065
  9280                           	line	50
  9281                           ;adc.c: 50: default:
  9282                           	
  9283  1486                     l696:	
  9284                           	line	51
  9285                           	
  9286  1486                     l11057:	
  9287                           ;adc.c: 51: return 0;
  9288  1486  3000               	movlw	(0)
  9289  1487  2CA8               	goto	l697
  9290                           	
  9291  1488                     l11059:	
  9292  1488  2CA8               	goto	l697
  9293                           	line	52
  9294                           	
  9295  1489                     l11061:	
  9296                           ;adc.c: 52: }
  9297  1489  2C9B               	goto	l11065
  9298                           	line	21
  9299                           	
  9300  148A                     l689:	
  9301                           	
  9302  148A                     l11063:	
  9303  148A  0827               	movf	(adc_read_channel@channel),w
  9304                           	; Switch size 1, requested type "space"
  9305                           ; Number of cases is 5, Range of values is 0 to 4
  9306                           ; switch strategies available:
  9307                           ; Name         Instructions Cycles
  9308                           ; simple_byte           16     9 (average)
  9309                           ; direct_byte           23     8 (fixed)
  9310                           ; jumptable            260     6 (fixed)
  9311                           ; rangetable             9     6 (fixed)
  9312                           ; spacedrange           16     9 (fixed)
  9313                           ; locatedrange           5     3 (fixed)
  9314                           ;	Chosen strategy is simple_byte
  9315                           
  9316                           	opt asmopt_off
  9317  148B  3A00               	xorlw	0^0	; case 0
  9318  148C  1903               	skipnz
  9319  148D  2C72               	goto	l690
  9320  148E  3A01               	xorlw	1^0	; case 1
  9321  148F  1903               	skipnz
  9322  1490  2C76               	goto	l692
  9323  1491  3A03               	xorlw	2^1	; case 2
  9324  1492  1903               	skipnz
  9325  1493  2C7A               	goto	l693
  9326  1494  3A01               	xorlw	3^2	; case 3
  9327  1495  1903               	skipnz
  9328  1496  2C7E               	goto	l694
  9329  1497  3A07               	xorlw	4^3	; case 4
  9330  1498  1903               	skipnz
  9331  1499  2C82               	goto	l695
  9332  149A  2C86               	goto	l11057
  9333                           	opt asmopt_on
  9334                           
  9335                           	line	52
  9336                           	
  9337  149B                     l691:	
  9338                           	line	54
  9339                           	
  9340  149B                     l11065:	
  9341                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
  9342                           	opt asmopt_off
  9343  149B  3053               movlw	83
  9344  149C  00A6               movwf	(??_adc_read_channel+0)+0,f
  9345  149D                     u5927:
  9346  149D  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  9347  149E  2C9D               	goto	u5927
  9348                           opt asmopt_on
  9349                           
  9350                           	line	56
  9351                           	
  9352  149F                     l11067:	
  9353                           ;adc.c: 56: return adc_read();
  9354  149F  160A  118A  22A8   	fcall	_adc_read
              160A  118A         
  9355  14A4  1283               	bcf	status, 5	;RP0=0, select bank0
  9356  14A5  1303               	bcf	status, 6	;RP1=0, select bank0
  9357  14A6  0820               	movf	(0+(?_adc_read)),w
  9358  14A7  2CA8               	goto	l697
  9359                           	
  9360  14A8                     l11069:	
  9361                           	line	58
  9362                           	
  9363  14A8                     l697:	
  9364  14A8  0008               	return
  9365                           	opt stack 0
  9366                           GLOBAL	__end_of_adc_read_channel
  9367  14A9                     	__end_of_adc_read_channel:
  9368 ;; =============== function _adc_read_channel ends ============
  9369                           
  9370                           	signat	_adc_read_channel,4217
  9371                           	global	___awmod
  9372                           psect	text1145,local,class=CODE,delta=2
  9373                           global __ptext1145
  9374  16BE                     __ptext1145:
  9375                           
  9376 ;; *************** function ___awmod *****************
  9377 ;; Defined at:
  9378 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  divisor         2    0[BANK0 ] int 
  9381 ;;  dividend        2    2[BANK0 ] int 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  sign            1    6[BANK0 ] unsigned char 
  9384 ;;  counter         1    5[BANK0 ] unsigned char 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  2    0[BANK0 ] int 
  9387 ;; Registers used:
  9388 ;;		wreg, status,2, status,0
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9394 ;;      Params:         0       4       0       0       0
  9395 ;;      Locals:         0       2       0       0       0
  9396 ;;      Temps:          0       1       0       0       0
  9397 ;;      Totals:         0       7       0       0       0
  9398 ;;Total ram usage:        7 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    3
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_UpdateDisplay
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           psect	text1145
  9408                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  9409                           	line	5
  9410                           	global	__size_of___awmod
  9411  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  9412                           	
  9413  16BE                     ___awmod:	
  9414                           	opt	stack 2
  9415                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9416                           	line	8
  9417                           	
  9418  16BE                     l10953:	
  9419  16BE  1283               	bcf	status, 5	;RP0=0, select bank0
  9420  16BF  1303               	bcf	status, 6	;RP1=0, select bank0
  9421  16C0  01A6               	clrf	(___awmod@sign)
  9422                           	line	9
  9423  16C1  1FA3               	btfss	(___awmod@dividend+1),7
  9424  16C2  2EC4               	goto	u4701
  9425  16C3  2EC5               	goto	u4700
  9426  16C4                     u4701:
  9427  16C4  2ECE               	goto	l10957
  9428  16C5                     u4700:
  9429                           	line	10
  9430                           	
  9431  16C5                     l10955:	
  9432  16C5  09A2               	comf	(___awmod@dividend),f
  9433  16C6  09A3               	comf	(___awmod@dividend+1),f
  9434  16C7  0AA2               	incf	(___awmod@dividend),f
  9435  16C8  1903               	skipnz
  9436  16C9  0AA3               	incf	(___awmod@dividend+1),f
  9437                           	line	11
  9438  16CA  01A6               	clrf	(___awmod@sign)
  9439  16CB  1403               	bsf	status,0
  9440  16CC  0DA6               	rlf	(___awmod@sign),f
  9441  16CD  2ECE               	goto	l10957
  9442                           	line	12
  9443                           	
  9444  16CE                     l7703:	
  9445                           	line	13
  9446                           	
  9447  16CE                     l10957:	
  9448  16CE  1FA1               	btfss	(___awmod@divisor+1),7
  9449  16CF  2ED1               	goto	u4711
  9450  16D0  2ED2               	goto	u4710
  9451  16D1                     u4711:
  9452  16D1  2ED8               	goto	l10961
  9453  16D2                     u4710:
  9454                           	line	14
  9455                           	
  9456  16D2                     l10959:	
  9457  16D2  09A0               	comf	(___awmod@divisor),f
  9458  16D3  09A1               	comf	(___awmod@divisor+1),f
  9459  16D4  0AA0               	incf	(___awmod@divisor),f
  9460  16D5  1903               	skipnz
  9461  16D6  0AA1               	incf	(___awmod@divisor+1),f
  9462  16D7  2ED8               	goto	l10961
  9463                           	
  9464  16D8                     l7704:	
  9465                           	line	15
  9466                           	
  9467  16D8                     l10961:	
  9468  16D8  0821               	movf	(___awmod@divisor+1),w
  9469  16D9  0420               	iorwf	(___awmod@divisor),w
  9470  16DA  1903               	skipnz
  9471  16DB  2EDD               	goto	u4721
  9472  16DC  2EDE               	goto	u4720
  9473  16DD                     u4721:
  9474  16DD  2F14               	goto	l10979
  9475  16DE                     u4720:
  9476                           	line	16
  9477                           	
  9478  16DE                     l10963:	
  9479  16DE  01A5               	clrf	(___awmod@counter)
  9480  16DF  1403               	bsf	status,0
  9481  16E0  0DA5               	rlf	(___awmod@counter),f
  9482                           	line	17
  9483  16E1  2EEE               	goto	l10969
  9484                           	
  9485  16E2                     l7707:	
  9486                           	line	18
  9487                           	
  9488  16E2                     l10965:	
  9489  16E2  3001               	movlw	01h
  9490                           	
  9491  16E3                     u4735:
  9492  16E3  1003               	clrc
  9493  16E4  0DA0               	rlf	(___awmod@divisor),f
  9494  16E5  0DA1               	rlf	(___awmod@divisor+1),f
  9495  16E6  3EFF               	addlw	-1
  9496  16E7  1D03               	skipz
  9497  16E8  2EE3               	goto	u4735
  9498                           	line	19
  9499                           	
  9500  16E9                     l10967:	
  9501  16E9  3001               	movlw	(01h)
  9502  16EA  00A4               	movwf	(??___awmod+0)+0
  9503  16EB  0824               	movf	(??___awmod+0)+0,w
  9504  16EC  07A5               	addwf	(___awmod@counter),f
  9505  16ED  2EEE               	goto	l10969
  9506                           	line	20
  9507                           	
  9508  16EE                     l7706:	
  9509                           	line	17
  9510                           	
  9511  16EE                     l10969:	
  9512  16EE  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  9513  16EF  2EF1               	goto	u4741
  9514  16F0  2EF2               	goto	u4740
  9515  16F1                     u4741:
  9516  16F1  2EE2               	goto	l10965
  9517  16F2                     u4740:
  9518  16F2  2EF4               	goto	l10971
  9519                           	
  9520  16F3                     l7708:	
  9521  16F3  2EF4               	goto	l10971
  9522                           	line	21
  9523                           	
  9524  16F4                     l7709:	
  9525                           	line	22
  9526                           	
  9527  16F4                     l10971:	
  9528  16F4  0821               	movf	(___awmod@divisor+1),w
  9529  16F5  0223               	subwf	(___awmod@dividend+1),w
  9530  16F6  1D03               	skipz
  9531  16F7  2EFA               	goto	u4755
  9532  16F8  0820               	movf	(___awmod@divisor),w
  9533  16F9  0222               	subwf	(___awmod@dividend),w
  9534  16FA                     u4755:
  9535  16FA  1C03               	skipc
  9536  16FB  2EFD               	goto	u4751
  9537  16FC  2EFE               	goto	u4750
  9538  16FD                     u4751:
  9539  16FD  2F05               	goto	l10975
  9540  16FE                     u4750:
  9541                           	line	23
  9542                           	
  9543  16FE                     l10973:	
  9544  16FE  0820               	movf	(___awmod@divisor),w
  9545  16FF  02A2               	subwf	(___awmod@dividend),f
  9546  1700  0821               	movf	(___awmod@divisor+1),w
  9547  1701  1C03               	skipc
  9548  1702  03A3               	decf	(___awmod@dividend+1),f
  9549  1703  02A3               	subwf	(___awmod@dividend+1),f
  9550  1704  2F05               	goto	l10975
  9551                           	
  9552  1705                     l7710:	
  9553                           	line	24
  9554                           	
  9555  1705                     l10975:	
  9556  1705  3001               	movlw	01h
  9557                           	
  9558  1706                     u4765:
  9559  1706  1003               	clrc
  9560  1707  0CA1               	rrf	(___awmod@divisor+1),f
  9561  1708  0CA0               	rrf	(___awmod@divisor),f
  9562  1709  3EFF               	addlw	-1
  9563  170A  1D03               	skipz
  9564  170B  2F06               	goto	u4765
  9565                           	line	25
  9566                           	
  9567  170C                     l10977:	
  9568  170C  3001               	movlw	low(01h)
  9569  170D  02A5               	subwf	(___awmod@counter),f
  9570  170E  1D03               	btfss	status,2
  9571  170F  2F11               	goto	u4771
  9572  1710  2F12               	goto	u4770
  9573  1711                     u4771:
  9574  1711  2EF4               	goto	l10971
  9575  1712                     u4770:
  9576  1712  2F14               	goto	l10979
  9577                           	
  9578  1713                     l7711:	
  9579  1713  2F14               	goto	l10979
  9580                           	line	26
  9581                           	
  9582  1714                     l7705:	
  9583                           	line	27
  9584                           	
  9585  1714                     l10979:	
  9586  1714  0826               	movf	(___awmod@sign),w
  9587  1715  1D03               	skipz
  9588  1716  2F18               	goto	u4780
  9589  1717  2F1E               	goto	l10983
  9590  1718                     u4780:
  9591                           	line	28
  9592                           	
  9593  1718                     l10981:	
  9594  1718  09A2               	comf	(___awmod@dividend),f
  9595  1719  09A3               	comf	(___awmod@dividend+1),f
  9596  171A  0AA2               	incf	(___awmod@dividend),f
  9597  171B  1903               	skipnz
  9598  171C  0AA3               	incf	(___awmod@dividend+1),f
  9599  171D  2F1E               	goto	l10983
  9600                           	
  9601  171E                     l7712:	
  9602                           	line	29
  9603                           	
  9604  171E                     l10983:	
  9605  171E  0823               	movf	(___awmod@dividend+1),w
  9606  171F  01A1               	clrf	(?___awmod+1)
  9607  1720  07A1               	addwf	(?___awmod+1)
  9608  1721  0822               	movf	(___awmod@dividend),w
  9609  1722  01A0               	clrf	(?___awmod)
  9610  1723  07A0               	addwf	(?___awmod)
  9611                           
  9612  1724  2F25               	goto	l7713
  9613                           	
  9614  1725                     l10985:	
  9615                           	line	30
  9616                           	
  9617  1725                     l7713:	
  9618  1725  0008               	return
  9619                           	opt stack 0
  9620                           GLOBAL	__end_of___awmod
  9621  1726                     	__end_of___awmod:
  9622 ;; =============== function ___awmod ends ============
  9623                           
  9624                           	signat	___awmod,8314
  9625                           	global	___ftge
  9626                           psect	text1146,local,class=CODE,delta=2
  9627                           global __ptext1146
  9628  1792                     __ptext1146:
  9629                           
  9630 ;; *************** function ___ftge *****************
  9631 ;; Defined at:
  9632 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftge.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  ff1             3    0[BANK0 ] float 
  9635 ;;  ff2             3    3[BANK0 ] float 
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;		None               void
  9640 ;; Registers used:
  9641 ;;		wreg, status,2, status,0
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9647 ;;      Params:         0       6       0       0       0
  9648 ;;      Locals:         0       0       0       0       0
  9649 ;;      Temps:          0       6       0       0       0
  9650 ;;      Totals:         0      12       0       0       0
  9651 ;;Total ram usage:       12 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; Hardware stack levels required when called:    3
  9654 ;; This function calls:
  9655 ;;		Nothing
  9656 ;; This function is called by:
  9657 ;;		_robotMoveSpeed
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           psect	text1146
  9661                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftge.c"
  9662                           	line	5
  9663                           	global	__size_of___ftge
  9664  006E                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  9665                           	
  9666  1792                     ___ftge:	
  9667                           	opt	stack 3
  9668                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9669                           	line	6
  9670                           	
  9671  1792                     l10933:	
  9672  1792  1283               	bcf	status, 5	;RP0=0, select bank0
  9673  1793  1303               	bcf	status, 6	;RP1=0, select bank0
  9674  1794  1FA2               	btfss	(___ftge@ff1+2),(23)&7
  9675  1795  2F97               	goto	u4651
  9676  1796  2F98               	goto	u4650
  9677  1797                     u4651:
  9678  1797  2FBE               	goto	l10937
  9679  1798                     u4650:
  9680                           	line	7
  9681                           	
  9682  1798                     l10935:	
  9683  1798  3000               	movlw	0
  9684  1799  00A6               	movwf	((??___ftge+0)+0)
  9685  179A  3000               	movlw	0
  9686  179B  00A7               	movwf	((??___ftge+0)+0+1)
  9687  179C  3080               	movlw	080h
  9688  179D  00A8               	movwf	((??___ftge+0)+0+2)
  9689  179E  0920               	comf	(___ftge@ff1),w
  9690  179F  00A9               	movwf	(??___ftge+3)+0
  9691  17A0  0921               	comf	(___ftge@ff1+1),w
  9692  17A1  00AA               	movwf	((??___ftge+3)+0+1)
  9693  17A2  0922               	comf	(___ftge@ff1+2),w
  9694  17A3  00AB               	movwf	((??___ftge+3)+0+2)
  9695  17A4  0AA9               	incf	(??___ftge+3)+0,f
  9696  17A5  1903               	skipnz
  9697  17A6  0AAA               	incf	((??___ftge+3)+0+1),f
  9698  17A7  1903               	skipnz
  9699  17A8  0AAB               	incf	((??___ftge+3)+0+2),f
  9700  17A9  0829               	movf	0+(??___ftge+3)+0,w
  9701  17AA  07A6               	addwf	(??___ftge+0)+0,f
  9702  17AB  082A               	movf	1+(??___ftge+3)+0,w
  9703  17AC  1803               	skipnc
  9704  17AD  0F2A               	incfsz	1+(??___ftge+3)+0,w
  9705  17AE  2FB0               	goto	u4661
  9706  17AF  2FB1               	goto	u4662
  9707  17B0                     u4661:
  9708  17B0  07A7               	addwf	(??___ftge+0)+1,f
  9709                           	
  9710  17B1                     u4662:
  9711  17B1  082B               	movf	2+(??___ftge+3)+0,w
  9712  17B2  1803               	skipnc
  9713  17B3  0F2B               	incfsz	2+(??___ftge+3)+0,w
  9714  17B4  2FB6               	goto	u4663
  9715  17B5  2FB7               	goto	u4664
  9716  17B6                     u4663:
  9717  17B6  07A8               	addwf	(??___ftge+0)+2,f
  9718                           	
  9719  17B7                     u4664:
  9720  17B7  0826               	movf	0+(??___ftge+0)+0,w
  9721  17B8  00A0               	movwf	(___ftge@ff1)
  9722  17B9  0827               	movf	1+(??___ftge+0)+0,w
  9723  17BA  00A1               	movwf	(___ftge@ff1+1)
  9724  17BB  0828               	movf	2+(??___ftge+0)+0,w
  9725  17BC  00A2               	movwf	(___ftge@ff1+2)
  9726  17BD  2FBE               	goto	l10937
  9727                           	
  9728  17BE                     l7662:	
  9729                           	line	8
  9730                           	
  9731  17BE                     l10937:	
  9732  17BE  1FA5               	btfss	(___ftge@ff2+2),(23)&7
  9733  17BF  2FC1               	goto	u4671
  9734  17C0  2FC2               	goto	u4670
  9735  17C1                     u4671:
  9736  17C1  2FE8               	goto	l10941
  9737  17C2                     u4670:
  9738                           	line	9
  9739                           	
  9740  17C2                     l10939:	
  9741  17C2  3000               	movlw	0
  9742  17C3  00A6               	movwf	((??___ftge+0)+0)
  9743  17C4  3000               	movlw	0
  9744  17C5  00A7               	movwf	((??___ftge+0)+0+1)
  9745  17C6  3080               	movlw	080h
  9746  17C7  00A8               	movwf	((??___ftge+0)+0+2)
  9747  17C8  0923               	comf	(___ftge@ff2),w
  9748  17C9  00A9               	movwf	(??___ftge+3)+0
  9749  17CA  0924               	comf	(___ftge@ff2+1),w
  9750  17CB  00AA               	movwf	((??___ftge+3)+0+1)
  9751  17CC  0925               	comf	(___ftge@ff2+2),w
  9752  17CD  00AB               	movwf	((??___ftge+3)+0+2)
  9753  17CE  0AA9               	incf	(??___ftge+3)+0,f
  9754  17CF  1903               	skipnz
  9755  17D0  0AAA               	incf	((??___ftge+3)+0+1),f
  9756  17D1  1903               	skipnz
  9757  17D2  0AAB               	incf	((??___ftge+3)+0+2),f
  9758  17D3  0829               	movf	0+(??___ftge+3)+0,w
  9759  17D4  07A6               	addwf	(??___ftge+0)+0,f
  9760  17D5  082A               	movf	1+(??___ftge+3)+0,w
  9761  17D6  1803               	skipnc
  9762  17D7  0F2A               	incfsz	1+(??___ftge+3)+0,w
  9763  17D8  2FDA               	goto	u4681
  9764  17D9  2FDB               	goto	u4682
  9765  17DA                     u4681:
  9766  17DA  07A7               	addwf	(??___ftge+0)+1,f
  9767                           	
  9768  17DB                     u4682:
  9769  17DB  082B               	movf	2+(??___ftge+3)+0,w
  9770  17DC  1803               	skipnc
  9771  17DD  0F2B               	incfsz	2+(??___ftge+3)+0,w
  9772  17DE  2FE0               	goto	u4683
  9773  17DF  2FE1               	goto	u4684
  9774  17E0                     u4683:
  9775  17E0  07A8               	addwf	(??___ftge+0)+2,f
  9776                           	
  9777  17E1                     u4684:
  9778  17E1  0826               	movf	0+(??___ftge+0)+0,w
  9779  17E2  00A3               	movwf	(___ftge@ff2)
  9780  17E3  0827               	movf	1+(??___ftge+0)+0,w
  9781  17E4  00A4               	movwf	(___ftge@ff2+1)
  9782  17E5  0828               	movf	2+(??___ftge+0)+0,w
  9783  17E6  00A5               	movwf	(___ftge@ff2+2)
  9784  17E7  2FE8               	goto	l10941
  9785                           	
  9786  17E8                     l7663:	
  9787                           	line	10
  9788                           	
  9789  17E8                     l10941:	
  9790  17E8  3080               	movlw	080h
  9791  17E9  06A2               	xorwf	(___ftge@ff1+2),f
  9792                           	line	11
  9793                           	
  9794  17EA                     l10943:	
  9795  17EA  3080               	movlw	080h
  9796  17EB  06A5               	xorwf	(___ftge@ff2+2),f
  9797                           	line	12
  9798                           	
  9799  17EC                     l10945:	
  9800  17EC  0825               	movf	(___ftge@ff2+2),w
  9801  17ED  0222               	subwf	(___ftge@ff1+2),w
  9802  17EE  1D03               	skipz
  9803  17EF  2FF6               	goto	u4695
  9804  17F0  0824               	movf	(___ftge@ff2+1),w
  9805  17F1  0221               	subwf	(___ftge@ff1+1),w
  9806  17F2  1D03               	skipz
  9807  17F3  2FF6               	goto	u4695
  9808  17F4  0823               	movf	(___ftge@ff2),w
  9809  17F5  0220               	subwf	(___ftge@ff1),w
  9810  17F6                     u4695:
  9811  17F6  1803               	skipnc
  9812  17F7  2FF9               	goto	u4691
  9813  17F8  2FFA               	goto	u4690
  9814  17F9                     u4691:
  9815  17F9  2FFC               	goto	l10949
  9816  17FA                     u4690:
  9817                           	
  9818  17FA                     l10947:	
  9819  17FA  1003               	clrc
  9820                           	
  9821  17FB  2FFF               	goto	l7664
  9822                           	
  9823  17FC                     l10411:	
  9824                           	
  9825  17FC                     l10949:	
  9826  17FC  1403               	setc
  9827                           	
  9828  17FD  2FFF               	goto	l7664
  9829                           	
  9830  17FE                     l10413:	
  9831  17FE  2FFF               	goto	l7664
  9832                           	
  9833  17FF                     l10951:	
  9834                           	line	13
  9835                           	
  9836  17FF                     l7664:	
  9837  17FF  0008               	return
  9838                           	opt stack 0
  9839                           GLOBAL	__end_of___ftge
  9840  1800                     	__end_of___ftge:
  9841 ;; =============== function ___ftge ends ============
  9842                           
  9843                           	signat	___ftge,8312
  9844                           	global	___fttol
  9845                           psect	text1147,local,class=CODE,delta=2
  9846                           global __ptext1147
  9847  0AD8                     __ptext1147:
  9848                           
  9849 ;; *************** function ___fttol *****************
  9850 ;; Defined at:
  9851 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  f1              3    8[BANK0 ] float 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  lval            4   17[BANK0 ] unsigned long 
  9856 ;;  exp1            1   21[BANK0 ] unsigned char 
  9857 ;;  sign1           1   16[BANK0 ] unsigned char 
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  4    8[BANK0 ] long 
  9860 ;; Registers used:
  9861 ;;		wreg, status,2, status,0
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9867 ;;      Params:         0       4       0       0       0
  9868 ;;      Locals:         0       6       0       0       0
  9869 ;;      Temps:          0       4       0       0       0
  9870 ;;      Totals:         0      14       0       0       0
  9871 ;;Total ram usage:       14 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; Hardware stack levels required when called:    3
  9874 ;; This function calls:
  9875 ;;		Nothing
  9876 ;; This function is called by:
  9877 ;;		_main
  9878 ;;		_robotMoveSpeed
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           psect	text1147
  9882                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9883                           	line	45
  9884                           	global	__size_of___fttol
  9885  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  9886                           	
  9887  0AD8                     ___fttol:	
  9888                           	opt	stack 4
  9889                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9890                           	line	49
  9891                           	
  9892  0AD8                     l10877:	
  9893  0AD8  1283               	bcf	status, 5	;RP0=0, select bank0
  9894  0AD9  1303               	bcf	status, 6	;RP1=0, select bank0
  9895  0ADA  0828               	movf	(___fttol@f1),w
  9896  0ADB  00AC               	movwf	((??___fttol+0)+0)
  9897  0ADC  0829               	movf	(___fttol@f1+1),w
  9898  0ADD  00AD               	movwf	((??___fttol+0)+0+1)
  9899  0ADE  082A               	movf	(___fttol@f1+2),w
  9900  0ADF  00AE               	movwf	((??___fttol+0)+0+2)
  9901  0AE0  1003               	clrc
  9902  0AE1  0D2D               	rlf	(??___fttol+0)+1,w
  9903  0AE2  0D2E               	rlf	(??___fttol+0)+2,w
  9904  0AE3  00AF               	movwf	(??___fttol+3)+0
  9905  0AE4  082F               	movf	(??___fttol+3)+0,w
  9906  0AE5  00B5               	movwf	(___fttol@exp1)
  9907  0AE6  08B5               	movf	((___fttol@exp1)),f
  9908  0AE7  1D03               	skipz
  9909  0AE8  2AEA               	goto	u4541
  9910  0AE9  2AEB               	goto	u4540
  9911  0AEA                     u4541:
  9912  0AEA  2AF5               	goto	l10883
  9913  0AEB                     u4540:
  9914                           	line	50
  9915                           	
  9916  0AEB                     l10879:	
  9917  0AEB  3000               	movlw	0
  9918  0AEC  00AB               	movwf	(?___fttol+3)
  9919  0AED  3000               	movlw	0
  9920  0AEE  00AA               	movwf	(?___fttol+2)
  9921  0AEF  3000               	movlw	0
  9922  0AF0  00A9               	movwf	(?___fttol+1)
  9923  0AF1  3000               	movlw	0
  9924  0AF2  00A8               	movwf	(?___fttol)
  9925                           
  9926  0AF3  2B7D               	goto	l7605
  9927                           	
  9928  0AF4                     l10881:	
  9929  0AF4  2B7D               	goto	l7605
  9930                           	
  9931  0AF5                     l7604:	
  9932                           	line	51
  9933                           	
  9934  0AF5                     l10883:	
  9935  0AF5  0828               	movf	(___fttol@f1),w
  9936  0AF6  00AC               	movwf	((??___fttol+0)+0)
  9937  0AF7  0829               	movf	(___fttol@f1+1),w
  9938  0AF8  00AD               	movwf	((??___fttol+0)+0+1)
  9939  0AF9  082A               	movf	(___fttol@f1+2),w
  9940  0AFA  00AE               	movwf	((??___fttol+0)+0+2)
  9941  0AFB  3017               	movlw	017h
  9942  0AFC                     u4555:
  9943  0AFC  1003               	clrc
  9944  0AFD  0CAE               	rrf	(??___fttol+0)+2,f
  9945  0AFE  0CAD               	rrf	(??___fttol+0)+1,f
  9946  0AFF  0CAC               	rrf	(??___fttol+0)+0,f
  9947  0B00                     u4550:
  9948  0B00  3EFF               	addlw	-1
  9949  0B01  1D03               	skipz
  9950  0B02  2AFC               	goto	u4555
  9951  0B03  082C               	movf	0+(??___fttol+0)+0,w
  9952  0B04  00AF               	movwf	(??___fttol+3)+0
  9953  0B05  082F               	movf	(??___fttol+3)+0,w
  9954  0B06  00B0               	movwf	(___fttol@sign1)
  9955                           	line	52
  9956                           	
  9957  0B07                     l10885:	
  9958  0B07  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  9959                           	line	53
  9960                           	
  9961  0B08                     l10887:	
  9962  0B08  30FF               	movlw	0FFh
  9963  0B09  05A8               	andwf	(___fttol@f1),f
  9964  0B0A  30FF               	movlw	0FFh
  9965  0B0B  05A9               	andwf	(___fttol@f1+1),f
  9966  0B0C  3000               	movlw	0
  9967  0B0D  05AA               	andwf	(___fttol@f1+2),f
  9968                           	line	54
  9969                           	
  9970  0B0E                     l10889:	
  9971  0B0E  0828               	movf	(___fttol@f1),w
  9972  0B0F  00B1               	movwf	(___fttol@lval)
  9973  0B10  0829               	movf	(___fttol@f1+1),w
  9974  0B11  00B2               	movwf	((___fttol@lval))+1
  9975  0B12  082A               	movf	(___fttol@f1+2),w
  9976  0B13  00B3               	movwf	((___fttol@lval))+2
  9977  0B14  01B4               	clrf	((___fttol@lval))+3
  9978                           	line	55
  9979                           	
  9980  0B15                     l10891:	
  9981  0B15  308E               	movlw	low(08Eh)
  9982  0B16  02B5               	subwf	(___fttol@exp1),f
  9983                           	line	56
  9984                           	
  9985  0B17                     l10893:	
  9986  0B17  1FB5               	btfss	(___fttol@exp1),7
  9987  0B18  2B1A               	goto	u4561
  9988  0B19  2B1B               	goto	u4560
  9989  0B1A                     u4561:
  9990  0B1A  2B40               	goto	l10903
  9991  0B1B                     u4560:
  9992                           	line	57
  9993                           	
  9994  0B1B                     l10895:	
  9995  0B1B  0835               	movf	(___fttol@exp1),w
  9996  0B1C  3A80               	xorlw	80h
  9997  0B1D  3E8F               	addlw	-((-15)^80h)
  9998  0B1E  1803               	skipnc
  9999  0B1F  2B21               	goto	u4571
 10000  0B20  2B22               	goto	u4570
 10001  0B21                     u4571:
 10002  0B21  2B2D               	goto	l10901
 10003  0B22                     u4570:
 10004                           	line	58
 10005                           	
 10006  0B22                     l10897:	
 10007  0B22  3000               	movlw	0
 10008  0B23  00AB               	movwf	(?___fttol+3)
 10009  0B24  3000               	movlw	0
 10010  0B25  00AA               	movwf	(?___fttol+2)
 10011  0B26  3000               	movlw	0
 10012  0B27  00A9               	movwf	(?___fttol+1)
 10013  0B28  3000               	movlw	0
 10014  0B29  00A8               	movwf	(?___fttol)
 10015                           
 10016  0B2A  2B7D               	goto	l7605
 10017                           	
 10018  0B2B                     l10899:	
 10019  0B2B  2B7D               	goto	l7605
 10020                           	
 10021  0B2C                     l7607:	
 10022  0B2C  2B2D               	goto	l10901
 10023                           	line	59
 10024                           	
 10025  0B2D                     l7608:	
 10026                           	line	60
 10027                           	
 10028  0B2D                     l10901:	
 10029  0B2D  3001               	movlw	01h
 10030  0B2E                     u4585:
 10031  0B2E  1003               	clrc
 10032  0B2F  0CB4               	rrf	(___fttol@lval+3),f
 10033  0B30  0CB3               	rrf	(___fttol@lval+2),f
 10034  0B31  0CB2               	rrf	(___fttol@lval+1),f
 10035  0B32  0CB1               	rrf	(___fttol@lval),f
 10036  0B33  3EFF               	addlw	-1
 10037  0B34  1D03               	skipz
 10038  0B35  2B2E               	goto	u4585
 10039                           
 10040                           	line	61
 10041  0B36  3001               	movlw	(01h)
 10042  0B37  00AC               	movwf	(??___fttol+0)+0
 10043  0B38  082C               	movf	(??___fttol+0)+0,w
 10044  0B39  07B5               	addwf	(___fttol@exp1),f
 10045  0B3A  1D03               	btfss	status,2
 10046  0B3B  2B3D               	goto	u4591
 10047  0B3C  2B3E               	goto	u4590
 10048  0B3D                     u4591:
 10049  0B3D  2B2D               	goto	l10901
 10050  0B3E                     u4590:
 10051  0B3E  2B64               	goto	l10913
 10052                           	
 10053  0B3F                     l7609:	
 10054                           	line	62
 10055  0B3F  2B64               	goto	l10913
 10056                           	
 10057  0B40                     l7606:	
 10058                           	line	63
 10059                           	
 10060  0B40                     l10903:	
 10061  0B40  3018               	movlw	(018h)
 10062  0B41  0235               	subwf	(___fttol@exp1),w
 10063  0B42  1C03               	skipc
 10064  0B43  2B45               	goto	u4601
 10065  0B44  2B46               	goto	u4600
 10066  0B45                     u4601:
 10067  0B45  2B5D               	goto	l10911
 10068  0B46                     u4600:
 10069                           	line	64
 10070                           	
 10071  0B46                     l10905:	
 10072  0B46  3000               	movlw	0
 10073  0B47  00AB               	movwf	(?___fttol+3)
 10074  0B48  3000               	movlw	0
 10075  0B49  00AA               	movwf	(?___fttol+2)
 10076  0B4A  3000               	movlw	0
 10077  0B4B  00A9               	movwf	(?___fttol+1)
 10078  0B4C  3000               	movlw	0
 10079  0B4D  00A8               	movwf	(?___fttol)
 10080                           
 10081  0B4E  2B7D               	goto	l7605
 10082                           	
 10083  0B4F                     l10907:	
 10084  0B4F  2B7D               	goto	l7605
 10085                           	
 10086  0B50                     l7611:	
 10087                           	line	65
 10088  0B50  2B5D               	goto	l10911
 10089                           	
 10090  0B51                     l7613:	
 10091                           	line	66
 10092                           	
 10093  0B51                     l10909:	
 10094  0B51  3001               	movlw	01h
 10095  0B52  00AC               	movwf	(??___fttol+0)+0
 10096  0B53                     u4615:
 10097  0B53  1003               	clrc
 10098  0B54  0DB1               	rlf	(___fttol@lval),f
 10099  0B55  0DB2               	rlf	(___fttol@lval+1),f
 10100  0B56  0DB3               	rlf	(___fttol@lval+2),f
 10101  0B57  0DB4               	rlf	(___fttol@lval+3),f
 10102  0B58  0BAC               	decfsz	(??___fttol+0)+0
 10103  0B59  2B53               	goto	u4615
 10104                           	line	67
 10105  0B5A  3001               	movlw	low(01h)
 10106  0B5B  02B5               	subwf	(___fttol@exp1),f
 10107  0B5C  2B5D               	goto	l10911
 10108                           	line	68
 10109                           	
 10110  0B5D                     l7612:	
 10111                           	line	65
 10112                           	
 10113  0B5D                     l10911:	
 10114  0B5D  08B5               	movf	(___fttol@exp1),f
 10115  0B5E  1D03               	skipz
 10116  0B5F  2B61               	goto	u4621
 10117  0B60  2B62               	goto	u4620
 10118  0B61                     u4621:
 10119  0B61  2B51               	goto	l10909
 10120  0B62                     u4620:
 10121  0B62  2B64               	goto	l10913
 10122                           	
 10123  0B63                     l7614:	
 10124  0B63  2B64               	goto	l10913
 10125                           	line	69
 10126                           	
 10127  0B64                     l7610:	
 10128                           	line	70
 10129                           	
 10130  0B64                     l10913:	
 10131  0B64  0830               	movf	(___fttol@sign1),w
 10132  0B65  1D03               	skipz
 10133  0B66  2B68               	goto	u4630
 10134  0B67  2B74               	goto	l10917
 10135  0B68                     u4630:
 10136                           	line	71
 10137                           	
 10138  0B68                     l10915:	
 10139  0B68  09B1               	comf	(___fttol@lval),f
 10140  0B69  09B2               	comf	(___fttol@lval+1),f
 10141  0B6A  09B3               	comf	(___fttol@lval+2),f
 10142  0B6B  09B4               	comf	(___fttol@lval+3),f
 10143  0B6C  0AB1               	incf	(___fttol@lval),f
 10144  0B6D  1903               	skipnz
 10145  0B6E  0AB2               	incf	(___fttol@lval+1),f
 10146  0B6F  1903               	skipnz
 10147  0B70  0AB3               	incf	(___fttol@lval+2),f
 10148  0B71  1903               	skipnz
 10149  0B72  0AB4               	incf	(___fttol@lval+3),f
 10150  0B73  2B74               	goto	l10917
 10151                           	
 10152  0B74                     l7615:	
 10153                           	line	72
 10154                           	
 10155  0B74                     l10917:	
 10156  0B74  0834               	movf	(___fttol@lval+3),w
 10157  0B75  00AB               	movwf	(?___fttol+3)
 10158  0B76  0833               	movf	(___fttol@lval+2),w
 10159  0B77  00AA               	movwf	(?___fttol+2)
 10160  0B78  0832               	movf	(___fttol@lval+1),w
 10161  0B79  00A9               	movwf	(?___fttol+1)
 10162  0B7A  0831               	movf	(___fttol@lval),w
 10163  0B7B  00A8               	movwf	(?___fttol)
 10164                           
 10165  0B7C  2B7D               	goto	l7605
 10166                           	
 10167  0B7D                     l10919:	
 10168                           	line	73
 10169                           	
 10170  0B7D                     l7605:	
 10171  0B7D  0008               	return
 10172                           	opt stack 0
 10173                           GLOBAL	__end_of___fttol
 10174  0B7E                     	__end_of___fttol:
 10175 ;; =============== function ___fttol ends ============
 10176                           
 10177                           	signat	___fttol,4220
 10178                           	global	___ftpack
 10179                           psect	text1148,local,class=CODE,delta=2
 10180                           global __ptext1148
 10181  0774                     __ptext1148:
 10182                           
 10183 ;; *************** function ___ftpack *****************
 10184 ;; Defined at:
 10185 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  arg             3    0[BANK0 ] unsigned um
 10188 ;;  exp             1    3[BANK0 ] unsigned char 
 10189 ;;  sign            1    4[BANK0 ] unsigned char 
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;		None
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  3    0[BANK0 ] float 
 10194 ;; Registers used:
 10195 ;;		wreg, status,2, status,0
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10201 ;;      Params:         0       5       0       0       0
 10202 ;;      Locals:         0       0       0       0       0
 10203 ;;      Temps:          0       3       0       0       0
 10204 ;;      Totals:         0       8       0       0       0
 10205 ;;Total ram usage:        8 bytes
 10206 ;; Hardware stack levels used:    1
 10207 ;; Hardware stack levels required when called:    3
 10208 ;; This function calls:
 10209 ;;		Nothing
 10210 ;; This function is called by:
 10211 ;;		___ftdiv
 10212 ;;		___ftmul
 10213 ;;		___awtoft
 10214 ;;		___ftadd
 10215 ;;		___lbtoft
 10216 ;;		___abtoft
 10217 ;;		___lwtoft
 10218 ;;		___altoft
 10219 ;;		___lltoft
 10220 ;;		___attoft
 10221 ;;		___lttoft
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           psect	text1148
 10225                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
 10226                           	line	63
 10227                           	global	__size_of___ftpack
 10228  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 10229                           	
 10230  0774                     ___ftpack:	
 10231                           	opt	stack 3
 10232                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10233                           	line	64
 10234                           	
 10235  0774                     l10841:	
 10236  0774  1283               	bcf	status, 5	;RP0=0, select bank0
 10237  0775  1303               	bcf	status, 6	;RP1=0, select bank0
 10238  0776  0823               	movf	(___ftpack@exp),w
 10239  0777  1D03               	skipz
 10240  0778  2F7A               	goto	u4430
 10241  0779  2F82               	goto	l10845
 10242  077A                     u4430:
 10243                           	
 10244  077A                     l10843:	
 10245  077A  0822               	movf	(___ftpack@arg+2),w
 10246  077B  0421               	iorwf	(___ftpack@arg+1),w
 10247  077C  0420               	iorwf	(___ftpack@arg),w
 10248  077D  1D03               	skipz
 10249  077E  2F80               	goto	u4441
 10250  077F  2F81               	goto	u4440
 10251  0780                     u4441:
 10252  0780  2F98               	goto	l10851
 10253  0781                     u4440:
 10254  0781  2F82               	goto	l10845
 10255                           	
 10256  0782                     l7829:	
 10257                           	line	65
 10258                           	
 10259  0782                     l10845:	
 10260  0782  3000               	movlw	0x0
 10261  0783  00A0               	movwf	(?___ftpack)
 10262  0784  3000               	movlw	0x0
 10263  0785  00A1               	movwf	(?___ftpack+1)
 10264  0786  3000               	movlw	0x0
 10265  0787  00A2               	movwf	(?___ftpack+2)
 10266  0788  2FF0               	goto	l7830
 10267                           	
 10268  0789                     l10847:	
 10269  0789  2FF0               	goto	l7830
 10270                           	
 10271  078A                     l7827:	
 10272                           	line	66
 10273  078A  2F98               	goto	l10851
 10274                           	
 10275  078B                     l7832:	
 10276                           	line	67
 10277                           	
 10278  078B                     l10849:	
 10279  078B  3001               	movlw	(01h)
 10280  078C  00A5               	movwf	(??___ftpack+0)+0
 10281  078D  0825               	movf	(??___ftpack+0)+0,w
 10282  078E  07A3               	addwf	(___ftpack@exp),f
 10283                           	line	68
 10284  078F  3001               	movlw	01h
 10285  0790                     u4455:
 10286  0790  1003               	clrc
 10287  0791  0CA2               	rrf	(___ftpack@arg+2),f
 10288  0792  0CA1               	rrf	(___ftpack@arg+1),f
 10289  0793  0CA0               	rrf	(___ftpack@arg),f
 10290  0794  3EFF               	addlw	-1
 10291  0795  1D03               	skipz
 10292  0796  2F90               	goto	u4455
 10293                           
 10294  0797  2F98               	goto	l10851
 10295                           	line	69
 10296                           	
 10297  0798                     l7831:	
 10298                           	line	66
 10299                           	
 10300  0798                     l10851:	
 10301  0798  30FE               	movlw	low highword(0FE0000h)
 10302  0799  0522               	andwf	(___ftpack@arg+2),w
 10303  079A  1D03               	btfss	status,2
 10304  079B  2F9D               	goto	u4461
 10305  079C  2F9E               	goto	u4460
 10306  079D                     u4461:
 10307  079D  2F8B               	goto	l10849
 10308  079E                     u4460:
 10309  079E  2FB6               	goto	l7834
 10310                           	
 10311  079F                     l7833:	
 10312                           	line	70
 10313  079F  2FB6               	goto	l7834
 10314                           	
 10315  07A0                     l7835:	
 10316                           	line	71
 10317                           	
 10318  07A0                     l10853:	
 10319  07A0  3001               	movlw	(01h)
 10320  07A1  00A5               	movwf	(??___ftpack+0)+0
 10321  07A2  0825               	movf	(??___ftpack+0)+0,w
 10322  07A3  07A3               	addwf	(___ftpack@exp),f
 10323                           	line	72
 10324                           	
 10325  07A4                     l10855:	
 10326  07A4  3001               	movlw	01h
 10327  07A5  07A0               	addwf	(___ftpack@arg),f
 10328  07A6  3000               	movlw	0
 10329  07A7  1803               	skipnc
 10330  07A8  3001               movlw 1
 10331  07A9  07A1               	addwf	(___ftpack@arg+1),f
 10332  07AA  3000               	movlw	0
 10333  07AB  1803               	skipnc
 10334  07AC  3001               movlw 1
 10335  07AD  07A2               	addwf	(___ftpack@arg+2),f
 10336                           	line	73
 10337                           	
 10338  07AE                     l10857:	
 10339  07AE  3001               	movlw	01h
 10340  07AF                     u4475:
 10341  07AF  1003               	clrc
 10342  07B0  0CA2               	rrf	(___ftpack@arg+2),f
 10343  07B1  0CA1               	rrf	(___ftpack@arg+1),f
 10344  07B2  0CA0               	rrf	(___ftpack@arg),f
 10345  07B3  3EFF               	addlw	-1
 10346  07B4  1D03               	skipz
 10347  07B5  2FAF               	goto	u4475
 10348                           
 10349                           	line	74
 10350                           	
 10351  07B6                     l7834:	
 10352                           	line	70
 10353  07B6  30FF               	movlw	low highword(0FF0000h)
 10354  07B7  0522               	andwf	(___ftpack@arg+2),w
 10355  07B8  1D03               	btfss	status,2
 10356  07B9  2FBB               	goto	u4481
 10357  07BA  2FBC               	goto	u4480
 10358  07BB                     u4481:
 10359  07BB  2FA0               	goto	l10853
 10360  07BC                     u4480:
 10361  07BC  2FC9               	goto	l10861
 10362                           	
 10363  07BD                     l7836:	
 10364                           	line	75
 10365  07BD  2FC9               	goto	l10861
 10366                           	
 10367  07BE                     l7838:	
 10368                           	line	76
 10369                           	
 10370  07BE                     l10859:	
 10371  07BE  3001               	movlw	low(01h)
 10372  07BF  02A3               	subwf	(___ftpack@exp),f
 10373                           	line	77
 10374  07C0  3001               	movlw	01h
 10375  07C1                     u4495:
 10376  07C1  1003               	clrc
 10377  07C2  0DA0               	rlf	(___ftpack@arg),f
 10378  07C3  0DA1               	rlf	(___ftpack@arg+1),f
 10379  07C4  0DA2               	rlf	(___ftpack@arg+2),f
 10380  07C5  3EFF               	addlw	-1
 10381  07C6  1D03               	skipz
 10382  07C7  2FC1               	goto	u4495
 10383  07C8  2FC9               	goto	l10861
 10384                           	line	78
 10385                           	
 10386  07C9                     l7837:	
 10387                           	line	75
 10388                           	
 10389  07C9                     l10861:	
 10390  07C9  1FA1               	btfss	(___ftpack@arg+1),(15)&7
 10391  07CA  2FCC               	goto	u4501
 10392  07CB  2FCD               	goto	u4500
 10393  07CC                     u4501:
 10394  07CC  2FBE               	goto	l10859
 10395  07CD                     u4500:
 10396                           	
 10397  07CD                     l7839:	
 10398                           	line	79
 10399  07CD  1823               	btfsc	(___ftpack@exp),(0)&7
 10400  07CE  2FD0               	goto	u4511
 10401  07CF  2FD1               	goto	u4510
 10402  07D0                     u4511:
 10403  07D0  2FD7               	goto	l7840
 10404  07D1                     u4510:
 10405                           	line	80
 10406                           	
 10407  07D1                     l10863:	
 10408  07D1  30FF               	movlw	0FFh
 10409  07D2  05A0               	andwf	(___ftpack@arg),f
 10410  07D3  307F               	movlw	07Fh
 10411  07D4  05A1               	andwf	(___ftpack@arg+1),f
 10412  07D5  30FF               	movlw	0FFh
 10413  07D6  05A2               	andwf	(___ftpack@arg+2),f
 10414                           	
 10415  07D7                     l7840:	
 10416                           	line	81
 10417  07D7  1003               	clrc
 10418  07D8  0CA3               	rrf	(___ftpack@exp),f
 10419                           
 10420                           	line	82
 10421                           	
 10422  07D9                     l10865:	
 10423  07D9  0823               	movf	(___ftpack@exp),w
 10424  07DA  00A5               	movwf	((??___ftpack+0)+0)
 10425  07DB  01A6               	clrf	((??___ftpack+0)+0+1)
 10426  07DC  01A7               	clrf	((??___ftpack+0)+0+2)
 10427  07DD  3010               	movlw	010h
 10428  07DE                     u4525:
 10429  07DE  1003               	clrc
 10430  07DF  0DA5               	rlf	(??___ftpack+0)+0,f
 10431  07E0  0DA6               	rlf	(??___ftpack+0)+1,f
 10432  07E1  0DA7               	rlf	(??___ftpack+0)+2,f
 10433  07E2                     u4520:
 10434  07E2  3EFF               	addlw	-1
 10435  07E3  1D03               	skipz
 10436  07E4  2FDE               	goto	u4525
 10437  07E5  0825               	movf	0+(??___ftpack+0)+0,w
 10438  07E6  04A0               	iorwf	(___ftpack@arg),f
 10439  07E7  0826               	movf	1+(??___ftpack+0)+0,w
 10440  07E8  04A1               	iorwf	(___ftpack@arg+1),f
 10441  07E9  0827               	movf	2+(??___ftpack+0)+0,w
 10442  07EA  04A2               	iorwf	(___ftpack@arg+2),f
 10443                           	line	83
 10444                           	
 10445  07EB                     l10867:	
 10446  07EB  0824               	movf	(___ftpack@sign),w
 10447  07EC  1D03               	skipz
 10448  07ED  2FEF               	goto	u4530
 10449  07EE  2FF0               	goto	l7841
 10450  07EF                     u4530:
 10451                           	line	84
 10452                           	
 10453  07EF                     l10869:	
 10454  07EF  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
 10455                           	
 10456  07F0                     l7841:	
 10457                           	line	85
 10458                           	line	86
 10459                           	
 10460  07F0                     l7830:	
 10461  07F0  0008               	return
 10462                           	opt stack 0
 10463                           GLOBAL	__end_of___ftpack
 10464  07F1                     	__end_of___ftpack:
 10465 ;; =============== function ___ftpack ends ============
 10466                           
 10467                           	signat	___ftpack,12411
 10468                           	global	___lwmod
 10469                           psect	text1149,local,class=CODE,delta=2
 10470                           global __ptext1149
 10471  14ED                     __ptext1149:
 10472                           
 10473 ;; *************** function ___lwmod *****************
 10474 ;; Defined at:
 10475 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  divisor         2   14[BANK0 ] unsigned int 
 10478 ;;  dividend        2   16[BANK0 ] unsigned int 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  counter         1   19[BANK0 ] unsigned char 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  2   14[BANK0 ] unsigned int 
 10483 ;; Registers used:
 10484 ;;		wreg, status,2, status,0
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10490 ;;      Params:         0       4       0       0       0
 10491 ;;      Locals:         0       1       0       0       0
 10492 ;;      Temps:          0       1       0       0       0
 10493 ;;      Totals:         0       6       0       0       0
 10494 ;;Total ram usage:        6 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    3
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_sprintf
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           psect	text1149
 10504                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10505                           	line	5
 10506                           	global	__size_of___lwmod
 10507  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 10508                           	
 10509  14ED                     ___lwmod:	
 10510                           	opt	stack 1
 10511                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10512                           	line	8
 10513                           	
 10514  14ED                     l10749:	
 10515  14ED  1283               	bcf	status, 5	;RP0=0, select bank0
 10516  14EE  1303               	bcf	status, 6	;RP1=0, select bank0
 10517  14EF  082F               	movf	(___lwmod@divisor+1),w
 10518  14F0  042E               	iorwf	(___lwmod@divisor),w
 10519  14F1  1903               	skipnz
 10520  14F2  2CF4               	goto	u4131
 10521  14F3  2CF5               	goto	u4130
 10522  14F4                     u4131:
 10523  14F4  2D2B               	goto	l10767
 10524  14F5                     u4130:
 10525                           	line	9
 10526                           	
 10527  14F5                     l10751:	
 10528  14F5  01B3               	clrf	(___lwmod@counter)
 10529  14F6  1403               	bsf	status,0
 10530  14F7  0DB3               	rlf	(___lwmod@counter),f
 10531                           	line	10
 10532  14F8  2D05               	goto	l10757
 10533                           	
 10534  14F9                     l7513:	
 10535                           	line	11
 10536                           	
 10537  14F9                     l10753:	
 10538  14F9  3001               	movlw	01h
 10539                           	
 10540  14FA                     u4145:
 10541  14FA  1003               	clrc
 10542  14FB  0DAE               	rlf	(___lwmod@divisor),f
 10543  14FC  0DAF               	rlf	(___lwmod@divisor+1),f
 10544  14FD  3EFF               	addlw	-1
 10545  14FE  1D03               	skipz
 10546  14FF  2CFA               	goto	u4145
 10547                           	line	12
 10548                           	
 10549  1500                     l10755:	
 10550  1500  3001               	movlw	(01h)
 10551  1501  00B2               	movwf	(??___lwmod+0)+0
 10552  1502  0832               	movf	(??___lwmod+0)+0,w
 10553  1503  07B3               	addwf	(___lwmod@counter),f
 10554  1504  2D05               	goto	l10757
 10555                           	line	13
 10556                           	
 10557  1505                     l7512:	
 10558                           	line	10
 10559                           	
 10560  1505                     l10757:	
 10561  1505  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 10562  1506  2D08               	goto	u4151
 10563  1507  2D09               	goto	u4150
 10564  1508                     u4151:
 10565  1508  2CF9               	goto	l10753
 10566  1509                     u4150:
 10567  1509  2D0B               	goto	l10759
 10568                           	
 10569  150A                     l7514:	
 10570  150A  2D0B               	goto	l10759
 10571                           	line	14
 10572                           	
 10573  150B                     l7515:	
 10574                           	line	15
 10575                           	
 10576  150B                     l10759:	
 10577  150B  082F               	movf	(___lwmod@divisor+1),w
 10578  150C  0231               	subwf	(___lwmod@dividend+1),w
 10579  150D  1D03               	skipz
 10580  150E  2D11               	goto	u4165
 10581  150F  082E               	movf	(___lwmod@divisor),w
 10582  1510  0230               	subwf	(___lwmod@dividend),w
 10583  1511                     u4165:
 10584  1511  1C03               	skipc
 10585  1512  2D14               	goto	u4161
 10586  1513  2D15               	goto	u4160
 10587  1514                     u4161:
 10588  1514  2D1C               	goto	l10763
 10589  1515                     u4160:
 10590                           	line	16
 10591                           	
 10592  1515                     l10761:	
 10593  1515  082E               	movf	(___lwmod@divisor),w
 10594  1516  02B0               	subwf	(___lwmod@dividend),f
 10595  1517  082F               	movf	(___lwmod@divisor+1),w
 10596  1518  1C03               	skipc
 10597  1519  03B1               	decf	(___lwmod@dividend+1),f
 10598  151A  02B1               	subwf	(___lwmod@dividend+1),f
 10599  151B  2D1C               	goto	l10763
 10600                           	
 10601  151C                     l7516:	
 10602                           	line	17
 10603                           	
 10604  151C                     l10763:	
 10605  151C  3001               	movlw	01h
 10606                           	
 10607  151D                     u4175:
 10608  151D  1003               	clrc
 10609  151E  0CAF               	rrf	(___lwmod@divisor+1),f
 10610  151F  0CAE               	rrf	(___lwmod@divisor),f
 10611  1520  3EFF               	addlw	-1
 10612  1521  1D03               	skipz
 10613  1522  2D1D               	goto	u4175
 10614                           	line	18
 10615                           	
 10616  1523                     l10765:	
 10617  1523  3001               	movlw	low(01h)
 10618  1524  02B3               	subwf	(___lwmod@counter),f
 10619  1525  1D03               	btfss	status,2
 10620  1526  2D28               	goto	u4181
 10621  1527  2D29               	goto	u4180
 10622  1528                     u4181:
 10623  1528  2D0B               	goto	l10759
 10624  1529                     u4180:
 10625  1529  2D2B               	goto	l10767
 10626                           	
 10627  152A                     l7517:	
 10628  152A  2D2B               	goto	l10767
 10629                           	line	19
 10630                           	
 10631  152B                     l7511:	
 10632                           	line	20
 10633                           	
 10634  152B                     l10767:	
 10635  152B  0831               	movf	(___lwmod@dividend+1),w
 10636  152C  01AF               	clrf	(?___lwmod+1)
 10637  152D  07AF               	addwf	(?___lwmod+1)
 10638  152E  0830               	movf	(___lwmod@dividend),w
 10639  152F  01AE               	clrf	(?___lwmod)
 10640  1530  07AE               	addwf	(?___lwmod)
 10641                           
 10642  1531  2D32               	goto	l7518
 10643                           	
 10644  1532                     l10769:	
 10645                           	line	21
 10646                           	
 10647  1532                     l7518:	
 10648  1532  0008               	return
 10649                           	opt stack 0
 10650                           GLOBAL	__end_of___lwmod
 10651  1533                     	__end_of___lwmod:
 10652 ;; =============== function ___lwmod ends ============
 10653                           
 10654                           	signat	___lwmod,8314
 10655                           	global	___lwdiv
 10656                           psect	text1150,local,class=CODE,delta=2
 10657                           global __ptext1150
 10658  15C0                     __ptext1150:
 10659                           
 10660 ;; *************** function ___lwdiv *****************
 10661 ;; Defined at:
 10662 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;  divisor         2    6[BANK0 ] unsigned int 
 10665 ;;  dividend        2    8[BANK0 ] unsigned int 
 10666 ;; Auto vars:     Size  Location     Type
 10667 ;;  quotient        2   11[BANK0 ] unsigned int 
 10668 ;;  counter         1   13[BANK0 ] unsigned char 
 10669 ;; Return value:  Size  Location     Type
 10670 ;;                  2    6[BANK0 ] unsigned int 
 10671 ;; Registers used:
 10672 ;;		wreg, status,2, status,0
 10673 ;; Tracked objects:
 10674 ;;		On entry : 0/0
 10675 ;;		On exit  : 0/0
 10676 ;;		Unchanged: 0/0
 10677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10678 ;;      Params:         0       4       0       0       0
 10679 ;;      Locals:         0       3       0       0       0
 10680 ;;      Temps:          0       1       0       0       0
 10681 ;;      Totals:         0       8       0       0       0
 10682 ;;Total ram usage:        8 bytes
 10683 ;; Hardware stack levels used:    1
 10684 ;; Hardware stack levels required when called:    3
 10685 ;; This function calls:
 10686 ;;		Nothing
 10687 ;; This function is called by:
 10688 ;;		_readAvgDistance
 10689 ;;		_ADCconvert
 10690 ;;		_sprintf
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           psect	text1150
 10694                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 10695                           	line	5
 10696                           	global	__size_of___lwdiv
 10697  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 10698                           	
 10699  15C0                     ___lwdiv:	
 10700                           	opt	stack 1
 10701                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10702                           	line	9
 10703                           	
 10704  15C0                     l10723:	
 10705  15C0  1283               	bcf	status, 5	;RP0=0, select bank0
 10706  15C1  1303               	bcf	status, 6	;RP1=0, select bank0
 10707  15C2  01AB               	clrf	(___lwdiv@quotient)
 10708  15C3  01AC               	clrf	(___lwdiv@quotient+1)
 10709                           	line	10
 10710                           	
 10711  15C4                     l10725:	
 10712  15C4  0827               	movf	(___lwdiv@divisor+1),w
 10713  15C5  0426               	iorwf	(___lwdiv@divisor),w
 10714  15C6  1903               	skipnz
 10715  15C7  2DC9               	goto	u4061
 10716  15C8  2DCA               	goto	u4060
 10717  15C9                     u4061:
 10718  15C9  2E08               	goto	l10745
 10719  15CA                     u4060:
 10720                           	line	11
 10721                           	
 10722  15CA                     l10727:	
 10723  15CA  01AD               	clrf	(___lwdiv@counter)
 10724  15CB  1403               	bsf	status,0
 10725  15CC  0DAD               	rlf	(___lwdiv@counter),f
 10726                           	line	12
 10727  15CD  2DDA               	goto	l10733
 10728                           	
 10729  15CE                     l7503:	
 10730                           	line	13
 10731                           	
 10732  15CE                     l10729:	
 10733  15CE  3001               	movlw	01h
 10734                           	
 10735  15CF                     u4075:
 10736  15CF  1003               	clrc
 10737  15D0  0DA6               	rlf	(___lwdiv@divisor),f
 10738  15D1  0DA7               	rlf	(___lwdiv@divisor+1),f
 10739  15D2  3EFF               	addlw	-1
 10740  15D3  1D03               	skipz
 10741  15D4  2DCF               	goto	u4075
 10742                           	line	14
 10743                           	
 10744  15D5                     l10731:	
 10745  15D5  3001               	movlw	(01h)
 10746  15D6  00AA               	movwf	(??___lwdiv+0)+0
 10747  15D7  082A               	movf	(??___lwdiv+0)+0,w
 10748  15D8  07AD               	addwf	(___lwdiv@counter),f
 10749  15D9  2DDA               	goto	l10733
 10750                           	line	15
 10751                           	
 10752  15DA                     l7502:	
 10753                           	line	12
 10754                           	
 10755  15DA                     l10733:	
 10756  15DA  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 10757  15DB  2DDD               	goto	u4081
 10758  15DC  2DDE               	goto	u4080
 10759  15DD                     u4081:
 10760  15DD  2DCE               	goto	l10729
 10761  15DE                     u4080:
 10762  15DE  2DE0               	goto	l10735
 10763                           	
 10764  15DF                     l7504:	
 10765  15DF  2DE0               	goto	l10735
 10766                           	line	16
 10767                           	
 10768  15E0                     l7505:	
 10769                           	line	17
 10770                           	
 10771  15E0                     l10735:	
 10772  15E0  3001               	movlw	01h
 10773                           	
 10774  15E1                     u4095:
 10775  15E1  1003               	clrc
 10776  15E2  0DAB               	rlf	(___lwdiv@quotient),f
 10777  15E3  0DAC               	rlf	(___lwdiv@quotient+1),f
 10778  15E4  3EFF               	addlw	-1
 10779  15E5  1D03               	skipz
 10780  15E6  2DE1               	goto	u4095
 10781                           	line	18
 10782  15E7  0827               	movf	(___lwdiv@divisor+1),w
 10783  15E8  0229               	subwf	(___lwdiv@dividend+1),w
 10784  15E9  1D03               	skipz
 10785  15EA  2DED               	goto	u4105
 10786  15EB  0826               	movf	(___lwdiv@divisor),w
 10787  15EC  0228               	subwf	(___lwdiv@dividend),w
 10788  15ED                     u4105:
 10789  15ED  1C03               	skipc
 10790  15EE  2DF0               	goto	u4101
 10791  15EF  2DF1               	goto	u4100
 10792  15F0                     u4101:
 10793  15F0  2DF9               	goto	l10741
 10794  15F1                     u4100:
 10795                           	line	19
 10796                           	
 10797  15F1                     l10737:	
 10798  15F1  0826               	movf	(___lwdiv@divisor),w
 10799  15F2  02A8               	subwf	(___lwdiv@dividend),f
 10800  15F3  0827               	movf	(___lwdiv@divisor+1),w
 10801  15F4  1C03               	skipc
 10802  15F5  03A9               	decf	(___lwdiv@dividend+1),f
 10803  15F6  02A9               	subwf	(___lwdiv@dividend+1),f
 10804                           	line	20
 10805                           	
 10806  15F7                     l10739:	
 10807  15F7  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 10808  15F8  2DF9               	goto	l10741
 10809                           	line	21
 10810                           	
 10811  15F9                     l7506:	
 10812                           	line	22
 10813                           	
 10814  15F9                     l10741:	
 10815  15F9  3001               	movlw	01h
 10816                           	
 10817  15FA                     u4115:
 10818  15FA  1003               	clrc
 10819  15FB  0CA7               	rrf	(___lwdiv@divisor+1),f
 10820  15FC  0CA6               	rrf	(___lwdiv@divisor),f
 10821  15FD  3EFF               	addlw	-1
 10822  15FE  1D03               	skipz
 10823  15FF  2DFA               	goto	u4115
 10824                           	line	23
 10825                           	
 10826  1600                     l10743:	
 10827  1600  3001               	movlw	low(01h)
 10828  1601  02AD               	subwf	(___lwdiv@counter),f
 10829  1602  1D03               	btfss	status,2
 10830  1603  2E05               	goto	u4121
 10831  1604  2E06               	goto	u4120
 10832  1605                     u4121:
 10833  1605  2DE0               	goto	l10735
 10834  1606                     u4120:
 10835  1606  2E08               	goto	l10745
 10836                           	
 10837  1607                     l7507:	
 10838  1607  2E08               	goto	l10745
 10839                           	line	24
 10840                           	
 10841  1608                     l7501:	
 10842                           	line	25
 10843                           	
 10844  1608                     l10745:	
 10845  1608  082C               	movf	(___lwdiv@quotient+1),w
 10846  1609  01A7               	clrf	(?___lwdiv+1)
 10847  160A  07A7               	addwf	(?___lwdiv+1)
 10848  160B  082B               	movf	(___lwdiv@quotient),w
 10849  160C  01A6               	clrf	(?___lwdiv)
 10850  160D  07A6               	addwf	(?___lwdiv)
 10851                           
 10852  160E  2E0F               	goto	l7508
 10853                           	
 10854  160F                     l10747:	
 10855                           	line	26
 10856                           	
 10857  160F                     l7508:	
 10858  160F  0008               	return
 10859                           	opt stack 0
 10860                           GLOBAL	__end_of___lwdiv
 10861  1610                     	__end_of___lwdiv:
 10862 ;; =============== function ___lwdiv ends ============
 10863                           
 10864                           	signat	___lwdiv,8314
 10865                           	global	___wmul
 10866                           psect	text1151,local,class=CODE,delta=2
 10867                           global __ptext1151
 10868  12FC                     __ptext1151:
 10869                           
 10870 ;; *************** function ___wmul *****************
 10871 ;; Defined at:
 10872 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10875 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;  product         2    4[BANK0 ] unsigned int 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  2    0[BANK0 ] unsigned int 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10887 ;;      Params:         0       4       0       0       0
 10888 ;;      Locals:         0       2       0       0       0
 10889 ;;      Temps:          0       0       0       0       0
 10890 ;;      Totals:         0       6       0       0       0
 10891 ;;Total ram usage:        6 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; Hardware stack levels required when called:    3
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_ADCconvert
 10898 ;;		_abs
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           psect	text1151
 10902                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10903                           	line	3
 10904                           	global	__size_of___wmul
 10905  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10906                           	
 10907  12FC                     ___wmul:	
 10908                           	opt	stack 2
 10909                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10910                           	line	4
 10911                           	
 10912  12FC                     l10711:	
 10913  12FC  1283               	bcf	status, 5	;RP0=0, select bank0
 10914  12FD  1303               	bcf	status, 6	;RP1=0, select bank0
 10915  12FE  01A4               	clrf	(___wmul@product)
 10916  12FF  01A5               	clrf	(___wmul@product+1)
 10917  1300  2B01               	goto	l10713
 10918                           	line	6
 10919                           	
 10920  1301                     l7495:	
 10921                           	line	7
 10922                           	
 10923  1301                     l10713:	
 10924  1301  1C20               	btfss	(___wmul@multiplier),(0)&7
 10925  1302  2B04               	goto	u4021
 10926  1303  2B05               	goto	u4020
 10927  1304                     u4021:
 10928  1304  2B0B               	goto	l7496
 10929  1305                     u4020:
 10930                           	line	8
 10931                           	
 10932  1305                     l10715:	
 10933  1305  0822               	movf	(___wmul@multiplicand),w
 10934  1306  07A4               	addwf	(___wmul@product),f
 10935  1307  1803               	skipnc
 10936  1308  0AA5               	incf	(___wmul@product+1),f
 10937  1309  0823               	movf	(___wmul@multiplicand+1),w
 10938  130A  07A5               	addwf	(___wmul@product+1),f
 10939                           	
 10940  130B                     l7496:	
 10941                           	line	9
 10942  130B  3001               	movlw	01h
 10943                           	
 10944  130C                     u4035:
 10945  130C  1003               	clrc
 10946  130D  0DA2               	rlf	(___wmul@multiplicand),f
 10947  130E  0DA3               	rlf	(___wmul@multiplicand+1),f
 10948  130F  3EFF               	addlw	-1
 10949  1310  1D03               	skipz
 10950  1311  2B0C               	goto	u4035
 10951                           	line	10
 10952                           	
 10953  1312                     l10717:	
 10954  1312  3001               	movlw	01h
 10955                           	
 10956  1313                     u4045:
 10957  1313  1003               	clrc
 10958  1314  0CA1               	rrf	(___wmul@multiplier+1),f
 10959  1315  0CA0               	rrf	(___wmul@multiplier),f
 10960  1316  3EFF               	addlw	-1
 10961  1317  1D03               	skipz
 10962  1318  2B13               	goto	u4045
 10963                           	line	11
 10964  1319  0821               	movf	((___wmul@multiplier+1)),w
 10965  131A  0420               	iorwf	((___wmul@multiplier)),w
 10966  131B  1D03               	skipz
 10967  131C  2B1E               	goto	u4051
 10968  131D  2B1F               	goto	u4050
 10969  131E                     u4051:
 10970  131E  2B01               	goto	l10713
 10971  131F                     u4050:
 10972  131F  2B20               	goto	l10719
 10973                           	
 10974  1320                     l7497:	
 10975                           	line	12
 10976                           	
 10977  1320                     l10719:	
 10978  1320  0825               	movf	(___wmul@product+1),w
 10979  1321  01A1               	clrf	(?___wmul+1)
 10980  1322  07A1               	addwf	(?___wmul+1)
 10981  1323  0824               	movf	(___wmul@product),w
 10982  1324  01A0               	clrf	(?___wmul)
 10983  1325  07A0               	addwf	(?___wmul)
 10984                           
 10985  1326  2B27               	goto	l7498
 10986                           	
 10987  1327                     l10721:	
 10988                           	line	13
 10989                           	
 10990  1327                     l7498:	
 10991  1327  0008               	return
 10992                           	opt stack 0
 10993                           GLOBAL	__end_of___wmul
 10994  1328                     	__end_of___wmul:
 10995 ;; =============== function ___wmul ends ============
 10996                           
 10997                           	signat	___wmul,8314
 10998                           	global	_ser_isrx
 10999                           psect	text1152,local,class=CODE,delta=2
 11000                           global __ptext1152
 11001  120D                     __ptext1152:
 11002                           
 11003 ;; *************** function _ser_isrx *****************
 11004 ;; Defined at:
 11005 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;		None
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;		None
 11010 ;; Return value:  Size  Location     Type
 11011 ;;		None               void
 11012 ;; Registers used:
 11013 ;;		wreg, status,2, status,0
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11019 ;;      Params:         0       0       0       0       0
 11020 ;;      Locals:         0       0       0       0       0
 11021 ;;      Temps:          0       0       0       0       0
 11022 ;;      Totals:         0       0       0       0       0
 11023 ;;Total ram usage:        0 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:    3
 11026 ;; This function calls:
 11027 ;;		Nothing
 11028 ;; This function is called by:
 11029 ;;		_ser_getch
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           psect	text1152
 11033                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11034                           	line	45
 11035                           	global	__size_of_ser_isrx
 11036  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 11037                           	
 11038  120D                     _ser_isrx:	
 11039                           	opt	stack 1
 11040                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 11041                           	line	46
 11042                           	
 11043  120D                     l10663:	
 11044                           ;ser.c: 46: if(OERR) {
 11045  120D  1283               	bcf	status, 5	;RP0=0, select bank0
 11046  120E  1303               	bcf	status, 6	;RP1=0, select bank0
 11047  120F  1C98               	btfss	(193/8),(193)&7
 11048  1210  2A12               	goto	u3951
 11049  1211  2A13               	goto	u3950
 11050  1212                     u3951:
 11051  1212  2A18               	goto	l10671
 11052  1213                     u3950:
 11053                           	line	47
 11054                           	
 11055  1213                     l10665:	
 11056                           ;ser.c: 47: CREN = 0;
 11057  1213  1218               	bcf	(196/8),(196)&7
 11058                           	line	48
 11059                           ;ser.c: 48: CREN = 1;
 11060  1214  1618               	bsf	(196/8),(196)&7
 11061                           	line	49
 11062                           	
 11063  1215                     l10667:	
 11064                           ;ser.c: 49: return 0;
 11065  1215  1003               	clrc
 11066                           	
 11067  1216  2A23               	goto	l6750
 11068                           	
 11069  1217                     l10669:	
 11070  1217  2A23               	goto	l6750
 11071                           	line	50
 11072                           	
 11073  1218                     l6749:	
 11074                           	line	51
 11075                           	
 11076  1218                     l10671:	
 11077                           ;ser.c: 50: }
 11078                           ;ser.c: 51: return (rxiptr!=rxoptr);
 11079  1218  086C               	movf	(_rxiptr),w	;volatile
 11080  1219  066D               	xorwf	(_rxoptr),w	;volatile
 11081  121A  1D03               	skipz
 11082  121B  2A1D               	goto	u3961
 11083  121C  2A1E               	goto	u3960
 11084  121D                     u3961:
 11085  121D  2A20               	goto	l10675
 11086  121E                     u3960:
 11087                           	
 11088  121E                     l10673:	
 11089  121E  1003               	clrc
 11090                           	
 11091  121F  2A23               	goto	l6750
 11092                           	
 11093  1220                     l10421:	
 11094                           	
 11095  1220                     l10675:	
 11096  1220  1403               	setc
 11097                           	
 11098  1221  2A23               	goto	l6750
 11099                           	
 11100  1222                     l10423:	
 11101  1222  2A23               	goto	l6750
 11102                           	
 11103  1223                     l10677:	
 11104                           	line	52
 11105                           	
 11106  1223                     l6750:	
 11107  1223  0008               	return
 11108                           	opt stack 0
 11109                           GLOBAL	__end_of_ser_isrx
 11110  1224                     	__end_of_ser_isrx:
 11111 ;; =============== function _ser_isrx ends ============
 11112                           
 11113                           	signat	_ser_isrx,88
 11114                           	global	_spi_transfer
 11115                           psect	text1153,local,class=CODE,delta=2
 11116                           global __ptext1153
 11117  11B9                     __ptext1153:
 11118                           
 11119 ;; *************** function _spi_transfer *****************
 11120 ;; Defined at:
 11121 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;  data            1    wreg     unsigned char 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  data            1    2[BANK0 ] unsigned char 
 11126 ;;  temp            1    1[BANK0 ] unsigned char 
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  1    wreg      unsigned char 
 11129 ;; Registers used:
 11130 ;;		wreg
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11136 ;;      Params:         0       0       0       0       0
 11137 ;;      Locals:         0       2       0       0       0
 11138 ;;      Temps:          0       1       0       0       0
 11139 ;;      Totals:         0       3       0       0       0
 11140 ;;Total ram usage:        3 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:    3
 11143 ;; This function calls:
 11144 ;;		Nothing
 11145 ;; This function is called by:
 11146 ;;		_rotate
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           psect	text1153
 11150                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11151                           	line	50
 11152                           	global	__size_of_spi_transfer
 11153  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 11154                           	
 11155  11B9                     _spi_transfer:	
 11156                           	opt	stack 3
 11157                           ; Regs used in _spi_transfer: [wreg]
 11158                           ;spi_transfer@data stored from wreg
 11159  11B9  1283               	bcf	status, 5	;RP0=0, select bank0
 11160  11BA  1303               	bcf	status, 6	;RP1=0, select bank0
 11161  11BB  00A2               	movwf	(spi_transfer@data)
 11162                           	line	51
 11163                           	
 11164  11BC                     l10611:	
 11165                           ;steppermotor.c: 51: unsigned char temp = 0;
 11166  11BC  01A1               	clrf	(spi_transfer@temp)
 11167                           	line	53
 11168                           ;steppermotor.c: 53: SSPIF = 0;
 11169  11BD  118C               	bcf	(99/8),(99)&7
 11170                           	line	54
 11171                           	
 11172  11BE                     l10613:	
 11173                           ;steppermotor.c: 54: SSPBUF = data;
 11174  11BE  0822               	movf	(spi_transfer@data),w
 11175  11BF  0093               	movwf	(19)	;volatile
 11176                           	line	56
 11177                           ;steppermotor.c: 56: while (SSPIF == 0);
 11178  11C0  29C1               	goto	l3711
 11179                           	
 11180  11C1                     l3712:	
 11181                           	
 11182  11C1                     l3711:	
 11183  11C1  1D8C               	btfss	(99/8),(99)&7
 11184  11C2  29C4               	goto	u3791
 11185  11C3  29C5               	goto	u3790
 11186  11C4                     u3791:
 11187  11C4  29C1               	goto	l3711
 11188  11C5                     u3790:
 11189  11C5  29C6               	goto	l10615
 11190                           	
 11191  11C6                     l3713:	
 11192                           	line	57
 11193                           	
 11194  11C6                     l10615:	
 11195                           ;steppermotor.c: 57: temp = SSPBUF;
 11196  11C6  0813               	movf	(19),w	;volatile
 11197  11C7  00A0               	movwf	(??_spi_transfer+0)+0
 11198  11C8  0820               	movf	(??_spi_transfer+0)+0,w
 11199  11C9  00A1               	movwf	(spi_transfer@temp)
 11200                           	line	58
 11201                           	
 11202  11CA                     l10617:	
 11203                           ;steppermotor.c: 58: SSPIF = 0;
 11204  11CA  118C               	bcf	(99/8),(99)&7
 11205  11CB  29CC               	goto	l3714
 11206                           	line	60
 11207                           	
 11208  11CC                     l10619:	
 11209                           	line	61
 11210                           ;steppermotor.c: 60: return temp;
 11211                           ;	Return value of _spi_transfer is never used
 11212                           	
 11213  11CC                     l3714:	
 11214  11CC  0008               	return
 11215                           	opt stack 0
 11216                           GLOBAL	__end_of_spi_transfer
 11217  11CD                     	__end_of_spi_transfer:
 11218 ;; =============== function _spi_transfer ends ============
 11219                           
 11220                           	signat	_spi_transfer,4217
 11221                           	global	_ser_putch
 11222                           psect	text1154,local,class=CODE,delta=2
 11223                           global __ptext1154
 11224  123D                     __ptext1154:
 11225                           
 11226 ;; *************** function _ser_putch *****************
 11227 ;; Defined at:
 11228 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  c               1    wreg     unsigned char 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  c               1    1[BANK0 ] unsigned char 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;		None               void
 11235 ;; Registers used:
 11236 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11242 ;;      Params:         0       0       0       0       0
 11243 ;;      Locals:         0       1       0       0       0
 11244 ;;      Temps:          0       1       0       0       0
 11245 ;;      Totals:         0       2       0       0       0
 11246 ;;Total ram usage:        2 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:    3
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_ChargeMode
 11253 ;;		_robo_init
 11254 ;;		_robot_read
 11255 ;;		_RobotDrive
 11256 ;;		_robotTurn
 11257 ;;		_ser_puts
 11258 ;;		_ser_puts2
 11259 ;;		_ser_puthex
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           psect	text1154
 11263                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11264                           	line	70
 11265                           	global	__size_of_ser_putch
 11266  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 11267                           	
 11268  123D                     _ser_putch:	
 11269                           	opt	stack 3
 11270                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 11271                           ;ser_putch@c stored from wreg
 11272  123D  1283               	bcf	status, 5	;RP0=0, select bank0
 11273  123E  1303               	bcf	status, 6	;RP1=0, select bank0
 11274  123F  00A1               	movwf	(ser_putch@c)
 11275                           	line	71
 11276                           	
 11277  1240                     l10599:	
 11278                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 11279  1240  2A42               	goto	l10601
 11280                           	
 11281  1241                     l6760:	
 11282                           	line	72
 11283                           ;ser.c: 72: continue;
 11284  1241  2A42               	goto	l10601
 11285                           	
 11286  1242                     l6759:	
 11287                           	line	71
 11288                           	
 11289  1242                     l10601:	
 11290  1242  086E               	movf	(_txiptr),w	;volatile
 11291  1243  3E01               	addlw	01h
 11292  1244  390F               	andlw	0Fh
 11293  1245  066F               	xorwf	(_txoptr),w	;volatile
 11294  1246  1903               	skipnz
 11295  1247  2A49               	goto	u3781
 11296  1248  2A4A               	goto	u3780
 11297  1249                     u3781:
 11298  1249  2A42               	goto	l10601
 11299  124A                     u3780:
 11300                           	
 11301  124A                     l6761:	
 11302                           	line	73
 11303                           ;ser.c: 73: GIE=0;
 11304  124A  138B               	bcf	(95/8),(95)&7
 11305                           	line	74
 11306                           	
 11307  124B                     l10603:	
 11308                           ;ser.c: 74: txfifo[txiptr] = c;
 11309  124B  0821               	movf	(ser_putch@c),w
 11310  124C  00A0               	movwf	(??_ser_putch+0)+0
 11311  124D  086E               	movf	(_txiptr),w
 11312  124E  3EA0               	addlw	_txfifo&0ffh
 11313  124F  0084               	movwf	fsr0
 11314  1250  0820               	movf	(??_ser_putch+0)+0,w
 11315  1251  1783               	bsf	status, 7	;select IRP bank3
 11316  1252  0080               	movwf	indf
 11317                           	line	75
 11318                           	
 11319  1253                     l10605:	
 11320                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 11321  1253  086E               	movf	(_txiptr),w	;volatile
 11322  1254  3E01               	addlw	01h
 11323  1255  390F               	andlw	0Fh
 11324  1256  00A0               	movwf	(??_ser_putch+0)+0
 11325  1257  0820               	movf	(??_ser_putch+0)+0,w
 11326  1258  00EE               	movwf	(_txiptr)	;volatile
 11327                           	line	76
 11328                           	
 11329  1259                     l10607:	
 11330                           ;ser.c: 76: TXIE=1;
 11331  1259  1683               	bsf	status, 5	;RP0=1, select bank1
 11332  125A  1303               	bcf	status, 6	;RP1=0, select bank1
 11333  125B  160C               	bsf	(1124/8)^080h,(1124)&7
 11334                           	line	77
 11335                           	
 11336  125C                     l10609:	
 11337                           ;ser.c: 77: GIE=1;
 11338  125C  178B               	bsf	(95/8),(95)&7
 11339                           	line	78
 11340                           	
 11341  125D                     l6762:	
 11342  125D  0008               	return
 11343                           	opt stack 0
 11344                           GLOBAL	__end_of_ser_putch
 11345  125E                     	__end_of_ser_putch:
 11346 ;; =============== function _ser_putch ends ============
 11347                           
 11348                           	signat	_ser_putch,4216
 11349                           	global	_Menu
 11350                           psect	text1155,local,class=CODE,delta=2
 11351                           global __ptext1155
 11352  1579                     __ptext1155:
 11353                           
 11354 ;; *************** function _Menu *****************
 11355 ;; Defined at:
 11356 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;  BTN_input       1    wreg     unsigned char 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      unsigned char 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11370 ;;      Params:         0       0       0       0       0
 11371 ;;      Locals:         0       1       0       0       0
 11372 ;;      Temps:          0       0       0       0       0
 11373 ;;      Totals:         0       1       0       0       0
 11374 ;;Total ram usage:        1 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:    3
 11377 ;; This function calls:
 11378 ;;		Nothing
 11379 ;; This function is called by:
 11380 ;;		_main
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           psect	text1155
 11384                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11385                           	line	201
 11386                           	global	__size_of_Menu
 11387  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 11388                           	
 11389  1579                     _Menu:	
 11390                           	opt	stack 4
 11391                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 11392                           ;Menu@BTN_input stored from wreg
 11393  1579  1283               	bcf	status, 5	;RP0=0, select bank0
 11394  157A  1303               	bcf	status, 6	;RP1=0, select bank0
 11395  157B  00A0               	movwf	(Menu@BTN_input)
 11396                           	line	202
 11397                           	
 11398  157C                     l10575:	
 11399                           ;HMI.c: 202: switch (BTN_input)
 11400  157C  2DAB               	goto	l10593
 11401                           	line	204
 11402                           ;HMI.c: 203: {
 11403                           ;HMI.c: 204: case 1:
 11404                           	
 11405  157D                     l4518:	
 11406                           	line	206
 11407                           ;HMI.c: 206: break;
 11408  157D  2DBD               	goto	l10595
 11409                           	line	207
 11410                           ;HMI.c: 207: case 2:
 11411                           	
 11412  157E                     l4520:	
 11413                           	line	209
 11414                           ;HMI.c: 209: break;
 11415  157E  2DBD               	goto	l10595
 11416                           	line	210
 11417                           ;HMI.c: 210: case 3:
 11418                           	
 11419  157F                     l4521:	
 11420                           	line	211
 11421                           	
 11422  157F                     l10577:	
 11423                           ;HMI.c: 211: pos--;
 11424  157F  30FF               	movlw	low(-1)
 11425  1580  1683               	bsf	status, 5	;RP0=1, select bank1
 11426  1581  1303               	bcf	status, 6	;RP1=0, select bank1
 11427  1582  07BE               	addwf	(_pos)^080h,f
 11428  1583  1803               	skipnc
 11429  1584  0ABF               	incf	(_pos+1)^080h,f
 11430  1585  30FF               	movlw	high(-1)
 11431  1586  07BF               	addwf	(_pos+1)^080h,f
 11432                           	line	212
 11433                           	
 11434  1587                     l10579:	
 11435                           ;HMI.c: 212: if (pos < 0)
 11436  1587  1FBF               	btfss	(_pos+1)^080h,7
 11437  1588  2D8A               	goto	u3761
 11438  1589  2D8B               	goto	u3760
 11439  158A                     u3761:
 11440  158A  2DBD               	goto	l10595
 11441  158B                     u3760:
 11442                           	line	213
 11443                           	
 11444  158B                     l10581:	
 11445                           ;HMI.c: 213: pos = 6 - 1;
 11446  158B  3005               	movlw	low(05h)
 11447  158C  00BE               	movwf	(_pos)^080h
 11448  158D  3000               	movlw	high(05h)
 11449  158E  00BF               	movwf	((_pos)^080h)+1
 11450  158F  2DBD               	goto	l10595
 11451                           	
 11452  1590                     l4522:	
 11453                           	line	215
 11454                           ;HMI.c: 215: break;
 11455  1590  2DBD               	goto	l10595
 11456                           	line	216
 11457                           ;HMI.c: 216: case 4:
 11458                           	
 11459  1591                     l4523:	
 11460                           	line	217
 11461                           	
 11462  1591                     l10583:	
 11463                           ;HMI.c: 217: pos++;
 11464  1591  3001               	movlw	low(01h)
 11465  1592  1683               	bsf	status, 5	;RP0=1, select bank1
 11466  1593  1303               	bcf	status, 6	;RP1=0, select bank1
 11467  1594  07BE               	addwf	(_pos)^080h,f
 11468  1595  1803               	skipnc
 11469  1596  0ABF               	incf	(_pos+1)^080h,f
 11470  1597  3000               	movlw	high(01h)
 11471  1598  07BF               	addwf	(_pos+1)^080h,f
 11472                           	line	218
 11473                           ;HMI.c: 218: if (pos == 6)
 11474  1599  3006               	movlw	06h
 11475  159A  063E               	xorwf	(_pos)^080h,w
 11476  159B  043F               	iorwf	(_pos+1)^080h,w
 11477  159C  1D03               	skipz
 11478  159D  2D9F               	goto	u3771
 11479  159E  2DA0               	goto	u3770
 11480  159F                     u3771:
 11481  159F  2DBD               	goto	l10595
 11482  15A0                     u3770:
 11483                           	line	219
 11484                           	
 11485  15A0                     l10585:	
 11486                           ;HMI.c: 219: pos = 0;
 11487  15A0  01BE               	clrf	(_pos)^080h
 11488  15A1  01BF               	clrf	(_pos+1)^080h
 11489  15A2  2DBD               	goto	l10595
 11490                           	
 11491  15A3                     l4524:	
 11492                           	line	221
 11493                           ;HMI.c: 221: break;
 11494  15A3  2DBD               	goto	l10595
 11495                           	line	222
 11496                           ;HMI.c: 222: case 5:
 11497                           	
 11498  15A4                     l4525:	
 11499                           	line	223
 11500                           	
 11501  15A4                     l10587:	
 11502                           ;HMI.c: 223: return pos;
 11503  15A4  1683               	bsf	status, 5	;RP0=1, select bank1
 11504  15A5  1303               	bcf	status, 6	;RP1=0, select bank1
 11505  15A6  083E               	movf	(_pos)^080h,w
 11506  15A7  2DBF               	goto	l4526
 11507                           	
 11508  15A8                     l10589:	
 11509  15A8  2DBF               	goto	l4526
 11510                           	line	226
 11511                           ;HMI.c: 226: default:
 11512                           	
 11513  15A9                     l4527:	
 11514                           	line	228
 11515                           ;HMI.c: 228: break;
 11516  15A9  2DBD               	goto	l10595
 11517                           	line	229
 11518                           	
 11519  15AA                     l10591:	
 11520                           ;HMI.c: 229: }
 11521  15AA  2DBD               	goto	l10595
 11522                           	line	202
 11523                           	
 11524  15AB                     l4517:	
 11525                           	
 11526  15AB                     l10593:	
 11527  15AB  1283               	bcf	status, 5	;RP0=0, select bank0
 11528  15AC  0820               	movf	(Menu@BTN_input),w
 11529                           	; Switch size 1, requested type "space"
 11530                           ; Number of cases is 5, Range of values is 1 to 5
 11531                           ; switch strategies available:
 11532                           ; Name         Instructions Cycles
 11533                           ; simple_byte           16     9 (average)
 11534                           ; direct_byte           26    11 (fixed)
 11535                           ; jumptable            263     9 (fixed)
 11536                           ;	Chosen strategy is simple_byte
 11537                           
 11538                           	opt asmopt_off
 11539  15AD  3A01               	xorlw	1^0	; case 1
 11540  15AE  1903               	skipnz
 11541  15AF  2DBD               	goto	l10595
 11542  15B0  3A03               	xorlw	2^1	; case 2
 11543  15B1  1903               	skipnz
 11544  15B2  2DBD               	goto	l10595
 11545  15B3  3A01               	xorlw	3^2	; case 3
 11546  15B4  1903               	skipnz
 11547  15B5  2D7F               	goto	l10577
 11548  15B6  3A07               	xorlw	4^3	; case 4
 11549  15B7  1903               	skipnz
 11550  15B8  2D91               	goto	l10583
 11551  15B9  3A01               	xorlw	5^4	; case 5
 11552  15BA  1903               	skipnz
 11553  15BB  2DA4               	goto	l10587
 11554  15BC  2DBD               	goto	l10595
 11555                           	opt asmopt_on
 11556                           
 11557                           	line	229
 11558                           	
 11559  15BD                     l4519:	
 11560                           	line	230
 11561                           	
 11562  15BD                     l10595:	
 11563                           ;HMI.c: 230: return 255;
 11564  15BD  30FF               	movlw	(0FFh)
 11565  15BE  2DBF               	goto	l4526
 11566                           	
 11567  15BF                     l10597:	
 11568                           	line	231
 11569                           	
 11570  15BF                     l4526:	
 11571  15BF  0008               	return
 11572                           	opt stack 0
 11573                           GLOBAL	__end_of_Menu
 11574  15C0                     	__end_of_Menu:
 11575 ;; =============== function _Menu ends ============
 11576                           
 11577                           	signat	_Menu,4217
 11578                           	global	_ser_init
 11579                           psect	text1156,local,class=CODE,delta=2
 11580                           global __ptext1156
 11581  1280                     __ptext1156:
 11582                           
 11583 ;; *************** function _ser_init *****************
 11584 ;; Defined at:
 11585 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;		None
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;		None               void
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11599 ;;      Params:         0       0       0       0       0
 11600 ;;      Locals:         0       0       0       0       0
 11601 ;;      Temps:          0       1       0       0       0
 11602 ;;      Totals:         0       1       0       0       0
 11603 ;;Total ram usage:        1 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    3
 11606 ;; This function calls:
 11607 ;;		Nothing
 11608 ;; This function is called by:
 11609 ;;		_init
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           psect	text1156
 11613                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11614                           	line	113
 11615                           	global	__size_of_ser_init
 11616  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 11617                           	
 11618  1280                     _ser_init:	
 11619                           	opt	stack 3
 11620                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 11621                           	line	114
 11622                           	
 11623  1280                     l10549:	
 11624                           ;ser.c: 114: TRISC |= 0b10000000;
 11625  1280  1683               	bsf	status, 5	;RP0=1, select bank1
 11626  1281  1303               	bcf	status, 6	;RP1=0, select bank1
 11627  1282  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 11628                           	line	115
 11629                           	
 11630  1283                     l10551:	
 11631                           ;ser.c: 115: TRISC &= 0b10111111;
 11632  1283  30BF               	movlw	(0BFh)
 11633  1284  1283               	bcf	status, 5	;RP0=0, select bank0
 11634  1285  1303               	bcf	status, 6	;RP1=0, select bank0
 11635  1286  00A0               	movwf	(??_ser_init+0)+0
 11636  1287  0820               	movf	(??_ser_init+0)+0,w
 11637  1288  1683               	bsf	status, 5	;RP0=1, select bank1
 11638  1289  1303               	bcf	status, 6	;RP1=0, select bank1
 11639  128A  0587               	andwf	(135)^080h,f	;volatile
 11640                           	line	116
 11641                           	
 11642  128B                     l10553:	
 11643                           ;ser.c: 116: BRGH=1;
 11644  128B  1518               	bsf	(1218/8)^080h,(1218)&7
 11645                           	line	118
 11646                           	
 11647  128C                     l10555:	
 11648                           ;ser.c: 118: SPBRG=20;
 11649  128C  3014               	movlw	(014h)
 11650  128D  0099               	movwf	(153)^080h	;volatile
 11651                           	line	121
 11652                           	
 11653  128E                     l10557:	
 11654                           ;ser.c: 121: TX9=0;
 11655  128E  1318               	bcf	(1222/8)^080h,(1222)&7
 11656                           	line	122
 11657                           	
 11658  128F                     l10559:	
 11659                           ;ser.c: 122: RX9=0;
 11660  128F  1283               	bcf	status, 5	;RP0=0, select bank0
 11661  1290  1303               	bcf	status, 6	;RP1=0, select bank0
 11662  1291  1318               	bcf	(198/8),(198)&7
 11663                           	line	124
 11664                           	
 11665  1292                     l10561:	
 11666                           ;ser.c: 124: SYNC=0;
 11667  1292  1683               	bsf	status, 5	;RP0=1, select bank1
 11668  1293  1303               	bcf	status, 6	;RP1=0, select bank1
 11669  1294  1218               	bcf	(1220/8)^080h,(1220)&7
 11670                           	line	125
 11671                           	
 11672  1295                     l10563:	
 11673                           ;ser.c: 125: SPEN=1;
 11674  1295  1283               	bcf	status, 5	;RP0=0, select bank0
 11675  1296  1303               	bcf	status, 6	;RP1=0, select bank0
 11676  1297  1798               	bsf	(199/8),(199)&7
 11677                           	line	126
 11678                           	
 11679  1298                     l10565:	
 11680                           ;ser.c: 126: CREN=1;
 11681  1298  1618               	bsf	(196/8),(196)&7
 11682                           	line	127
 11683                           	
 11684  1299                     l10567:	
 11685                           ;ser.c: 127: TXIE=0;
 11686  1299  1683               	bsf	status, 5	;RP0=1, select bank1
 11687  129A  1303               	bcf	status, 6	;RP1=0, select bank1
 11688  129B  120C               	bcf	(1124/8)^080h,(1124)&7
 11689                           	line	128
 11690                           	
 11691  129C                     l10569:	
 11692                           ;ser.c: 128: RCIE=1;
 11693  129C  168C               	bsf	(1125/8)^080h,(1125)&7
 11694                           	line	129
 11695                           	
 11696  129D                     l10571:	
 11697                           ;ser.c: 129: TXEN=1;
 11698  129D  1698               	bsf	(1221/8)^080h,(1221)&7
 11699                           	line	132
 11700                           	
 11701  129E                     l10573:	
 11702                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 11703  129E  3000               	movlw	(0)
 11704  129F  1283               	bcf	status, 5	;RP0=0, select bank0
 11705  12A0  1303               	bcf	status, 6	;RP1=0, select bank0
 11706  12A1  00EF               	movwf	(_txoptr)	;volatile
 11707  12A2  00EE               	movwf	(_txiptr)	;volatile
 11708  12A3  00ED               	movwf	(_rxoptr)	;volatile
 11709  12A4  00A0               	movwf	(??_ser_init+0)+0
 11710  12A5  0820               	movf	(??_ser_init+0)+0,w
 11711  12A6  00EC               	movwf	(_rxiptr)	;volatile
 11712                           	line	133
 11713                           	
 11714  12A7                     l6784:	
 11715  12A7  0008               	return
 11716                           	opt stack 0
 11717                           GLOBAL	__end_of_ser_init
 11718  12A8                     	__end_of_ser_init:
 11719 ;; =============== function _ser_init ends ============
 11720                           
 11721                           	signat	_ser_init,88
 11722                           	global	_adc_read
 11723                           psect	text1157,local,class=CODE,delta=2
 11724                           global __ptext1157
 11725  12A8                     __ptext1157:
 11726                           
 11727 ;; *************** function _adc_read *****************
 11728 ;; Defined at:
 11729 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;		None
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  2    0[BANK0 ] unsigned int 
 11736 ;; Registers used:
 11737 ;;		wreg, status,2, status,0
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11743 ;;      Params:         0       2       0       0       0
 11744 ;;      Locals:         0       2       0       0       0
 11745 ;;      Temps:          0       2       0       0       0
 11746 ;;      Totals:         0       6       0       0       0
 11747 ;;Total ram usage:        6 bytes
 11748 ;; Hardware stack levels used:    1
 11749 ;; Hardware stack levels required when called:    3
 11750 ;; This function calls:
 11751 ;;		Nothing
 11752 ;; This function is called by:
 11753 ;;		_adc_read_channel
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           psect	text1157
 11757                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 11758                           	line	76
 11759                           	global	__size_of_adc_read
 11760  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 11761                           	
 11762  12A8                     _adc_read:	
 11763                           	opt	stack 0
 11764                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 11765                           	line	79
 11766                           	
 11767  12A8                     l10429:	
 11768                           ;adc.c: 77: volatile unsigned int adc_value;
 11769                           ;adc.c: 79: ADRESH = 0;
 11770  12A8  1283               	bcf	status, 5	;RP0=0, select bank0
 11771  12A9  1303               	bcf	status, 6	;RP1=0, select bank0
 11772  12AA  019E               	clrf	(30)	;volatile
 11773                           	line	81
 11774                           	
 11775  12AB                     l10431:	
 11776                           ;adc.c: 81: GO = 1;
 11777  12AB  151F               	bsf	(250/8),(250)&7
 11778                           	line	82
 11779                           ;adc.c: 82: while(GO) continue;
 11780  12AC  2AAD               	goto	l703
 11781                           	
 11782  12AD                     l704:	
 11783                           	
 11784  12AD                     l703:	
 11785  12AD  191F               	btfsc	(250/8),(250)&7
 11786  12AE  2AB0               	goto	u3571
 11787  12AF  2AB1               	goto	u3570
 11788  12B0                     u3571:
 11789  12B0  2AAD               	goto	l703
 11790  12B1                     u3570:
 11791                           	
 11792  12B1                     l705:	
 11793                           	line	83
 11794                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11795  12B1  0000               nop ;#
 11796                           	line	84
 11797                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11798  12B2  0000               nop ;#
 11799                           	line	85
 11800                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 11801  12B3  0000               nop ;#
 11802                           psect	text1157
 11803                           	line	88
 11804                           	
 11805  12B4                     l10433:	
 11806                           ;adc.c: 88: adc_value = ADRESH;
 11807  12B4  1283               	bcf	status, 5	;RP0=0, select bank0
 11808  12B5  1303               	bcf	status, 6	;RP1=0, select bank0
 11809  12B6  081E               	movf	(30),w	;volatile
 11810  12B7  00A2               	movwf	(??_adc_read+0)+0
 11811  12B8  01A3               	clrf	(??_adc_read+0)+0+1
 11812  12B9  0822               	movf	0+(??_adc_read+0)+0,w
 11813  12BA  00A4               	movwf	(adc_read@adc_value)	;volatile
 11814  12BB  0823               	movf	1+(??_adc_read+0)+0,w
 11815  12BC  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 11816                           	line	89
 11817                           ;adc.c: 89: adc_value <<= 1;
 11818  12BD  3001               	movlw	01h
 11819                           	
 11820  12BE                     u3585:
 11821  12BE  1003               	clrc
 11822  12BF  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 11823  12C0  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 11824  12C1  3EFF               	addlw	-1
 11825  12C2  1D03               	skipz
 11826  12C3  2ABE               	goto	u3585
 11827                           	line	90
 11828                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 11829  12C4  1683               	bsf	status, 5	;RP0=1, select bank1
 11830  12C5  1303               	bcf	status, 6	;RP1=0, select bank1
 11831  12C6  081E               	movf	(158)^080h,w	;volatile
 11832                           	line	93
 11833                           	
 11834  12C7                     l10435:	
 11835                           ;adc.c: 93: return (adc_value);
 11836  12C7  1283               	bcf	status, 5	;RP0=0, select bank0
 11837  12C8  1303               	bcf	status, 6	;RP1=0, select bank0
 11838  12C9  0825               	movf	(adc_read@adc_value+1),w	;volatile
 11839  12CA  01A1               	clrf	(?_adc_read+1)
 11840  12CB  07A1               	addwf	(?_adc_read+1)
 11841  12CC  0824               	movf	(adc_read@adc_value),w	;volatile
 11842  12CD  01A0               	clrf	(?_adc_read)
 11843  12CE  07A0               	addwf	(?_adc_read)
 11844                           
 11845  12CF  2AD0               	goto	l706
 11846                           	
 11847  12D0                     l10437:	
 11848                           	line	94
 11849                           	
 11850  12D0                     l706:	
 11851  12D0  0008               	return
 11852                           	opt stack 0
 11853                           GLOBAL	__end_of_adc_read
 11854  12D1                     	__end_of_adc_read:
 11855 ;; =============== function _adc_read ends ============
 11856                           
 11857                           	signat	_adc_read,90
 11858                           	global	_isr1
 11859                           psect	text1158,local,class=CODE,delta=2
 11860                           global __ptext1158
 11861  0B7E                     __ptext1158:
 11862                           
 11863 ;; *************** function _isr1 *****************
 11864 ;; Defined at:
 11865 ;;		line 109 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;		None
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;		None
 11870 ;; Return value:  Size  Location     Type
 11871 ;;		None               void
 11872 ;; Registers used:
 11873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11879 ;;      Params:         0       0       0       0       0
 11880 ;;      Locals:         0       0       0       0       0
 11881 ;;      Temps:          5       0       0       0       0
 11882 ;;      Totals:         5       0       0       0       0
 11883 ;;Total ram usage:        5 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    2
 11886 ;; This function calls:
 11887 ;;		i1___lwmod
 11888 ;;		_ReadButtons
 11889 ;; This function is called by:
 11890 ;;		Interrupt level 1
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           psect	text1158
 11894                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 11895                           	line	109
 11896                           	global	__size_of_isr1
 11897  00AC                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 11898                           	
 11899  0B7E                     _isr1:	
 11900                           	opt	stack 0
 11901                           ; Regs used in _isr1: [allreg]
 11902                           psect	intentry,class=CODE,delta=2
 11903                           global __pintentry
 11904  0004                     __pintentry:
 11905                           global interrupt_function
 11906  0004                     interrupt_function:
 11907                           	global saved_w
 11908  007E                     	saved_w	set	btemp+0
 11909  0004  00FE               	movwf	saved_w
 11910  0005  0E03               	swapf	status,w
 11911  0006  00F9               	movwf	(??_isr1+1)
 11912  0007  0804               	movf	fsr0,w
 11913  0008  00FA               	movwf	(??_isr1+2)
 11914  0009  080A               	movf	pclath,w
 11915  000A  00FB               	movwf	(??_isr1+3)
 11916  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 11917  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 11918  000D  087F               	movf	btemp+1,w
 11919  000E  00FC               	movwf	(??_isr1+4)
 11920  000F  120A  158A  2B7E   	ljmp	_isr1
 11921                           psect	text1158
 11922                           	line	110
 11923                           	
 11924  0B7E                     i1l10465:	
 11925                           ;Main.c: 110: if(TMR0IF)
 11926  0B7E  1D0B               	btfss	(90/8),(90)&7
 11927  0B7F  2B81               	goto	u362_21
 11928  0B80  2B82               	goto	u362_20
 11929  0B81                     u362_21:
 11930  0B81  2BD1               	goto	i1l10487
 11931  0B82                     u362_20:
 11932                           	line	112
 11933                           	
 11934  0B82                     i1l10467:	
 11935                           ;Main.c: 111: {
 11936                           ;Main.c: 112: TMR0IF = 0;
 11937  0B82  110B               	bcf	(90/8),(90)&7
 11938                           	line	113
 11939                           	
 11940  0B83                     i1l10469:	
 11941                           ;Main.c: 113: TMR0 = 100;
 11942  0B83  3064               	movlw	(064h)
 11943  0B84  0081               	movwf	(1)	;volatile
 11944                           	line	115
 11945                           ;Main.c: 115: RTC_Counter++;
 11946  0B85  3001               	movlw	low(01h)
 11947  0B86  1683               	bsf	status, 5	;RP0=1, select bank1
 11948  0B87  1303               	bcf	status, 6	;RP1=0, select bank1
 11949  0B88  07B2               	addwf	(_RTC_Counter)^080h,f	;volatile
 11950  0B89  1803               	skipnc
 11951  0B8A  0AB3               	incf	(_RTC_Counter+1)^080h,f	;volatile
 11952  0B8B  3000               	movlw	high(01h)
 11953  0B8C  07B3               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 11954                           	line	118
 11955                           	
 11956  0B8D                     i1l10471:	
 11957                           ;Main.c: 118: RTC_FLAG_1MS = 1;
 11958  0B8D  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 11959                           	line	119
 11960                           	
 11961  0B8E                     i1l10473:	
 11962                           ;Main.c: 119: if(RTC_Counter % 250 == 0)
 11963  0B8E  30FA               	movlw	low(0FAh)
 11964  0B8F  00F2               	movwf	(?i1___lwmod)
 11965  0B90  3000               	movlw	high(0FAh)
 11966  0B91  00F3               	movwf	((?i1___lwmod))+1
 11967  0B92  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11968  0B93  01F5               	clrf	1+(?i1___lwmod)+02h
 11969  0B94  07F5               	addwf	1+(?i1___lwmod)+02h
 11970  0B95  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 11971  0B96  01F4               	clrf	0+(?i1___lwmod)+02h
 11972  0B97  07F4               	addwf	0+(?i1___lwmod)+02h
 11973                           
 11974  0B98  160A  118A  24A9   	fcall	i1___lwmod
              120A  158A         
 11975  0B9D  0873               	movf	((1+(?i1___lwmod))),w
 11976  0B9E  0472               	iorwf	((0+(?i1___lwmod))),w
 11977  0B9F  1D03               	skipz
 11978  0BA0  2BA2               	goto	u363_21
 11979  0BA1  2BA3               	goto	u363_20
 11980  0BA2                     u363_21:
 11981  0BA2  2BA5               	goto	i1l10477
 11982  0BA3                     u363_20:
 11983                           	line	121
 11984                           	
 11985  0BA3                     i1l10475:	
 11986                           ;Main.c: 120: {
 11987                           ;Main.c: 121: RTC_FLAG_250MS = 1;
 11988  0BA3  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 11989  0BA4  2BA5               	goto	i1l10477
 11990                           	line	122
 11991                           	
 11992  0BA5                     i1l2217:	
 11993                           	line	123
 11994                           	
 11995  0BA5                     i1l10477:	
 11996                           ;Main.c: 122: }
 11997                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
 11998  0BA5  30F4               	movlw	low(01F4h)
 11999  0BA6  00F2               	movwf	(?i1___lwmod)
 12000  0BA7  3001               	movlw	high(01F4h)
 12001  0BA8  00F3               	movwf	((?i1___lwmod))+1
 12002  0BA9  1683               	bsf	status, 5	;RP0=1, select bank1
 12003  0BAA  1303               	bcf	status, 6	;RP1=0, select bank1
 12004  0BAB  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12005  0BAC  01F5               	clrf	1+(?i1___lwmod)+02h
 12006  0BAD  07F5               	addwf	1+(?i1___lwmod)+02h
 12007  0BAE  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 12008  0BAF  01F4               	clrf	0+(?i1___lwmod)+02h
 12009  0BB0  07F4               	addwf	0+(?i1___lwmod)+02h
 12010                           
 12011  0BB1  160A  118A  24A9   	fcall	i1___lwmod
              120A  158A         
 12012  0BB6  0873               	movf	((1+(?i1___lwmod))),w
 12013  0BB7  0472               	iorwf	((0+(?i1___lwmod))),w
 12014  0BB8  1D03               	skipz
 12015  0BB9  2BBB               	goto	u364_21
 12016  0BBA  2BBC               	goto	u364_20
 12017  0BBB                     u364_21:
 12018  0BBB  2BC2               	goto	i1l10483
 12019  0BBC                     u364_20:
 12020                           	line	125
 12021                           	
 12022  0BBC                     i1l10479:	
 12023                           ;Main.c: 124: {
 12024                           ;Main.c: 125: RTC_FLAG_500MS = 1;
 12025  0BBC  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 12026                           	line	126
 12027                           	
 12028  0BBD                     i1l10481:	
 12029                           ;Main.c: 126: RB0 ^= 0x01;
 12030  0BBD  1283               	bcf	status, 5	;RP0=0, select bank0
 12031  0BBE  1303               	bcf	status, 6	;RP1=0, select bank0
 12032  0BBF  3001               	movlw	1<<((48)&7)
 12033  0BC0  0686               	xorwf	((48)/8),f
 12034  0BC1  2BC2               	goto	i1l10483
 12035                           	line	127
 12036                           	
 12037  0BC2                     i1l2218:	
 12038                           	line	128
 12039                           	
 12040  0BC2                     i1l10483:	
 12041                           ;Main.c: 127: }
 12042                           ;Main.c: 128: if (buttonPressed == 0)
 12043  0BC2  08FD               	movf	(_buttonPressed),f
 12044  0BC3  1D03               	skipz	;volatile
 12045  0BC4  2BC6               	goto	u365_21
 12046  0BC5  2BC7               	goto	u365_20
 12047  0BC6                     u365_21:
 12048  0BC6  2BD1               	goto	i1l10487
 12049  0BC7                     u365_20:
 12050                           	line	130
 12051                           	
 12052  0BC7                     i1l10485:	
 12053                           ;Main.c: 129: {
 12054                           ;Main.c: 130: buttonPressed = ReadButtons();
 12055  0BC7  160A  118A  2409   	fcall	_ReadButtons
              120A  158A         
 12056  0BCC  00F8               	movwf	(??_isr1+0)+0
 12057  0BCD  0878               	movf	(??_isr1+0)+0,w
 12058  0BCE  00FD               	movwf	(_buttonPressed)	;volatile
 12059  0BCF  2BD1               	goto	i1l10487
 12060                           	line	131
 12061                           	
 12062  0BD0                     i1l2219:	
 12063  0BD0  2BD1               	goto	i1l10487
 12064                           	line	132
 12065                           	
 12066  0BD1                     i1l2216:	
 12067                           	line	133
 12068                           	
 12069  0BD1                     i1l10487:	
 12070                           ;Main.c: 131: }
 12071                           ;Main.c: 132: }
 12072                           ;Main.c: 133: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 12073  0BD1  1283               	bcf	status, 5	;RP0=0, select bank0
 12074  0BD2  1303               	bcf	status, 6	;RP1=0, select bank0
 12075  0BD3  1E8C               	btfss	(101/8),(101)&7
 12076  0BD4  2BD6               	goto	u366_21
 12077  0BD5  2BD7               	goto	u366_20
 12078  0BD6                     u366_21:
 12079  0BD6  2BF9               	goto	i1l10497
 12080  0BD7                     u366_20:
 12081                           	
 12082  0BD7                     i1l10489:	
 12083  0BD7  081A               	movf	(26),w	;volatile
 12084  0BD8  00F8               	movwf	(??_isr1+0)+0
 12085  0BD9  086C               	movf	(_rxiptr),w
 12086  0BDA  3EA0               	addlw	_rxfifo&0ffh
 12087  0BDB  0084               	movwf	fsr0
 12088  0BDC  0878               	movf	(??_isr1+0)+0,w
 12089  0BDD  1383               	bcf	status, 7	;select IRP bank1
 12090  0BDE  0080               	movwf	indf
 12091                           	
 12092  0BDF                     i1l10491:	
 12093  0BDF  086C               	movf	(_rxiptr),w	;volatile
 12094  0BE0  3E01               	addlw	01h
 12095  0BE1  390F               	andlw	0Fh
 12096  0BE2  00F8               	movwf	(??_isr1+0)+0
 12097  0BE3  0878               	movf	(??_isr1+0)+0,w
 12098  0BE4  1683               	bsf	status, 5	;RP0=1, select bank1
 12099  0BE5  1303               	bcf	status, 6	;RP1=0, select bank1
 12100  0BE6  00D3               	movwf	(_ser_tmp)^080h
 12101                           	
 12102  0BE7                     i1l10493:	
 12103  0BE7  0853               	movf	(_ser_tmp)^080h,w
 12104  0BE8  1283               	bcf	status, 5	;RP0=0, select bank0
 12105  0BE9  1303               	bcf	status, 6	;RP1=0, select bank0
 12106  0BEA  066D               	xorwf	(_rxoptr),w	;volatile
 12107  0BEB  1903               	skipnz
 12108  0BEC  2BEE               	goto	u367_21
 12109  0BED  2BEF               	goto	u367_20
 12110  0BEE                     u367_21:
 12111  0BEE  2BF9               	goto	i1l10497
 12112  0BEF                     u367_20:
 12113                           	
 12114  0BEF                     i1l10495:	
 12115  0BEF  1683               	bsf	status, 5	;RP0=1, select bank1
 12116  0BF0  1303               	bcf	status, 6	;RP1=0, select bank1
 12117  0BF1  0853               	movf	(_ser_tmp)^080h,w
 12118  0BF2  00F8               	movwf	(??_isr1+0)+0
 12119  0BF3  0878               	movf	(??_isr1+0)+0,w
 12120  0BF4  1283               	bcf	status, 5	;RP0=0, select bank0
 12121  0BF5  1303               	bcf	status, 6	;RP1=0, select bank0
 12122  0BF6  00EC               	movwf	(_rxiptr)	;volatile
 12123  0BF7  2BF9               	goto	i1l10497
 12124                           	
 12125  0BF8                     i1l2221:	
 12126  0BF8  2BF9               	goto	i1l10497
 12127                           	
 12128  0BF9                     i1l2220:	
 12129                           	
 12130  0BF9                     i1l10497:	
 12131  0BF9  1E0C               	btfss	(100/8),(100)&7
 12132  0BFA  2BFC               	goto	u368_21
 12133  0BFB  2BFD               	goto	u368_20
 12134  0BFC                     u368_21:
 12135  0BFC  2C1E               	goto	i1l2224
 12136  0BFD                     u368_20:
 12137                           	
 12138  0BFD                     i1l10499:	
 12139  0BFD  1683               	bsf	status, 5	;RP0=1, select bank1
 12140  0BFE  1303               	bcf	status, 6	;RP1=0, select bank1
 12141  0BFF  1E0C               	btfss	(1124/8)^080h,(1124)&7
 12142  0C00  2C02               	goto	u369_21
 12143  0C01  2C03               	goto	u369_20
 12144  0C02                     u369_21:
 12145  0C02  2C1E               	goto	i1l2224
 12146  0C03                     u369_20:
 12147                           	
 12148  0C03                     i1l10501:	
 12149  0C03  1283               	bcf	status, 5	;RP0=0, select bank0
 12150  0C04  1303               	bcf	status, 6	;RP1=0, select bank0
 12151  0C05  086F               	movf	(_txoptr),w
 12152  0C06  3EA0               	addlw	_txfifo&0ffh
 12153  0C07  0084               	movwf	fsr0
 12154  0C08  1783               	bsf	status, 7	;select IRP bank3
 12155  0C09  0800               	movf	indf,w
 12156  0C0A  0099               	movwf	(25)	;volatile
 12157                           	
 12158  0C0B                     i1l10503:	
 12159  0C0B  3001               	movlw	(01h)
 12160  0C0C  00F8               	movwf	(??_isr1+0)+0
 12161  0C0D  0878               	movf	(??_isr1+0)+0,w
 12162  0C0E  07EF               	addwf	(_txoptr),f	;volatile
 12163                           	
 12164  0C0F                     i1l10505:	
 12165  0C0F  300F               	movlw	(0Fh)
 12166  0C10  00F8               	movwf	(??_isr1+0)+0
 12167  0C11  0878               	movf	(??_isr1+0)+0,w
 12168  0C12  05EF               	andwf	(_txoptr),f	;volatile
 12169                           	
 12170  0C13                     i1l10507:	
 12171  0C13  086F               	movf	(_txoptr),w	;volatile
 12172  0C14  066E               	xorwf	(_txiptr),w	;volatile
 12173  0C15  1D03               	skipz
 12174  0C16  2C18               	goto	u370_21
 12175  0C17  2C19               	goto	u370_20
 12176  0C18                     u370_21:
 12177  0C18  2C1E               	goto	i1l2224
 12178  0C19                     u370_20:
 12179                           	
 12180  0C19                     i1l10509:	
 12181  0C19  1683               	bsf	status, 5	;RP0=1, select bank1
 12182  0C1A  1303               	bcf	status, 6	;RP1=0, select bank1
 12183  0C1B  120C               	bcf	(1124/8)^080h,(1124)&7
 12184  0C1C  2C1E               	goto	i1l2224
 12185                           	
 12186  0C1D                     i1l2223:	
 12187  0C1D  2C1E               	goto	i1l2224
 12188                           	
 12189  0C1E                     i1l2222:	
 12190                           	line	134
 12191                           	
 12192  0C1E                     i1l2224:	
 12193  0C1E  087C               	movf	(??_isr1+4),w
 12194  0C1F  1283               	bcf	status, 5	;RP0=0, select bank0
 12195  0C20  00FF               	movwf	btemp+1
 12196  0C21  087B               	movf	(??_isr1+3),w
 12197  0C22  008A               	movwf	pclath
 12198  0C23  087A               	movf	(??_isr1+2),w
 12199  0C24  0084               	movwf	fsr0
 12200  0C25  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 12201  0C26  0083               	movwf	status
 12202  0C27  0EFE               	swapf	saved_w,f
 12203  0C28  0E7E               	swapf	saved_w,w
 12204  0C29  0009               	retfie
 12205                           	opt stack 0
 12206                           GLOBAL	__end_of_isr1
 12207  0C2A                     	__end_of_isr1:
 12208 ;; =============== function _isr1 ends ============
 12209                           
 12210                           	signat	_isr1,88
 12211                           	global	_ReadButtons
 12212                           psect	text1159,local,class=CODE,delta=2
 12213                           global __ptext1159
 12214  1409                     __ptext1159:
 12215                           
 12216 ;; *************** function _ReadButtons *****************
 12217 ;; Defined at:
 12218 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;		None
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;		None
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  1    wreg      unsigned char 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0, pclath, cstack
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12232 ;;      Params:         0       0       0       0       0
 12233 ;;      Locals:         0       0       0       0       0
 12234 ;;      Temps:          0       0       0       0       0
 12235 ;;      Totals:         0       0       0       0       0
 12236 ;;Total ram usage:        0 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:    1
 12239 ;; This function calls:
 12240 ;;		_Debounce
 12241 ;; This function is called by:
 12242 ;;		_isr1
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           psect	text1159
 12246                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12247                           	line	159
 12248                           	global	__size_of_ReadButtons
 12249  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 12250                           	
 12251  1409                     _ReadButtons:	
 12252                           	opt	stack 0
 12253                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 12254                           	line	161
 12255                           	
 12256  1409                     i1l10511:	
 12257                           ;HMI.c: 161: Debounce();
 12258  1409  120A  158A  21A2   	fcall	_Debounce
              160A  118A         
 12259                           	line	163
 12260                           	
 12261  140E                     i1l10513:	
 12262                           ;HMI.c: 163: if(UpPressed)
 12263  140E  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 12264  140F  2C11               	goto	u371_21
 12265  1410  2C12               	goto	u371_20
 12266  1411                     u371_21:
 12267  1411  2C16               	goto	i1l4509
 12268  1412                     u371_20:
 12269                           	line	165
 12270                           	
 12271  1412                     i1l10515:	
 12272                           ;HMI.c: 164: {
 12273                           ;HMI.c: 165: UpPressed = 0;
 12274  1412  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 12275                           	line	166
 12276                           	
 12277  1413                     i1l10517:	
 12278                           ;HMI.c: 166: return 1;
 12279  1413  3001               	movlw	(01h)
 12280  1414  2C38               	goto	i1l4510
 12281                           	
 12282  1415                     i1l10519:	
 12283  1415  2C38               	goto	i1l4510
 12284                           	line	168
 12285                           	
 12286  1416                     i1l4509:	
 12287                           	line	170
 12288                           ;HMI.c: 168: }
 12289                           ;HMI.c: 170: if(DownPressed)
 12290  1416  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 12291  1417  2C19               	goto	u372_21
 12292  1418  2C1A               	goto	u372_20
 12293  1419                     u372_21:
 12294  1419  2C1E               	goto	i1l4511
 12295  141A                     u372_20:
 12296                           	line	172
 12297                           	
 12298  141A                     i1l10521:	
 12299                           ;HMI.c: 171: {
 12300                           ;HMI.c: 172: DownPressed = 0;
 12301  141A  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 12302                           	line	173
 12303                           	
 12304  141B                     i1l10523:	
 12305                           ;HMI.c: 173: return 2;
 12306  141B  3002               	movlw	(02h)
 12307  141C  2C38               	goto	i1l4510
 12308                           	
 12309  141D                     i1l10525:	
 12310  141D  2C38               	goto	i1l4510
 12311                           	line	175
 12312                           	
 12313  141E                     i1l4511:	
 12314                           	line	176
 12315                           ;HMI.c: 175: }
 12316                           ;HMI.c: 176: if(LeftPressed)
 12317  141E  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 12318  141F  2C21               	goto	u373_21
 12319  1420  2C22               	goto	u373_20
 12320  1421                     u373_21:
 12321  1421  2C26               	goto	i1l4512
 12322  1422                     u373_20:
 12323                           	line	178
 12324                           	
 12325  1422                     i1l10527:	
 12326                           ;HMI.c: 177: {
 12327                           ;HMI.c: 178: LeftPressed = 0;
 12328  1422  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 12329                           	line	179
 12330                           	
 12331  1423                     i1l10529:	
 12332                           ;HMI.c: 179: return 3;
 12333  1423  3003               	movlw	(03h)
 12334  1424  2C38               	goto	i1l4510
 12335                           	
 12336  1425                     i1l10531:	
 12337  1425  2C38               	goto	i1l4510
 12338                           	line	181
 12339                           	
 12340  1426                     i1l4512:	
 12341                           	line	182
 12342                           ;HMI.c: 181: }
 12343                           ;HMI.c: 182: if(RightPressed)
 12344  1426  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 12345  1427  2C29               	goto	u374_21
 12346  1428  2C2A               	goto	u374_20
 12347  1429                     u374_21:
 12348  1429  2C2E               	goto	i1l4513
 12349  142A                     u374_20:
 12350                           	line	184
 12351                           	
 12352  142A                     i1l10533:	
 12353                           ;HMI.c: 183: {
 12354                           ;HMI.c: 184: RightPressed = 0;
 12355  142A  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 12356                           	line	185
 12357                           	
 12358  142B                     i1l10535:	
 12359                           ;HMI.c: 185: return 4;
 12360  142B  3004               	movlw	(04h)
 12361  142C  2C38               	goto	i1l4510
 12362                           	
 12363  142D                     i1l10537:	
 12364  142D  2C38               	goto	i1l4510
 12365                           	line	187
 12366                           	
 12367  142E                     i1l4513:	
 12368                           	line	189
 12369                           ;HMI.c: 187: }
 12370                           ;HMI.c: 189: if(CenterPressed)
 12371  142E  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 12372  142F  2C31               	goto	u375_21
 12373  1430  2C32               	goto	u375_20
 12374  1431                     u375_21:
 12375  1431  2C36               	goto	i1l10545
 12376  1432                     u375_20:
 12377                           	line	191
 12378                           	
 12379  1432                     i1l10539:	
 12380                           ;HMI.c: 190: {
 12381                           ;HMI.c: 191: CenterPressed = 0;
 12382  1432  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 12383                           	line	192
 12384                           	
 12385  1433                     i1l10541:	
 12386                           ;HMI.c: 192: return 5;
 12387  1433  3005               	movlw	(05h)
 12388  1434  2C38               	goto	i1l4510
 12389                           	
 12390  1435                     i1l10543:	
 12391  1435  2C38               	goto	i1l4510
 12392                           	line	194
 12393                           	
 12394  1436                     i1l4514:	
 12395                           	line	195
 12396                           	
 12397  1436                     i1l10545:	
 12398                           ;HMI.c: 194: }
 12399                           ;HMI.c: 195: return 0;
 12400  1436  3000               	movlw	(0)
 12401  1437  2C38               	goto	i1l4510
 12402                           	
 12403  1438                     i1l10547:	
 12404                           	line	196
 12405                           	
 12406  1438                     i1l4510:	
 12407  1438  0008               	return
 12408                           	opt stack 0
 12409                           GLOBAL	__end_of_ReadButtons
 12410  1439                     	__end_of_ReadButtons:
 12411 ;; =============== function _ReadButtons ends ============
 12412                           
 12413                           	signat	_ReadButtons,89
 12414                           	global	i1___lwmod
 12415                           psect	text1160,local,class=CODE,delta=2
 12416                           global __ptext1160
 12417  14A9                     __ptext1160:
 12418                           
 12419 ;; *************** function i1___lwmod *****************
 12420 ;; Defined at:
 12421 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  __lwmod         2    0[COMMON] unsigned int 
 12424 ;;  __lwmod         2    2[COMMON] unsigned int 
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;  __lwmod         1    5[COMMON] unsigned char 
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  2    0[COMMON] unsigned int 
 12429 ;; Registers used:
 12430 ;;		wreg, status,2, status,0
 12431 ;; Tracked objects:
 12432 ;;		On entry : 0/0
 12433 ;;		On exit  : 0/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12436 ;;      Params:         4       0       0       0       0
 12437 ;;      Locals:         1       0       0       0       0
 12438 ;;      Temps:          1       0       0       0       0
 12439 ;;      Totals:         6       0       0       0       0
 12440 ;;Total ram usage:        6 bytes
 12441 ;; Hardware stack levels used:    1
 12442 ;; This function calls:
 12443 ;;		Nothing
 12444 ;; This function is called by:
 12445 ;;		_isr1
 12446 ;; This function uses a non-reentrant model
 12447 ;;
 12448                           psect	text1160
 12449                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12450                           	line	5
 12451                           	global	__size_ofi1___lwmod
 12452  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 12453                           	
 12454  14A9                     i1___lwmod:	
 12455                           	opt	stack 1
 12456                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 12457                           	line	8
 12458                           	
 12459  14A9                     i1l11033:	
 12460  14A9  0873               	movf	(i1___lwmod@divisor+1),w
 12461  14AA  0472               	iorwf	(i1___lwmod@divisor),w
 12462  14AB  1903               	skipnz
 12463  14AC  2CAE               	goto	u485_21
 12464  14AD  2CAF               	goto	u485_20
 12465  14AE                     u485_21:
 12466  14AE  2CE5               	goto	i1l11051
 12467  14AF                     u485_20:
 12468                           	line	9
 12469                           	
 12470  14AF                     i1l11035:	
 12471  14AF  01F7               	clrf	(i1___lwmod@counter)
 12472  14B0  1403               	bsf	status,0
 12473  14B1  0DF7               	rlf	(i1___lwmod@counter),f
 12474                           	line	10
 12475  14B2  2CBF               	goto	i1l11041
 12476                           	
 12477  14B3                     i1l7513:	
 12478                           	line	11
 12479                           	
 12480  14B3                     i1l11037:	
 12481  14B3  3001               	movlw	01h
 12482                           	
 12483  14B4                     u486_25:
 12484  14B4  1003               	clrc
 12485  14B5  0DF2               	rlf	(i1___lwmod@divisor),f
 12486  14B6  0DF3               	rlf	(i1___lwmod@divisor+1),f
 12487  14B7  3EFF               	addlw	-1
 12488  14B8  1D03               	skipz
 12489  14B9  2CB4               	goto	u486_25
 12490                           	line	12
 12491                           	
 12492  14BA                     i1l11039:	
 12493  14BA  3001               	movlw	(01h)
 12494  14BB  00F6               	movwf	(??i1___lwmod+0)+0
 12495  14BC  0876               	movf	(??i1___lwmod+0)+0,w
 12496  14BD  07F7               	addwf	(i1___lwmod@counter),f
 12497  14BE  2CBF               	goto	i1l11041
 12498                           	line	13
 12499                           	
 12500  14BF                     i1l7512:	
 12501                           	line	10
 12502                           	
 12503  14BF                     i1l11041:	
 12504  14BF  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 12505  14C0  2CC2               	goto	u487_21
 12506  14C1  2CC3               	goto	u487_20
 12507  14C2                     u487_21:
 12508  14C2  2CB3               	goto	i1l11037
 12509  14C3                     u487_20:
 12510  14C3  2CC5               	goto	i1l11043
 12511                           	
 12512  14C4                     i1l7514:	
 12513  14C4  2CC5               	goto	i1l11043
 12514                           	line	14
 12515                           	
 12516  14C5                     i1l7515:	
 12517                           	line	15
 12518                           	
 12519  14C5                     i1l11043:	
 12520  14C5  0873               	movf	(i1___lwmod@divisor+1),w
 12521  14C6  0275               	subwf	(i1___lwmod@dividend+1),w
 12522  14C7  1D03               	skipz
 12523  14C8  2CCB               	goto	u488_25
 12524  14C9  0872               	movf	(i1___lwmod@divisor),w
 12525  14CA  0274               	subwf	(i1___lwmod@dividend),w
 12526  14CB                     u488_25:
 12527  14CB  1C03               	skipc
 12528  14CC  2CCE               	goto	u488_21
 12529  14CD  2CCF               	goto	u488_20
 12530  14CE                     u488_21:
 12531  14CE  2CD6               	goto	i1l11047
 12532  14CF                     u488_20:
 12533                           	line	16
 12534                           	
 12535  14CF                     i1l11045:	
 12536  14CF  0872               	movf	(i1___lwmod@divisor),w
 12537  14D0  02F4               	subwf	(i1___lwmod@dividend),f
 12538  14D1  0873               	movf	(i1___lwmod@divisor+1),w
 12539  14D2  1C03               	skipc
 12540  14D3  03F5               	decf	(i1___lwmod@dividend+1),f
 12541  14D4  02F5               	subwf	(i1___lwmod@dividend+1),f
 12542  14D5  2CD6               	goto	i1l11047
 12543                           	
 12544  14D6                     i1l7516:	
 12545                           	line	17
 12546                           	
 12547  14D6                     i1l11047:	
 12548  14D6  3001               	movlw	01h
 12549                           	
 12550  14D7                     u489_25:
 12551  14D7  1003               	clrc
 12552  14D8  0CF3               	rrf	(i1___lwmod@divisor+1),f
 12553  14D9  0CF2               	rrf	(i1___lwmod@divisor),f
 12554  14DA  3EFF               	addlw	-1
 12555  14DB  1D03               	skipz
 12556  14DC  2CD7               	goto	u489_25
 12557                           	line	18
 12558                           	
 12559  14DD                     i1l11049:	
 12560  14DD  3001               	movlw	low(01h)
 12561  14DE  02F7               	subwf	(i1___lwmod@counter),f
 12562  14DF  1D03               	btfss	status,2
 12563  14E0  2CE2               	goto	u490_21
 12564  14E1  2CE3               	goto	u490_20
 12565  14E2                     u490_21:
 12566  14E2  2CC5               	goto	i1l11043
 12567  14E3                     u490_20:
 12568  14E3  2CE5               	goto	i1l11051
 12569                           	
 12570  14E4                     i1l7517:	
 12571  14E4  2CE5               	goto	i1l11051
 12572                           	line	19
 12573                           	
 12574  14E5                     i1l7511:	
 12575                           	line	20
 12576                           	
 12577  14E5                     i1l11051:	
 12578  14E5  0875               	movf	(i1___lwmod@dividend+1),w
 12579  14E6  01F3               	clrf	(?i1___lwmod+1)
 12580  14E7  07F3               	addwf	(?i1___lwmod+1)
 12581  14E8  0874               	movf	(i1___lwmod@dividend),w
 12582  14E9  01F2               	clrf	(?i1___lwmod)
 12583  14EA  07F2               	addwf	(?i1___lwmod)
 12584                           
 12585  14EB  2CEC               	goto	i1l7518
 12586                           	
 12587  14EC                     i1l11053:	
 12588                           	line	21
 12589                           	
 12590  14EC                     i1l7518:	
 12591  14EC  0008               	return
 12592                           	opt stack 0
 12593                           GLOBAL	__end_ofi1___lwmod
 12594  14ED                     	__end_ofi1___lwmod:
 12595 ;; =============== function i1___lwmod ends ============
 12596                           
 12597                           	signat	i1___lwmod,90
 12598                           	global	_Debounce
 12599                           psect	text1161,local,class=CODE,delta=2
 12600                           global __ptext1161
 12601  09A2                     __ptext1161:
 12602                           
 12603 ;; *************** function _Debounce *****************
 12604 ;; Defined at:
 12605 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;		None
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;		None               void
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12619 ;;      Params:         0       0       0       0       0
 12620 ;;      Locals:         0       0       0       0       0
 12621 ;;      Temps:          1       0       0       0       0
 12622 ;;      Totals:         1       0       0       0       0
 12623 ;;Total ram usage:        1 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; This function calls:
 12626 ;;		Nothing
 12627 ;; This function is called by:
 12628 ;;		_ReadButtons
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           psect	text1161
 12632                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12633                           	line	77
 12634                           	global	__size_of_Debounce
 12635  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 12636                           	
 12637  09A2                     _Debounce:	
 12638                           	opt	stack 0
 12639                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 12640                           	line	79
 12641                           	
 12642  09A2                     i1l10621:	
 12643                           ;HMI.c: 79: if(!RB2)
 12644  09A2  1283               	bcf	status, 5	;RP0=0, select bank0
 12645  09A3  1303               	bcf	status, 6	;RP1=0, select bank0
 12646  09A4  1906               	btfsc	(50/8),(50)&7
 12647  09A5  29A7               	goto	u380_21
 12648  09A6  29A8               	goto	u380_20
 12649  09A7                     u380_21:
 12650  09A7  29BC               	goto	i1l4491
 12651  09A8                     u380_20:
 12652                           	line	81
 12653                           	
 12654  09A8                     i1l10623:	
 12655                           ;HMI.c: 80: {
 12656                           ;HMI.c: 81: UpDebounceCount++;
 12657  09A8  3001               	movlw	(01h)
 12658  09A9  00F2               	movwf	(??_Debounce+0)+0
 12659  09AA  0872               	movf	(??_Debounce+0)+0,w
 12660  09AB  1683               	bsf	status, 5	;RP0=1, select bank1
 12661  09AC  1303               	bcf	status, 6	;RP1=0, select bank1
 12662  09AD  07CE               	addwf	(_UpDebounceCount)^080h,f	;volatile
 12663                           	line	82
 12664                           	
 12665  09AE                     i1l10625:	
 12666                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 12667  09AE  300A               	movlw	(0Ah)
 12668  09AF  024E               	subwf	(_UpDebounceCount)^080h,w	;volatile
 12669  09B0  1C03               	skipc
 12670  09B1  29B3               	goto	u381_21
 12671  09B2  29B4               	goto	u381_20
 12672  09B3                     u381_21:
 12673  09B3  29C0               	goto	i1l4493
 12674  09B4                     u381_20:
 12675                           	
 12676  09B4                     i1l10627:	
 12677  09B4  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 12678  09B5  29B7               	goto	u382_21
 12679  09B6  29B8               	goto	u382_20
 12680  09B7                     u382_21:
 12681  09B7  29C0               	goto	i1l4493
 12682  09B8                     u382_20:
 12683                           	line	84
 12684                           	
 12685  09B8                     i1l10629:	
 12686                           ;HMI.c: 83: {
 12687                           ;HMI.c: 84: UpPressed = 1;
 12688  09B8  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 12689                           	line	85
 12690                           ;HMI.c: 85: UpReleased = 0;
 12691  09B9  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 12692  09BA  29C0               	goto	i1l4493
 12693                           	line	86
 12694                           	
 12695  09BB                     i1l4492:	
 12696                           	line	87
 12697                           ;HMI.c: 86: }
 12698                           ;HMI.c: 87: }
 12699  09BB  29C0               	goto	i1l4493
 12700                           	line	88
 12701                           	
 12702  09BC                     i1l4491:	
 12703                           	line	90
 12704                           ;HMI.c: 88: else
 12705                           ;HMI.c: 89: {
 12706                           ;HMI.c: 90: UpDebounceCount = 0;
 12707  09BC  1683               	bsf	status, 5	;RP0=1, select bank1
 12708  09BD  1303               	bcf	status, 6	;RP1=0, select bank1
 12709  09BE  01CE               	clrf	(_UpDebounceCount)^080h	;volatile
 12710                           	line	91
 12711                           ;HMI.c: 91: UpReleased = 1;
 12712  09BF  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 12713                           	line	92
 12714                           	
 12715  09C0                     i1l4493:	
 12716                           	line	95
 12717                           ;HMI.c: 92: }
 12718                           ;HMI.c: 95: if(!RB3)
 12719  09C0  1283               	bcf	status, 5	;RP0=0, select bank0
 12720  09C1  1303               	bcf	status, 6	;RP1=0, select bank0
 12721  09C2  1986               	btfsc	(51/8),(51)&7
 12722  09C3  29C5               	goto	u383_21
 12723  09C4  29C6               	goto	u383_20
 12724  09C5                     u383_21:
 12725  09C5  29DA               	goto	i1l4494
 12726  09C6                     u383_20:
 12727                           	line	97
 12728                           	
 12729  09C6                     i1l10631:	
 12730                           ;HMI.c: 96: {
 12731                           ;HMI.c: 97: DownDebounceCount++;
 12732  09C6  3001               	movlw	(01h)
 12733  09C7  00F2               	movwf	(??_Debounce+0)+0
 12734  09C8  0872               	movf	(??_Debounce+0)+0,w
 12735  09C9  1683               	bsf	status, 5	;RP0=1, select bank1
 12736  09CA  1303               	bcf	status, 6	;RP1=0, select bank1
 12737  09CB  07CA               	addwf	(_DownDebounceCount)^080h,f	;volatile
 12738                           	line	98
 12739                           	
 12740  09CC                     i1l10633:	
 12741                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 12742  09CC  300A               	movlw	(0Ah)
 12743  09CD  024A               	subwf	(_DownDebounceCount)^080h,w	;volatile
 12744  09CE  1C03               	skipc
 12745  09CF  29D1               	goto	u384_21
 12746  09D0  29D2               	goto	u384_20
 12747  09D1                     u384_21:
 12748  09D1  29DE               	goto	i1l4496
 12749  09D2                     u384_20:
 12750                           	
 12751  09D2                     i1l10635:	
 12752  09D2  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 12753  09D3  29D5               	goto	u385_21
 12754  09D4  29D6               	goto	u385_20
 12755  09D5                     u385_21:
 12756  09D5  29DE               	goto	i1l4496
 12757  09D6                     u385_20:
 12758                           	line	100
 12759                           	
 12760  09D6                     i1l10637:	
 12761                           ;HMI.c: 99: {
 12762                           ;HMI.c: 100: DownPressed = 1;
 12763  09D6  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 12764                           	line	101
 12765                           ;HMI.c: 101: DownReleased = 0;
 12766  09D7  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 12767  09D8  29DE               	goto	i1l4496
 12768                           	line	102
 12769                           	
 12770  09D9                     i1l4495:	
 12771                           	line	103
 12772                           ;HMI.c: 102: }
 12773                           ;HMI.c: 103: }
 12774  09D9  29DE               	goto	i1l4496
 12775                           	line	104
 12776                           	
 12777  09DA                     i1l4494:	
 12778                           	line	106
 12779                           ;HMI.c: 104: else
 12780                           ;HMI.c: 105: {
 12781                           ;HMI.c: 106: DownDebounceCount = 0;
 12782  09DA  1683               	bsf	status, 5	;RP0=1, select bank1
 12783  09DB  1303               	bcf	status, 6	;RP1=0, select bank1
 12784  09DC  01CA               	clrf	(_DownDebounceCount)^080h	;volatile
 12785                           	line	107
 12786                           ;HMI.c: 107: DownReleased = 1;
 12787  09DD  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 12788                           	line	108
 12789                           	
 12790  09DE                     i1l4496:	
 12791                           	line	110
 12792                           ;HMI.c: 108: }
 12793                           ;HMI.c: 110: if(!RB4)
 12794  09DE  1283               	bcf	status, 5	;RP0=0, select bank0
 12795  09DF  1303               	bcf	status, 6	;RP1=0, select bank0
 12796  09E0  1A06               	btfsc	(52/8),(52)&7
 12797  09E1  29E3               	goto	u386_21
 12798  09E2  29E4               	goto	u386_20
 12799  09E3                     u386_21:
 12800  09E3  29F8               	goto	i1l4497
 12801  09E4                     u386_20:
 12802                           	line	112
 12803                           	
 12804  09E4                     i1l10639:	
 12805                           ;HMI.c: 111: {
 12806                           ;HMI.c: 112: LeftDebounceCount++;
 12807  09E4  3001               	movlw	(01h)
 12808  09E5  00F2               	movwf	(??_Debounce+0)+0
 12809  09E6  0872               	movf	(??_Debounce+0)+0,w
 12810  09E7  1683               	bsf	status, 5	;RP0=1, select bank1
 12811  09E8  1303               	bcf	status, 6	;RP1=0, select bank1
 12812  09E9  07CB               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 12813                           	line	113
 12814                           	
 12815  09EA                     i1l10641:	
 12816                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 12817  09EA  300A               	movlw	(0Ah)
 12818  09EB  024B               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 12819  09EC  1C03               	skipc
 12820  09ED  29EF               	goto	u387_21
 12821  09EE  29F0               	goto	u387_20
 12822  09EF                     u387_21:
 12823  09EF  29FC               	goto	i1l4499
 12824  09F0                     u387_20:
 12825                           	
 12826  09F0                     i1l10643:	
 12827  09F0  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 12828  09F1  29F3               	goto	u388_21
 12829  09F2  29F4               	goto	u388_20
 12830  09F3                     u388_21:
 12831  09F3  29FC               	goto	i1l4499
 12832  09F4                     u388_20:
 12833                           	line	115
 12834                           	
 12835  09F4                     i1l10645:	
 12836                           ;HMI.c: 114: {
 12837                           ;HMI.c: 115: LeftPressed = 1;
 12838  09F4  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 12839                           	line	116
 12840                           ;HMI.c: 116: LeftReleased = 0;
 12841  09F5  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 12842  09F6  29FC               	goto	i1l4499
 12843                           	line	117
 12844                           	
 12845  09F7                     i1l4498:	
 12846                           	line	118
 12847                           ;HMI.c: 117: }
 12848                           ;HMI.c: 118: }
 12849  09F7  29FC               	goto	i1l4499
 12850                           	line	119
 12851                           	
 12852  09F8                     i1l4497:	
 12853                           	line	121
 12854                           ;HMI.c: 119: else
 12855                           ;HMI.c: 120: {
 12856                           ;HMI.c: 121: LeftDebounceCount = 0;
 12857  09F8  1683               	bsf	status, 5	;RP0=1, select bank1
 12858  09F9  1303               	bcf	status, 6	;RP1=0, select bank1
 12859  09FA  01CB               	clrf	(_LeftDebounceCount)^080h	;volatile
 12860                           	line	122
 12861                           ;HMI.c: 122: LeftReleased = 1;
 12862  09FB  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 12863                           	line	123
 12864                           	
 12865  09FC                     i1l4499:	
 12866                           	line	125
 12867                           ;HMI.c: 123: }
 12868                           ;HMI.c: 125: if(!RB5)
 12869  09FC  1283               	bcf	status, 5	;RP0=0, select bank0
 12870  09FD  1303               	bcf	status, 6	;RP1=0, select bank0
 12871  09FE  1A86               	btfsc	(53/8),(53)&7
 12872  09FF  2A01               	goto	u389_21
 12873  0A00  2A02               	goto	u389_20
 12874  0A01                     u389_21:
 12875  0A01  2A16               	goto	i1l4500
 12876  0A02                     u389_20:
 12877                           	line	127
 12878                           	
 12879  0A02                     i1l10647:	
 12880                           ;HMI.c: 126: {
 12881                           ;HMI.c: 127: RightDebounceCount++;
 12882  0A02  3001               	movlw	(01h)
 12883  0A03  00F2               	movwf	(??_Debounce+0)+0
 12884  0A04  0872               	movf	(??_Debounce+0)+0,w
 12885  0A05  1683               	bsf	status, 5	;RP0=1, select bank1
 12886  0A06  1303               	bcf	status, 6	;RP1=0, select bank1
 12887  0A07  07CD               	addwf	(_RightDebounceCount)^080h,f	;volatile
 12888                           	line	128
 12889                           	
 12890  0A08                     i1l10649:	
 12891                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 12892  0A08  300A               	movlw	(0Ah)
 12893  0A09  024D               	subwf	(_RightDebounceCount)^080h,w	;volatile
 12894  0A0A  1C03               	skipc
 12895  0A0B  2A0D               	goto	u390_21
 12896  0A0C  2A0E               	goto	u390_20
 12897  0A0D                     u390_21:
 12898  0A0D  2A1A               	goto	i1l4502
 12899  0A0E                     u390_20:
 12900                           	
 12901  0A0E                     i1l10651:	
 12902  0A0E  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 12903  0A0F  2A11               	goto	u391_21
 12904  0A10  2A12               	goto	u391_20
 12905  0A11                     u391_21:
 12906  0A11  2A1A               	goto	i1l4502
 12907  0A12                     u391_20:
 12908                           	line	130
 12909                           	
 12910  0A12                     i1l10653:	
 12911                           ;HMI.c: 129: {
 12912                           ;HMI.c: 130: RightPressed = 1;
 12913  0A12  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 12914                           	line	131
 12915                           ;HMI.c: 131: RightReleased = 0;
 12916  0A13  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 12917  0A14  2A1A               	goto	i1l4502
 12918                           	line	132
 12919                           	
 12920  0A15                     i1l4501:	
 12921                           	line	133
 12922                           ;HMI.c: 132: }
 12923                           ;HMI.c: 133: }
 12924  0A15  2A1A               	goto	i1l4502
 12925                           	line	134
 12926                           	
 12927  0A16                     i1l4500:	
 12928                           	line	136
 12929                           ;HMI.c: 134: else
 12930                           ;HMI.c: 135: {
 12931                           ;HMI.c: 136: RightDebounceCount = 0;
 12932  0A16  1683               	bsf	status, 5	;RP0=1, select bank1
 12933  0A17  1303               	bcf	status, 6	;RP1=0, select bank1
 12934  0A18  01CD               	clrf	(_RightDebounceCount)^080h	;volatile
 12935                           	line	137
 12936                           ;HMI.c: 137: RightReleased = 1;
 12937  0A19  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 12938                           	line	138
 12939                           	
 12940  0A1A                     i1l4502:	
 12941                           	line	140
 12942                           ;HMI.c: 138: }
 12943                           ;HMI.c: 140: if(!RB6)
 12944  0A1A  1283               	bcf	status, 5	;RP0=0, select bank0
 12945  0A1B  1303               	bcf	status, 6	;RP1=0, select bank0
 12946  0A1C  1B06               	btfsc	(54/8),(54)&7
 12947  0A1D  2A1F               	goto	u392_21
 12948  0A1E  2A20               	goto	u392_20
 12949  0A1F                     u392_21:
 12950  0A1F  2A34               	goto	i1l4503
 12951  0A20                     u392_20:
 12952                           	line	142
 12953                           	
 12954  0A20                     i1l10655:	
 12955                           ;HMI.c: 141: {
 12956                           ;HMI.c: 142: CenterDebounceCount++;
 12957  0A20  3001               	movlw	(01h)
 12958  0A21  00F2               	movwf	(??_Debounce+0)+0
 12959  0A22  0872               	movf	(??_Debounce+0)+0,w
 12960  0A23  1683               	bsf	status, 5	;RP0=1, select bank1
 12961  0A24  1303               	bcf	status, 6	;RP1=0, select bank1
 12962  0A25  07C7               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 12963                           	line	143
 12964                           	
 12965  0A26                     i1l10657:	
 12966                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 12967  0A26  300A               	movlw	(0Ah)
 12968  0A27  0247               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 12969  0A28  1C03               	skipc
 12970  0A29  2A2B               	goto	u393_21
 12971  0A2A  2A2C               	goto	u393_20
 12972  0A2B                     u393_21:
 12973  0A2B  2A39               	goto	i1l4506
 12974  0A2C                     u393_20:
 12975                           	
 12976  0A2C                     i1l10659:	
 12977  0A2C  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 12978  0A2D  2A2F               	goto	u394_21
 12979  0A2E  2A30               	goto	u394_20
 12980  0A2F                     u394_21:
 12981  0A2F  2A39               	goto	i1l4506
 12982  0A30                     u394_20:
 12983                           	line	145
 12984                           	
 12985  0A30                     i1l10661:	
 12986                           ;HMI.c: 144: {
 12987                           ;HMI.c: 145: CenterPressed = 1;
 12988  0A30  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 12989                           	line	146
 12990                           ;HMI.c: 146: CenterReleased = 0;
 12991  0A31  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 12992  0A32  2A39               	goto	i1l4506
 12993                           	line	147
 12994                           	
 12995  0A33                     i1l4504:	
 12996                           	line	148
 12997                           ;HMI.c: 147: }
 12998                           ;HMI.c: 148: }
 12999  0A33  2A39               	goto	i1l4506
 13000                           	line	149
 13001                           	
 13002  0A34                     i1l4503:	
 13003                           	line	151
 13004                           ;HMI.c: 149: else
 13005                           ;HMI.c: 150: {
 13006                           ;HMI.c: 151: CenterDebounceCount = 0;
 13007  0A34  1683               	bsf	status, 5	;RP0=1, select bank1
 13008  0A35  1303               	bcf	status, 6	;RP1=0, select bank1
 13009  0A36  01C7               	clrf	(_CenterDebounceCount)^080h	;volatile
 13010                           	line	152
 13011                           ;HMI.c: 152: CenterReleased = 1;
 13012  0A37  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 13013  0A38  2A39               	goto	i1l4506
 13014                           	line	153
 13015                           	
 13016  0A39                     i1l4505:	
 13017                           	line	154
 13018                           	
 13019  0A39                     i1l4506:	
 13020  0A39  0008               	return
 13021                           	opt stack 0
 13022                           GLOBAL	__end_of_Debounce
 13023  0A3A                     	__end_of_Debounce:
 13024 ;; =============== function _Debounce ends ============
 13025                           
 13026                           	signat	_Debounce,88
 13027                           psect	text1162,local,class=CODE,delta=2
 13028                           global __ptext1162
 13029  0000                     __ptext1162:
 13030                           	global	btemp
 13031  007E                     	btemp set 07Eh
 13032                           
 13033                           	DABS	1,126,2	;btemp
 13034                           	global	wtemp0
 13035  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 11 15:59:45 2015

 __end_of_lcd_write_control 11E1             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                _IRdistance 00B0                          fsr 0004         ___wmul@multiplicand 0022  
                       l700 11F6                         l703 12AD                         l704 12AD  
                       l705 12B1                         l706 12D0                         l690 1472  
                       l691 149B                         l692 1476                         l693 147A  
                       l694 147E                         l695 1482                         l696 1486  
                       l689 148A                         l697 14A8                         _GIE 005F  
                       _RB0 0030                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _abs 1439  
                       _pos 00BE                         fsr0 0004                         indf 0000  
              ___awmod@sign 0026            ??_robotMoveSpeed 005F             ?_lcd_set_cursor 0072  
              ___ftdiv@cntr 0040                ___ftdiv@sign 0045                        ?_abs 0026  
                      l3000 120C                        l1402 11A5                        l3010 04C6  
                      l1410 137F                        l3011 0429                        l3003 02F5  
                      l1411 137F                        l3004 04C9                        l3012 04C5  
                      l3013 0476                        l3005 0342                        l1405 08BD  
                      l3006 04C8                        l3014 04C4                        l2230 0025  
                      l3015 04C3                        l3007 038F                        l2231 003B  
                      l3008 04C7                        l3016 04C9                        l1408 136E  
                      l2240 0274                        l2232 004E                        l3009 03DC  
                      l1409 1355                        l2233 0284                        l2241 00A9  
                      l2250 01B3                        l2242 00D8                        l2234 004F  
                      l2227 1408                        l2235 029A                        l2251 027B  
                      l2243 00F2                        l2260 167D                        l2252 027C  
                      l2244 011F                        l2236 0055                        l1429 12FB  
                      l2261 16AA                        l2253 0282                        l2245 0162  
                      l2237 0084                        l2270 16BC                        l2262 167E  
                      l2254 02A3                        l2246 017C                        l2238 0094  
                      l2271 16BD                        l2263 16BB                        l2255 02A4  
                      l2247 0194                        l2239 00A4                        l2264 1680  
                      l2280 1552                        l2256 02A4                        l2248 01B4  
                      l2265 1682                        l2281 1554                        l2266 1692  
                      l2290 1788                        l2282 1556                        l2274 1542  
                      l2267 16A0                        l2259 1672                        l2291 175B  
                      l2283 1578                        l2275 154D                        l2268 16BD  
                      l2292 1772                        l2276 1565                        l2284 1562  
                      l2269 16A8                        l2293 1791                        l2285 1577  
                      l2277 154E                        l2286 1578                        l2278 1576  
                      l1399 11E0                        l2279 1550                        l2289 173D  
                      l6010 123C                        l6021 13AC                        l6013 0F60  
                      l6014 0FFF                        l3711 11C1                        l6015 0F97  
                      l6031 0733                        l4520 157E                        l3712 11C1  
                      l3720 162E                        l6024 095C                        l6016 0FFE  
                      l6032 063B                        l4521 157F                        l3713 11C6  
                      l3721 164E                        l6025 09A1                        l6017 0FFD  
                      l6033 0651                        l6041 0A97                        l4522 1590  
                      l3714 11CC                        l3722 165F                        l6026 0981  
                      l6050 146D                        l6018 0FFF                        l6042 0A4E  
                      l4523 1591                        l6027 09A0                        l6035 064D  
                      l6043 0A64                        l4524 15A3                        l6028 09A1  
                      l4532 061B                        l4540 0628                        l6036 0768  
                      l4517 15AB                        l4525 15A4                        l3717 1620  
                      l4533 04E3                        l6037 0732                        l6045 0A60  
                      l4526 15BF                        l4518 157D                        l3718 1627  
                      l4534 054A                        l6038 0773                        l6046 0ACC  
                      l4519 15BD                        l4527 15A9                        l3719 1644  
                      l4535 055D                        l6047 0AD7                        l4536 0628  
                      l4537 05A5                        l4538 05F0                        l4539 0619  
                      l2994 08D7                        l2995 090D                        l2996 08F9  
                      l7501 1608                        l2997 092D                        l7502 15DA  
                      l7503 15CE                        l7511 152B                        l7504 15DF  
                      l7512 1505                        l6800 0DFE                        l7600 0DAC  
                      l7505 15E0                        l7513 14F9                        l6801 0E16  
                      l7601 0DC3                        l7506 15F9                        l7514 150A  
                      l7610 0B64                        l6810 0EC5                        l6802 0DFF  
                      l7507 1607                        l7515 150B                        l7611 0B50  
                      l6811 0ED9                        l6803 0E30                        l7508 160F  
                      l7516 151C                        l7612 0B5D                        l7604 0AF5  
                      l6812 0EDF                        l6804 0E3B                        l7517 152A  
                      l7613 0B51                        l7605 0B7D                        l6805 0E63  
                      l6750 1223                        l7518 1532                        l7614 0B63  
                      l7606 0B40                        l7710 1705                        l6806 0E58  
                      l7615 0B74                        l7607 0B2C                        l7711 1713  
                      l7703 16CE                        l6807 0E75                        l7631 1338  
                      l6760 1241                        l7608 0B2D                        l7712 171E  
                      l7704 16D8                        l6808 0EBA                        l7632 1353  
                      l6761 124A                        l7609 0B3F                        l7713 1725  
                      l7705 1714                        l6809 0E7A                        l6753 1260  
                      l6762 125D                        l7706 16EE                        l6754 125F  
                      l7707 16E2                        l6755 1269                        l7708 16F3  
                      l6756 127F                        l6749 1218                        l7709 16F4  
                      l7830 07F0                        l7662 17BE                        l6759 1242  
                      l7495 1301                        l7831 0798                        l7663 17E8  
                      l7583 0C45                        l6784 12A7                        l7496 130B  
                      l7840 07D7                        l7832 078B                        l7664 17FF  
                      l7584 0CF1                        l7497 1320                        l7841 07F0  
                      l7833 079F                        l6793 0EC6                        l7585 0C5E  
                      l7593 0D0D                        l7498 1327                        l7834 07B6  
                      l6794 0DE8                        l7586 0CA4                        l7594 0DDF  
                      l7835 07A0                        l7827 078A                        l6795 0DFA  
                      l7587 0CC6                        l7595 0D26                        l7836 07BD  
                      l6796 0E01                        l7588 0CD5                        l7596 0D66  
                      l7837 07C9                        l7829 0782                        l6797 0DFC  
                      l7597 0D7B                        l7838 07BE                        l6798 0EDA  
                      l7598 0D92                        l7839 07CD                        l6799 0DFD  
                      l7599 0D97                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0862                        STR_2 0859  
                      STR_3 0874                        STR_4 087D                        STR_5 086B  
                      STR_6 0850                        STR_7 08A1                        STR_8 08A5  
                      STR_9 088D                        _BRGH 04C2                        _CREN 00C4  
                      u4020 1305                        u4100 15F1                        u4021 1304  
                      u4101 15F0                        u4120 1606                        u5000 0355  
                      u4121 1605                        u4105 15ED                        u5001 0354  
                      u4050 131F                        u4130 14F5                        u5010 0399  
                      u4051 131E                        u4035 130C                        u4115 15FA  
                      u4131 14F4                        u5011 0398                        u4060 15CA  
                      u5020 03A2                        u5100 0E26                        u4045 1313  
                      u4061 15C9                        u5021 03A1                        u5101 0E25  
                      u4150 1509                        u5030 03E6                        u5110 0E39  
                      u4151 1508                        u5031 03E5                        u5111 0E38  
                      u4080 15DE                        u4160 1515                        u5040 03EF  
                      u5120 0E56                        u5200 0C56                        u4081 15DD  
                      u4161 1514                        u4145 14FA                        u5041 03EE  
                      u5121 0E55                        u5201 0C55                        u5050 0433  
                      u5130 0E62                        u5210 0C74                        u4075 15CF  
                      u5051 0432                        u5131 0E61                        u4180 1529  
                      u4500 07CD                        u5060 043C                        u5140 0E69  
                      u5220 0C86                        u5300 0D48                        u4181 1528  
                      u4165 1511                        u4501 07CC                        u5061 043B  
                      u5141 0E68                        u5125 0E52                        u4510 07D1  
                      u4430 077A                        u5070 0480                        u5150 0EC4  
                      u5310 0D6A                        u4095 15E1                        u4175 151D  
                      u4511 07D0                        u5071 047F                        u5151 0EC3  
                      u5215 0C70                        u5311 0D69                        u4520 07E2  
                      u4440 0781                        u4600 0B46                        u5080 0489  
                      u5160 0ED8                        u5240 0CBA                        u5400 0DC2  
                      u4441 0780                        u4601 0B45                        u5081 0488  
                      u5161 0ED7                        u5241 0CB9                        u5225 0C82  
                      u5401 0DC1                        u5321 0D73                        u5305 0D44  
                      u3570 12B1                        u4530 07EF                        u5090 0DEE  
                      u5170 1269                        u5322 0D7A                        u5410 132F  
                      u3571 12B0                        u5091 0DED                        u5171 1268  
                      u5235 0CA5                        u5411 132E                        _PEIE 005E  
                      u4460 079E                        u4620 0B62                        u4540 0AEB  
                      u4700 16C5                        u5260 0CD4                        u5420 137E  
                      u5500 0537                        u4525 07DE                        u4461 079D  
                      u4621 0B61                        u4541 0AEA                        u4701 16C4  
                      u5261 0CD3                        u5245 0CB6                        u5421 137D  
                      u5501 0536                        u4630 0B68                        u4550 0B00  
                      u4710 16D2                        u5190 0C3D                        u5350 0D91  
                      u5270 0D05                        u5430 0F30                        u5510 1676  
                      u4455 0790                        u4615 0B53                        u4711 16D1  
                      u5255 0CC7                        u5191 0C3C                        u5351 0D90  
                      u5335 0D7C                        u5271 0D04                        u5431 0F2F  
                      u5511 1675                        u3760 158B                        u4480 07BC  
                      u4560 0B1B                        u4720 16DE                        u5360 0D9B  
                      u5280 0D1E                        u5440 0F67                        u5520 173B  
                      u5600 0A5B                        u3585 12BE                        u3761 158A  
                      u4481 07BB                        u4561 0B1A                        u4721 16DD  
                      u5185 144E                        u5361 0D9A                        u5345 0D84  
                      u5281 0D1D                        u5441 0F66                        u5505 0533  
                      u5521 173A                        u5601 0A5A                        u3770 15A0  
                      u4570 0B22                        u4650 1798                        u5290 0D36  
                      u5450 0F9E                        u5530 174E                        u5610 0A5F  
                      u3771 159F                        u4475 07AF                        u4571 0B21  
                      u4555 0AFC                        u4651 1797                        u5371 0DA4  
                      u5451 0F9D                        u5531 174D                        _RCIE 0465  
                      u3780 124A                        u4740 16F2                        u5372 0DAB  
                      u5460 08D5                        u5540 176B                        u5620 0ACB  
                      u5700 012E                        _RCIF 0065                        u3781 1249  
                      u4661 17B0                        u4741 16F1                        u5461 08D4  
                      u5541 176A                        u5525 1737                        u5621 0ACA  
                      u5701 012D                        u3790 11C5                        u3950 1213  
                      u4590 0B3E                        u4670 17C2                        u4662 17B1  
                      u4750 16FE                        u4910 1619                        u5470 08ED  
                      u5550 1787                        u5630 1546                        u5710 013D  
                      u3791 11C4                        u3951 1212                        u4495 07C1  
                      u4591 0B3D                        u4671 17C1                        u4663 17B6  
                      u4751 16FD                        u4735 16E3                        u4911 1618  
                      u5295 0D32                        u5471 08EC                        u5551 1786  
                      u5535 174A                        u5631 1545                        u5711 013C  
                      u3960 121E                        u4664 17B7                        u4920 164E  
                      u5480 090C                        u5560 0648                        u5720 0171  
                      u5640 0029                        u3961 121D                        u4585 0B2E  
                      u4681 17DA                        u4921 164D                        u5385 0DAD  
                      u5481 090B                        u5465 08D1                        u5561 0647  
                      u5625 0AC7                        u5721 0170                        u5705 012A  
                      u5641 0028                        u4690 17FA                        u4682 17DB  
                      u4770 1712                        u4930 093D                        u5490 04D4  
                      u5570 064C                        u5730 0177                        u5650 003F  
                      u4691 17F9                        u4683 17E0                        u4771 1711  
                      u4755 16FA                        u4931 093C                        u5395 0DB5  
                      u5555 1783                        u5731 0176                        u5715 0139  
                      u4684 17E1                        u4780 1718                        u4940 0962  
                      u5580 06E4                        u5740 0182                        u5660 00CD  
                      u4765 1706                        u4925 164A                        u4941 0961  
                      u5485 0908                        u5581 06E3                        u5741 0181  
                      u5725 016D                        u5661 00CC                        u4950 02B2  
                      u5590 0767                        u5750 018F                        u5670 00E7  
                      u4695 17F6                        u4935 0939                        u4951 02B1  
                      u5591 0766                        u5807 023A                        u5751 018E  
                      u5671 00E6                        u4960 02BB                        u5760 01A3  
                      u5680 0101                        u4961 02BA                        u5817 025D  
                      u5761 01A2                        u5681 0100                        u5665 00C9  
                      u4970 02FF                        u5770 01B2                        u5690 0110  
                      _OERR 00C1                        u5907 11DB                        u4971 02FE  
                      u5827 0EF5                        u5595 0763                        u5771 01B1  
                      u5755 018B                        u5691 010F                        u5675 00E3  
                      u4980 0308                        u5780 027A                        u5917 11F4  
                      u4981 0307                        u5837 0F18                        u5765 019F  
                      u5685 00FD                        u4990 034C                        u5927 149D  
                      u4991 034B                        u5847 0F42                        u5775 01AE  
                      u5695 010C                        u5857 0F79                        u5867 0FB0  
                      u5877 0FDF                        u5797 01D9                        u5887 1637  
                      u5897 11A1                        _TMR0 0001                  _ChargeMode 1533  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0223                        _Menu 1579      __end_of_lcd_write_data 11A6  
                      abs@v 0026                        _isr1 0B7E                        _main 0015  
              ___ftpack@arg 0020                        _init 13DA                ___ftpack@exp 0023  
                      btemp 007E              _CenterReleased 0381                        start 0012  
              ___ftmul@cntr 0054                ___ftmul@sign 0055               ??_ReadButtons 0073  
          ??_robotTurnSpeed 005D                ___fttol@exp1 0035                       ??_abs 0028  
              ___fttol@lval 0031       readAvgDistance@tempIR 0034                       ?_Menu 0072  
                     l11101 1614                       l11111 162B                       l11103 1619  
                     l11121 165A                       l11113 1633                       l11105 1620  
                     l11201 0E33                       l10411 17FC                       l11123 165B  
                     l11115 1650                       l11107 1627                       l11131 0962  
                     l11211 0E5C                       l11203 0E3A                       l10421 1220  
                     l10413 17FE                       l11061 1489                       l11125 165C  
                     l11117 1656                       l11109 162A                       l11133 0981  
                     l11141 02F5                       l11221 0E7A                       l11213 0E63  
                     l11205 0E3B                       l11301 0CC4                       l10431 12AB  
                     l10423 1222                       l11063 148A                       l11055 1471  
                     l11071 11E1                       l11119 1659                       l11127 092E  
                     l11151 0355                       l11143 02FF                       l11135 02A7  
                     l11223 0EAE                       l11215 0E69                       l11207 0E57  
                     l11231 0EDA                       l11303 0CC6                       l11311 0CF2  
                     l10433 12B4                       l10601 1242                       l11057 1486  
                     l11065 149B                       l11073 11E4                       l11081 11D0  
                     l11129 093D                       l11161 03E6                       l11153 038F  
                     l11145 0308                       l11137 02B2                       l11233 0EDF  
                     l11225 0EB5                       l11217 0E70                       l11209 0E58  
                     l11241 1274                       l11305 0CCE                       l11321 0D25  
                     l11313 0D05                       l11401 0EE3                       l10435 12C7  
                     l10603 124B                       l10611 11BC                       l11067 149F  
                     l11059 1488                       l11075 11E8                       l11083 11D3  
                     l11091 1199                       l11171 0476                       l11163 03EF  
                     l11155 0399                       l11147 0342                       l11139 02BB  
                     l11227 0EBA                       l11219 0E75                       l11243 1278  
                     l11235 125E                       l11251 1380                       l11307 0CD5  
                     l11331 0D5B                       l11323 0D26                       l11315 0D0C  
                     l11411 0F1D                       l11403 0EEF                       l10437 12D0  
                     l10429 12A8                       l10605 1253                       l10613 11BE  
                     l11069 14A8                       l11077 11EC                       l11085 11D5  
                     l11093 119B                       l11173 0480                       l11165 0429  
                     l11157 03A2                       l11149 034C                       l11181 0DEE  
                     l11229 0EC6                       l11245 127C                       l11237 1260  
                     l11261 13A0                       l11253 1386                       l11309 0CF1  
                     l11341 0D83                       l11333 0D61                       l11325 0D53  
                     l11317 0D0D                       l11421 0F53                       l11413 0F29  
                     l11405 0EFA                       l11501 04E9                       l10551 1283  
                     l10607 1259                       l10615 11C6                       l10711 12FC  
                     l11079 11F0                       l11087 11D6                       l11095 119C  
                     l11175 0489                       l11167 0433                       l11159 03DC  
                     l11191 0E1E                       l11183 0DF5                       l11247 127D  
                     l11239 126A                       l11263 13A6                       l11255 138A  
                     l11271 0C3D                       l11351 0DAC                       l11343 0D8B  
                     l11335 0D66                       l11327 0D54                       l11319 0D1E  
                     l11431 0F8A                       l11415 0F30                       l11423 0F60  
                     l11407 0F06                       l11511 054A                       l11503 0511  
                     l10561 1292                       l10553 128B                       l10609 125C  
                     l10617 11CA                       l10721 1327                       l10713 1301  
                     l11089 1196                       l11097 1224                       l11169 043C  
                     l11193 0E22                       l11185 0E00                       l11177 0DE3  
                     l11249 127F                       l11257 1390                       l11265 1439  
                     l11281 0C5E                       l11273 0C44                       l11353 0DB4  
                     l11345 0D92                       l11337 0D6A                       l11329 0D55  
                     l11361 1328                       l11441 0FC1                       l11425 0F67  
                     l11433 0F97                       l11417 0F3C                       l11409 0F0C  
                     l11521 05B1                       l11513 055D                       l11505 0522  
                     l11601 062D                       l10571 129D                       l10563 1295  
                     l10555 128C                       l10619 11CC                       l10715 1305  
                     l10731 15D5                       l10723 15C0                       l11099 1610  
                     l11195 0E26                       l11187 0E01                       l11179 0DE8  
                     l11259 1398                       l11267 146D                       l11291 0C91  
                     l11283 0C64                       l11275 0C45                       l11355 0DBC  
                     l11347 0D97                       l11339 0D7B                       l11363 132F  
                     l11371 08B7                       l11443 0FCD                       l11435 0F9E  
                     l11427 0F73                       l11419 0F47                       l11451 1205  
                     l11531 05F0                       l11523 05BC                       l11515 0563  
                     l11507 0528                       l11611 0651                       l11603 063B  
                     l10573 129E                       l10565 1298                       l10557 128E  
                     l10549 1280                       l10581 158B                       l10717 1312  
                     l10741 15F9                       l10733 15DA                       l10725 15C4  
                     l10901 0B2D                       l11197 0E2A                       l11189 0E16  
                     l11293 0C98                       l11285 0C69                       l11277 0C56  
                     l11269 0C2A                       l11357 0DC3                       l11349 0D9B  
                     l11365 1338                       l11373 1354                       l11381 12D1  
                     l11445 0FD3                       l11437 0FAA                       l11429 0F7E  
                     l11453 120C                       l11461 13E7                       l11533 05FC  
                     l11525 05CD                       l11517 057A                       l11509 0537  
                     l11541 1660                       l11621 068C                       l11613 065A  
                     l11605 0641                       l11701 004C                       l10567 1299  
                     l10559 128F                       l10591 15AA                       l10583 1591  
                     l10575 157C                       l10671 1218                       l10663 120D  
                     l10719 1320                       l10743 1600                       l10735 15E0  
                     l10727 15CA                       l10751 14F5                       l10911 0B5D  
                     l10903 0B40                       l11199 0E30                       l11295 0CA4  
                     l11287 0C7B                       l11279 0C5D                       l11359 0DDF  
                     l11367 1353                       l11375 1355                       l11391 12DD  
                     l11383 12D5                       l11447 0FD9                       l11439 0FB5  
                     l11471 13FB                       l11463 13E9                       l11455 13DA  
                     l11535 0607                       l11527 05D3                       l11519 05A5  
                     l11551 1682                       l11543 1665                       l11623 0691  
                     l11615 0665                       l11631 0768                       l11607 0648  
                     l11711 0094                       l11703 004F                       l10569 129C  
                     l10585 15A0                       l10577 157F                       l10593 15AB  
                     l10673 121E                       l10665 1213                       l10737 15F1  
                     l10729 15CE                       l10745 1608                       l10761 1515  
                     l10753 14F9                       l10841 0774                       l10905 0B46  
                     l10913 0B64                       l11297 0CAC                       l11289 0C8D  
                     l11369 08B6                       l11377 1365                       l11393 12E3  
                     l11385 12D8                       l11449 11F7                       l11473 1400  
                     l11465 13ED                       l11457 13DB                       l11481 08BE  
                     l11537 061A                       l11529 05E4                       l11561 16A4  
                     l11553 1690                       l11545 1672                       l11625 06CF  
                     l11617 0672                       l11609 064D                       l11641 0A5B  
                     l11633 0A3A                       l11721 00C0                       l11713 00A4  
                     l11705 0055                       l10587 15A4                       l10579 1587  
                     l10595 15BD                       l10675 1220                       l10667 1215  
                     l10747 160F                       l10739 15F7                       l10763 151C  
                     l10755 1500                       l10851 0798                       l10843 077A  
                     l10915 0B68                       l10907 0B4F                       l11299 0CBA  
                     l11379 136E                       l11395 12E9                       l11387 12D9  
                     l11475 1405                       l11467 13F1                       l11459 13DF  
                     l11491 08ED                       l11483 08C8                       l11539 061B  
                     l11563 16A5                       l11555 1692                       l11547 1676  
                     l11571 1726                       l11627 06E4                       l11619 067E  
                     l11651 0A85                       l11643 0A60                       l11635 0A42  
                     l11731 0101                       l11723 00CD                       l11715 00A9  
                     l11707 0068                       l10597 15BF                       l10589 15A8  
                     l10677 1223                       l10669 1217                       l10765 1523  
                     l10757 1505                       l10749 14ED                       l10861 07C9  
                     l10853 07A0                       l10845 0782                       l10917 0B74  
                     l10909 0B51                       l10941 17E8                       l10933 1792  
                     l11397 12EF                       l11389 12DC                       l11477 1406  
                     l11469 13F6                       l11493 08FF                       l11485 08D6  
                     l11565 16A7                       l11557 169E                       l11549 1677  
                     l11581 174E                       l11573 172E                       l11629 0733  
                     l11653 0A91                       l11645 0A64                       l11637 0A4E  
                     l11661 153B                       l11741 013D                       l11733 0110  
                     l11725 00D8                       l11717 00BC                       l11709 0084  
                     l10599 1240                       l10759 150B                       l10767 152B  
                     l10863 07D1                       l10855 07A4                       l10847 0789  
                     l10919 0B7D                       l10951 17FF                       l10943 17EA  
                     l10935 1798                       l11399 12F5                       l11479 1407  
                     l11495 090D                       l11487 08D7                       l11567 16A9  
                     l11559 16A0                       l11591 1772                       l11583 175B  
                     l11575 173C                       l11647 0A6D                       l11639 0A54  
                     l11655 0A97                       l11671 155C                       l11663 1542  
                     l11751 0177                       l11743 015A                       l11735 011A  
                     l11727 00E7                       l11719 00BE                       l10769 1532  
                     l10865 07D9                       l10857 07AE                       l10849 078B  
                     l10881 0AF4                       l10945 17EC                       l10937 17BE  
                     l10961 16D8                       l10953 16BE                       l11489 08E4  
                     l11497 04CA                       l11569 16AA                       l11593 177A  
                     l11585 1767                       l11577 173D                       l11649 0A78  
                     l11657 0ACC                       l11673 155D                       l11665 1546  
                     l11761 01A3                       l11753 017C                       l11745 015F  
                     l11737 011F                       l11729 00F2                       l11681 0015  
                     l10867 07EB                       l10859 07BE                       l10891 0B15  
                     l10883 0AF5                       l10947 17FA                       l10939 17C2  
                     l10971 16F4                       l10963 16DE                       l10955 16C5  
                     l11499 04E3                       l11587 176B                       l11579 1742  
                     l11595 1788                       l11675 1561                       l11667 1547  
                     l11659 1533                       l11771 0232                       l11763 01B4  
                     l11755 0182                       l11739 012E                       l11747 0162  
                     l11691 002A                       l11683 001D                       l10869 07EF  
                     l10893 0B17                       l10885 0B07                       l10877 0AD8  
                     l10949 17FC                       l10981 1718                       l10973 16FE  
                     l10965 16E2                       l10957 16CE                       l11597 1791  
                     l11589 176C                       l11677 1564                       l11669 1556  
                     l11781 027C                       l11773 0241                       l11765 01D1  
                     l11757 018F                       l11749 0171                       l11693 0030  
                     l11685 001F                       l10895 0B1B                       l10887 0B08  
                     l10879 0AEB                       l10983 171E                       l10975 1705  
                     l10967 16E9                       l10959 16D2                       l11599 0629  
                     l11679 1565                       l11783 0283                       l11775 0255  
                     l11767 01E0                       l11759 0194                       l11695 0035  
                     l11687 0025                       l10897 0B22                       l10889 0B0E  
                     l10985 1725                       l10977 170C                       l10969 16EE  
                     l11777 0264                       l11769 0221                       l11785 0284  
                     l11689 0029                       l11697 003B                       l10899 0B2B  
                     l10979 1714                       l11779 0274                       l11787 029A  
                     l11699 003F        __size_of_calibrateIR 005E                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072                       _EEADR 010D  
                     STR_10 0899                       STR_11 08A9                       STR_12 089D  
                     STR_13 083A                       STR_14 082A                       STR_15 0891  
                     STR_16 0885                       STR_17 0895                       STR_18 081A  
                     STR_19 0847             __end_of___awmod 1726                       _CARRY 0018  
           __end_of___ftdiv 0CF2             __end_of___ftmul 0DE0             __end_of___fttol 0B7E  
           __end_of___lwdiv 1610             __end_of___lwmod 1533                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 1792               ___awtoft@sign 003B  
             ___ftpack@sign 0024                       _total 00C0              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00D5             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0EE0            __end_of_Debounce 0A3A          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072                __end_of_Menu 15C0  
__size_of_lcd_write_control 0014            _shortMenuStrings 00DC                __end_of_isr1 0C2A  
              __end_of_main 02A7                __end_of_init 1409             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0067               ___fttol@sign1 0030  
                    ??_init 0023         __end_of_ReadButtons 1439               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of___awtoft 1354            __end_of___ftpack 07F1  
          __end_of_adc_read 12D1                 ?_ChargeMode 0072                      i1l2220 0BF9  
                    i1l2221 0BF8                      i1l2222 0C1E                      i1l2223 0C1D  
                    i1l2224 0C1E                      i1l2216 0BD1                      i1l2217 0BA5  
                    i1l2218 0BC2                      i1l2219 0BD0                      i1l4500 0A16  
                    i1l4501 0A15                      i1l4502 0A1A                      i1l4510 1438  
                    i1l4503 0A34                      i1l4511 141E                      i1l4504 0A33  
                    i1l4512 1426                      i1l4505 0A39                      i1l4513 142E  
                    i1l4506 0A39                      i1l4514 1436                      i1l4509 1416  
                    i1l4491 09BC                      i1l4492 09BB                      i1l4493 09C0  
                    i1l4494 09DA                      i1l4495 09D9                      i1l4496 09DE  
                    i1l4497 09F8                      i1l4498 09F7                      i1l4499 09FC  
                    i1l7511 14E5                      i1l7512 14BF                      i1l7513 14B3  
                    i1l7514 14C4                      i1l7515 14C5                      i1l7516 14D6  
                    i1l7517 14E4                      i1l7518 14EC                      u370_20 0C19  
                    u362_20 0B82                      u370_21 0C18                      u362_21 0B81  
                    u371_20 1412                      u363_20 0BA3                      u371_21 1411  
                    u363_21 0BA2                      u380_20 09A8                      u372_20 141A  
                    u364_20 0BBC                      u380_21 09A7                      u372_21 1419  
                    u364_21 0BBB                      u381_20 09B4                      u373_20 1422  
                    u365_20 0BC7                      u381_21 09B3                      u373_21 1421  
                    u365_21 0BC6                      u390_20 0A0E                      u382_20 09B8  
                    u374_20 142A                      u366_20 0BD7                      u390_21 0A0D  
                    u382_21 09B7                      u374_21 1429                      u366_21 0BD6  
               _DistLowByte 00C9                      u391_20 0A12                      u383_20 09C6  
                    u375_20 1432                      u367_20 0BEF                      u391_21 0A11  
                    u383_21 09C5                      u375_21 1431                      u367_21 0BEE  
                    u392_20 0A20                      u384_20 09D2                      u368_20 0BFD  
                    u392_21 0A1F                      u384_21 09D1                      u368_21 0BFC  
                    u393_20 0A2C                      u385_20 09D6                      u369_20 0C03  
                    u393_21 0A2B                      u385_21 09D5                      u369_21 0C02  
                    u394_20 0A30                      u386_20 09E4                      u490_20 14E3  
                    u394_21 0A2F                      u386_21 09E3                      u490_21 14E2  
                    u387_20 09F0                      u387_21 09EF                      u388_20 09F4  
                    u388_21 09F3                      u389_20 0A02                      u485_20 14AF  
                    u389_21 0A01                      u485_21 14AE                      u486_25 14B4  
                    u487_20 14C3                      u487_21 14C2                      u488_20 14CF  
                    u488_21 14CE                      u488_25 14CB                      u489_25 14D7  
                    _TMR0IE 005D                      _TMR0IF 005A                scan360@steps 005F  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038C  
          __end_of_lcd_init 12FC                      _adcVal 006A                      ___ftge 1792  
           _UpDebounceCount 00CE             RobotDrive@speed 0056                  _RobotDrive 1380  
                    ___wmul 12FC                   ??___awmod 0024                   ??___ftdiv 003C  
              _turnhighByte 00D4                   ??___ftmul 004C                ??_ADCconvert 002E  
                 ??___fttol 002C                   ??___lwdiv 002A                   ??___lwmod 0032  
          __end_of_init_adc 11F7              ??_readDistance 002A             ___awmod@divisor 0020  
  __end_of_lcd_write_string 1380             ___awmod@counter 0025                      _rotate 1610  
                    _rxfifo 00A0                      clrloop 118C                      _txfifo 01A0  
                    _rxiptr 006C                      _rxoptr 006D                 _BumpSensors 00C6  
                    _txiptr 006E                   ??_scan360 005B       ___ftmul@f3_as_product 0051  
                    _txoptr 006F            __end_of_ser_init 12A8            __end_of_ser_isrx 1224  
         __end_ofi1___lwmod 14ED                      saved_w 007E               main@shortwall 00E7  
              _AngleLowByte 00C5                 _LeftPressed 0384      RobotDrive@speedlowByte 0059  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 04CA                  ___ftge@ff1 0020                  ___ftge@ff2 0023  
                ___ftdiv@f1 0039                  ___ftdiv@f2 0036                  ___ftdiv@f3 0041  
                ___awtoft@c 0036                  ___ftmul@f1 0046                  ___ftmul@f2 0049  
                ___fttol@f1 0028              __pcstackCOMMON 0072                __pidataBANK1 07F1  
               _ReadButtons 1409         __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072               _buttonPressed 007D                  __pbssBANK0 006A  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00CA  
            main@direction1 00E3     robotMoveSpeed@remaining 0062          _RightDebounceCount 00CD  
                __pmaintext 0015                     ?___ftge 0020                 ?_RobotDrive 0056  
                   ?___wmul 0020                  __pintentry 0004                _DistHighByte 00C8  
                __ptext1120 1726       __end_of_UpdateDisplay 0629                  __ptext1121 1660  
                __ptext1130 1328                  __ptext1122 04CA                  __ptext1131 0CF2  
                __ptext1123 08BE                  __ptext1140 1224                  __ptext1132 0C2A  
                __ptext1124 13DA                  __ptext1141 1193                  __ptext1133 1439  
                __ptext1125 11F7                  __ptext1117 1533                  __ptext1150 15C0  
                __ptext1142 11CD                  __ptext1134 1380                  __ptext1126 0EE0  
                __ptext1118 0A3A                  __ptext1151 12FC                  __ptext1143 11E1  
                __ptext1135 125E                  __ptext1127 12D1                  __ptext1119 0629  
                __ptext1160 14A9                  __ptext1152 120D                  __ptext1144 146E  
                __ptext1136 0DE0                  __ptext1128 1354                  __ptext1161 09A2  
                __ptext1153 11B9                  __ptext1145 16BE                  __ptext1137 02A7  
                __ptext1129 08B3                  __ptext1162 0000                  __ptext1154 123D  
                __ptext1146 1792                  __ptext1138 092E                  __ptext1155 1579  
                __ptext1147 0AD8                  __ptext1139 1610                  __ptext1156 1280  
                __ptext1148 0774                  __ptext1157 12A8                  __ptext1149 14ED  
                __ptext1158 0B7E                  __ptext1159 1409          __size_of_ser_getch 0022  
                 ?___awtoft 0036                   ?___ftpack 0020                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 0021          __size_of_robo_init 0019  
                   i1l11041 14BF                     i1l11033 14A9                     i1l11043 14C5  
                   i1l11035 14AF                     i1l11051 14E5                     i1l11053 14EC  
                   i1l11045 14CF                     i1l11037 14B3                     i1l10501 0C03  
                   i1l11047 14D6                     i1l11039 14BA                     i1l10511 1409  
                   i1l10503 0C0B                     i1l11049 14DD                     i1l10521 141A  
                   i1l10513 140E                     i1l10505 0C0F                     i1l10531 1425  
                   i1l10523 141B                     i1l10515 1412                     i1l10507 0C13  
                   i1l10621 09A2                     i1l10541 1433                     i1l10533 142A  
                   i1l10525 141D                     i1l10517 1413                     i1l10509 0C19  
                   i1l10631 09C6                     i1l10623 09A8                     i1l10543 1435  
                   i1l10535 142B                     i1l10527 1422                     i1l10519 1415  
                   i1l10471 0B8D                     i1l10641 09EA                     i1l10633 09CC  
                   i1l10625 09AE                     i1l10545 1436                     i1l10537 142D  
                   i1l10529 1423                     i1l10481 0BBD                     i1l10473 0B8E  
                   i1l10465 0B7E                     i1l10651 0A0E                     i1l10643 09F0  
                   i1l10635 09D2                     i1l10627 09B4                     i1l10547 1438  
                   i1l10539 1432                     i1l10491 0BDF                     i1l10483 0BC2  
                   i1l10475 0BA3                     i1l10467 0B82                     i1l10661 0A30  
                   i1l10653 0A12                     i1l10645 09F4                     i1l10637 09D6  
                   i1l10629 09B8                     i1l10493 0BE7                     i1l10485 0BC7  
                   i1l10477 0BA5                     i1l10469 0B83                     i1l10655 0A20  
                   i1l10647 0A02                     i1l10639 09E4                     i1l10495 0BEF  
                   i1l10479 0BBC                     i1l10487 0BD1                     i1l10657 0A26  
                   i1l10649 0A08                     i1l10489 0BD7                     i1l10497 0BF9  
                   i1l10659 0A2C                     i1l10499 0BFD          __size_of_robotTurn 0074  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 120D                   ?_init_adc 0072  
        main@shortwall_3022 00EA                   ?_ser_init 0072                   ?_ser_isrx 0072  
           __size_of___ftge 006E               ??_calibrateIR 0059                     ___awmod 16BE  
                   ___ftdiv 0C2A             __size_of___wmul 002C                     ___ftmul 0CF2  
                   ___fttol 0AD8                     ___lwdiv 15C0                     ___lwmod 14ED  
 __size_of_adc_read_channel 003B                  ??___awtoft 0039                  ??___ftpack 0025  
                ??_adc_read 0022             __size_of_rotate 0050                     _scan360 1726  
                   _dpowers 0810                __size_of_abs 0035            ___awmod@dividend 0022  
                   _lowByte 00D2                     _ser_tmp 00D3                     _sprintf 0DE0  
                ??_lcd_init 0023         __size_of_RobotDrive 002D        end_of_initialization 13D6  
             _AngleHighByte 00C4                ??_ChargeMode 0059          robot_read@readType 0024  
         __end_of_ser_getch 1280                     init_ram 11AA                  ??_init_adc 0020  
   __size_of_robotMoveSpeed 014B           __end_of_ser_putch 125E     RobotDrive@speedhighByte 005A  
         __end_of_robo_init 123D                _LeftReleased 0385           __end_of_robotTurn 09A2  
                ??_ser_init 0020                  ??_ser_isrx 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038A    __size_of_readAvgDistance 0070  
                _robot_read 0EE0           ?_lcd_write_string 0027          __end_of_ChargeMode 1579  
       __end_of_calibrateIR 16BE          ??_lcd_write_string 0029                 AT25256A@CS0 0038  
               AT25256A@CS1 0039           adc_read@adc_value 0024     __size_of_robotTurnSpeed 009E  
                 i1___lwmod 14A9                  _totalSteps 00C2                  main@choice 00E9  
             ?_spi_transfer 0072                 ___ftdiv@exp 0044                 _VwallSensor 00CF  
               ___ftmul@exp 0050               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___ftge 1800              __end_of___wmul 1328           i1___lwmod@divisor 0072  
         i1___lwmod@counter 0077              __end_of_rotate 1660         start_initialization 13AD  
    UpdateDisplay@LCDOutput 0049                 __end_of_abs 146E       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072          _TotalDistTravelled 00B4  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023                   _UpPressed 038B  
                  ??___ftge 0026                ??_RobotDrive 0058              _RTC_FLAG_250MS 0387  
            _RTC_FLAG_500MS 0388                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 1660                 __pdataBANK1 00D6            _adc_read_channel 146E  
               ?_robot_read 0072                    ??_rotate 0026                _readDistance 11F7  
         __size_of___awtoft 002C           __size_of___ftpack 007D           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
             __pcstackBANK1 00E3      robotMoveSpeed@distance 005B          __end_of_RobotDrive 13AD  
         __size_of_lcd_init 002B              _robotMoveSpeed 0629                 sprintf@_val 003F  
               sprintf@flag 003D                 sprintf@prec 003E                _current_step 00E2  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                 _angleTurned 00B6                    ?___awmod 0020  
                  ?___ftdiv 0036                    ?___ftmul 0046           __size_of_ser_init 0028  
                  ?___fttol 0028           __size_of_ser_isrx 0017                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 0800                   _dist_high 00BA  
                  ?_scan360 0059         readDistance@readVal 002C              _robotTurnSpeed 0A3A  
       robotTurnSpeed@angle 0059         robotTurnSpeed@temp1 0060         robotTurnSpeed@speed 005B  
                ser_getch@c 0021            ___lwdiv@quotient 002B                 ??i1___lwmod 0076  
                  ?_sprintf 0034      __end_of_robotMoveSpeed 0774     __size_of_lcd_set_cursor 000B  
         interrupt_function 0004      __size_of_UpdateDisplay 015F              ___wmul@product 0024  
       __size_of_robot_read 0120                  ser_putch@c 0021                   _ser_getch 125E  
                 _ser_putch 123D                   _robo_init 1224                   _robotTurn 092E  
              _RightPressed 0389        __size_of_ReadButtons 0030        __end_of_spi_transfer 11CD  
    __end_of_robotTurnSpeed 0AD8                 __stringbase 080F           ___wmul@multiplier 0020  
          spi_transfer@data 0022            spi_transfer@temp 0021                    _Debounce 09A2  
         _LeftDebounceCount 00CB             ?_robotMoveSpeed 005B   __size_of_lcd_write_string 002C  
        scan360@lowestSteps 005D     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027                  ?_robo_init 0072  
                 init_fetch 11A6                  ?_robotTurn 0022                  _ADCconvert 02A7  
          __size_of___awmod 0068            __size_of___ftdiv 00C8            __size_of___ftmul 00EE  
          __size_of___fttol 00A6            __size_of___lwdiv 0050            __size_of___lwmod 0046  
                  ___awtoft 1328                    ___ftpack 0774               _UpdateDisplay 04CA  
                  _adc_read 12A8             ?_robotTurnSpeed 0059                 _currentMenu 00D0  
          __size_of_scan360 006C             ___lwdiv@divisor 0026             ___lwdiv@counter 002D  
               _menuStrings 00D6                    _highByte 00D1                    _lcd_init 12D1  
                  _dist_low 00BC            __size_of_sprintf 0100    __end_of_adc_read_channel 14A9  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 11E1  
             __size_of_isr1 00AC               __size_of_main 0292               __size_of_init 002F  
                  clear_ram 118B                    _ser_init 1280                    _ser_isrx 120D  
                  main@RT2A 00E5                    main@RT2P 00EC             _readAvgDistance 08BE  
              ?_calibrateIR 0072              ?_UpdateDisplay 0072                ??_robot_read 0022  
       _CenterDebounceCount 00C7                _RTC_FLAG_1MS 0386          UpdateDisplay@F1242 0190  
                  intlevel1 0000              _lcd_set_cursor 08B3                   sprintf@ap 003C  
                 sprintf@sp 0043              robotTurn@angle 0022            ___lwmod@dividend 0030  
        __end_of_robot_read 1000                   stringcode 080A                 ??_ser_getch 0020  
               ??_ser_putch 0020               _distTravelled 00B8                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotTurn 0024                 ?_ADCconvert 0072  
         _lcd_write_control 11CD            scan360@lowestVal 005B          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0044                    sprintf@f 0034  
       robotMoveSpeed@temp1 0065         robotMoveSpeed@speed 005D             ___lwmod@divisor 002E  
                _ROBOTerror 00CC             ___lwmod@counter 0033                    stringdir 080A  
                  stringtab 0800         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 08BE  
          _lcd_write_string 1354                _spi_transfer 11B9                 _RTC_Counter 00B2  
   __end_of_readAvgDistance 092E              _lcd_write_data 1193  
